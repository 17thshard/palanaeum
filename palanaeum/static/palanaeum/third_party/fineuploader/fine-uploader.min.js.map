{"version":3,"sources":["?","../client/js/util.js","../client/js/export.js","../client/js/error/error.js","../client/js/version.js","../client/js/features.js","../client/js/promise.js","../client/js/blob-proxy.js","../client/js/button.js","../client/js/upload-data.js","../client/js/uploader.basic.api.js","../client/js/uploader.basic.js","../client/js/ajax.requester.js","../client/js/upload-handler/upload.handler.js","../client/js/upload-handler/upload.handler.controller.js","../client/js/window.receive.message.js","../client/js/upload-handler/form.upload.handler.js","../client/js/upload-handler/xhr.upload.handler.js","../client/js/deletefile.ajax.requester.js","../client/js/image-support/megapix-image.js","../client/js/image-support/image.js","../client/js/image-support/exif.js","../client/js/identify.js","../client/js/image-support/validation.image.js","../client/js/session.js","../client/js/session.ajax.requester.js","../client/js/image-support/scaler.js","../client/js/third-party/ExifRestorer.js","../client/js/total-progress.js","../client/js/paste.js","../client/js/form-support.js","../client/js/traditional/traditional.form.upload.handler.js","../client/js/traditional/traditional.xhr.upload.handler.js","../client/js/traditional/all-chunks-done.ajax.requester.js","../client/js/dnd.js","../client/js/uploader.api.js","../client/js/uploader.js","../client/js/templating.js","../client/js/ui.handler.events.js","../client/js/ui.handler.click.filebuttons.js","../client/js/ui.handler.click.filename.js","../client/js/ui.handler.focusin.filenameinput.js","../client/js/ui.handler.focus.filenameinput.js","../client/js/ui.handler.edit.filename.js"],"names":["global","qq","element","hide","style","display","this","attach","type","fn","addEventListener","attachEvent","detach","removeEventListener","detachEvent","contains","descendant","compareDocumentPosition","insertBefore","elementB","parentNode","remove","removeChild","css","styles","Error","opacity","filter","Math","round","extend","hasClass","name","considerParent","re","RegExp","test","className","addClass","removeClass","replace","getByClass","first","candidates","result","querySelector","querySelectorAll","getElementsByTagName","each","idx","val","push","getFirstByClass","children","child","firstChild","nodeType","nextSibling","setText","text","innerText","textContent","clearText","hasAttribute","attrName","attrVal","exec","getAttribute","undefined","canvasToBlob","canvas","mime","quality","dataUriToBlob","toDataURL","dataUri","arrayBuffer","byteString","intArray","mimeString","createBlob","data","BlobBuilder","window","WebKitBlobBuilder","MozBlobBuilder","MSBlobBuilder","blobBuilder","append","getBlob","Blob","split","indexOf","atob","decodeURI","ArrayBuffer","length","Uint8Array","character","charCodeAt","log","message","level","console","isObject","variable","Object","prototype","toString","call","isFunction","isArray","value","buffer","constructor","isItemList","maybeItemList","isNodeList","maybeNodeList","item","namedItem","isString","maybeString","trimStr","string","String","trim","format","str","args","Array","slice","arguments","newStr","nextIdxToReplace","strBefore","substring","strAfter","isFile","maybeFile","File","isFileList","maybeFileList","FileList","isFileOrInput","maybeFileOrInput","isInput","maybeInput","notFile","evaluateType","normalizedType","toLowerCase","HTMLInputElement","tagName","isBlob","maybeBlob","isXhrUploadSupported","input","document","createElement","multiple","FormData","createXhrInstance","upload","XMLHttpRequest","ActiveXObject","error","isFolderDropSupported","dataTransfer","items","webkitGetAsEntry","isFileChunkingSupported","androidStock","webkitSlice","mozSlice","sliceBlob","fileOrBlob","start","end","slicer","arrayBufferToHex","bytesAsHex","bytes","byt","byteAsHexStr","readBlobToHex","blob","startOffset","initialBlob","fileReader","FileReader","promise","Promise","onload","success","onerror","failure","readAsArrayBuffer","second","extendNested","prop","override","target","sourceFn","super_","source","srcPropName","srcPropVal","arr","elt","from","len","hasOwnProperty","getUniqueId","c","r","random","v","ie","navigator","userAgent","ie7","ie8","ie10","ie11","edge","safari","vendor","chrome","opera","firefox","windows","platform","android","ios6","ios","ios7","ios8","ios800","iosChrome","iosSafari","iosSafariWebView","preventDefault","e","returnValue","toElement","div","html","innerHTML","iterableItem","callback","keyOrIndex","retVal","Storage","key","getItem","charAt","bind","oldFunc","context","newArgs","concat","apply","obj2url","obj","temp","prefixDone","uristrings","prefix","add","nextObj","i","nextTemp","encodeURIComponent","join","obj2FormData","formData","arrayKeyName","obj2Inputs","form","setAttribute","appendChild","parseJson","json","JSON","parse","eval","getExtension","filename","extIdx","lastIndexOf","substr","getFilename","blobOrFileInput","fileName","DisposeSupport","disposers","dispose","disposer","shift","addDisposer","disposeFunction","define","amd","module","exports","version","supportedFeatures","testSupportsFileInputElement","tempInput","supported","disabled","ex","isChrome21OrHigher","match","isChrome14OrHigher","isCrossOriginXhrSupported","xhr","withCredentials","isXdrSupported","XDomainRequest","isCrossOriginAjaxSupported","isFolderSelectionSupported","webkitdirectory","isLocalStorageSupported","localStorage","setItem","isDragAndDropSupported","span","supportsUploading","supportsUploadingBlobs","supportsFileDrop","supportsAjaxFileUploading","supportsFolderDrop","supportsChunking","supportsResume","supportsUploadViaPaste","supportsUploadCors","supportsDeleteFileXdr","supportsDeleteFileCorsXhr","supportsDeleteFileCors","supportsFolderSelection","supportsImagePreviews","supportsUploadProgress","postMessage","ajaxUploading","blobUploading","canDetermineSize","chunking","deleteFileCors","deleteFileCorsXdr","deleteFileCorsXhr","dialogElement","HTMLDialogElement","fileDrop","folderDrop","folderSelection","imagePreviews","imageValidation","itemSizeValidation","pause","progressBar","resume","scaling","tiffPreviews","unlimitedScaledImageSize","uploading","uploadCors","uploadCustomHeaders","uploadNonMultipart","uploadViaPaste","isGenericPromise","maybePromise","then","successArgs","failureArgs","successCallbacks","failureCallbacks","doneCallbacks","state","onSuccess","onFailure","done","BlobProxy","referenceBlob","onCreate","create","UploadButton","o","createInput","BUTTON_ID_ATTR_NAME","buttonId","options","title","self","setMultiple","folders","acceptFiles","position","right","top","fontFamily","fontSize","margin","padding","cursor","height","disposeSupport","onChange","hoverClass","focusClass","ios8BrowserCrashWorkaround","overflow","direction","getInput","getButtonId","isMultiple","optInput","removeAttribute","setAcceptFiles","reset","UploadData","uploaderProxy","getDataByIds","idOrIds","entries","id","getDataByUuids","uuids","uuid","byUuid","getDataByStatus","status","statusResults","statuses","index","statusEnum","statusResultIndexes","byStatus","dataIndex","byProxyGroupId","byBatchId","addFile","spec","SUBMITTING","originalName","size","batchId","proxyGroupId","onStatusChange","retrieve","optionalFilter","setStatus","newStatus","oldStatus","byStatusOldStatusIndex","splice","uuidChanged","newUuid","oldUuid","updateName","newName","updateSize","newSize","setParentId","targetId","parentId","getIdsInProxyGroup","getIdsInBatch","SUBMITTED","REJECTED","QUEUED","CANCELED","PAUSED","UPLOADING","UPLOAD_RETRYING","UPLOAD_SUCCESSFUL","UPLOAD_FAILED","DELETE_FAILED","DELETING","DELETED","basePublicApi","addBlobs","blobDataOrArray","params","endpoint","addFiles","addInitialFiles","cannedFileList","cannedFile","_addCannedFile","_maybeHandleIos8SafariWorkaround","_storedIds","_currentBatchId","processBlob","_handleNewFile","_options","blobs","defaultName","verifiedFiles","processBlobData","blobData","processCanvas","processCanvasData","canvasData","normalizedQuality","processFileOrInput","fileOrInput","files","file","normalizeData","fileContainer","_prepareItemsForUpload","cancel","_handler","cancelAll","storedIdsCopy","storedFileId","clearStoredFiles","continueUpload","uploadData","_uploadData","enabled","getName","_uploadFile","deleteFile","_onSubmitDelete","doesExist","fileOrBlobId","isValid","drawThumbnail","fileId","imgOrCanvas","maxSize","fromServer","customResizeFunction","fileOrUrl","promiseToReturn","_imageGenerator","_thumbnailUrls","scale","getFile","container","generate","modifiedContainer","reason","getButton","_getButton","_buttonIdsForFileIds","getEndpoint","_endpointStore","get","getInProgress","getParentId","uploadDataEntry","getUploads","getResumableFilesData","getSize","getNetUploads","_netUploaded","getRemainingAllowedItems","allowedItems","_currentItemLimit","_netUploadedOrQueued","getUuid","debug","pauseUpload","removeFileRef","expunge","_autoRetries","_retryTimeouts","_preventRetries","_buttons","button","_paramsStore","_pasteHandler","session","refreshOnReset","_refreshSessionData","_succeededSinceLastAllComplete","_failedSinceLastAllComplete","_totalProgress","retry","_manualRetry","scaleImage","specs","Scaler","setCustomHeaders","headers","_customHeadersStore","set","setDeleteFileCustomHeaders","_deleteFileCustomHeadersStore","setDeleteFileEndpoint","_deleteFileEndpointStore","setDeleteFileParams","_deleteFileParamsStore","setEndpoint","setForm","elementOrId","_updateFormSupportAndParams","setItemLimit","newItemLimit","setName","setParams","setUuid","fileRecord","_onDeleteComplete","errorMessage","uploadStoredFiles","_itemError","_uploadStoredFiles","basePrivateApi","sessionData","deleteFileEndpoint","deleteFileParams","thumbnailUrl","_annotateWithButtonId","associatedInput","qqButtonId","_getButtonId","_batchError","callbacks","onError","_createDeleteHandler","DeleteFileAjaxRequester","method","toUpperCase","maxConnections","uuidParamName","request","uuidName","customHeaders","paramsStore","endpointStore","cors","onDelete","_onDelete","onDeleteComplete","xhrOrXdr","isError","_createPasteHandler","PasteSupport","targetElement","paste","pasteReceived","_handleCheckedCallback","onPasteReceived","_handlePasteSuccess","identifier","_createStore","initialValue","_readOnlyValues_","store","catchall","perIdReadOnlyValues","readOnlyValues","copy","orig","getReadOnlyValues","includeReadOnlyValues","existing","values","addReadOnly","_createUploadDataTracker","_onUploadStatusChange","_maybeAllComplete","setTimeout","_createUploadButton","allowMultiple","workarounds","iosEmptyVideos","_isAllowedExtension","allowedExtensions","accept","validation","classes","buttonFocus","buttonHover","ios8BrowserCrash","inputName","_onInputChange","fileInputTitle","_disposeSupport","_createUploadHandler","additionalOptions","namespace","lastOnProgress","preventRetryParam","preventRetryResponseProperty","onProgress","loaded","total","_onProgress","onComplete","_onComplete","onCancel","cancelFinalizationEffort","_onCancel","onUploadPrep","_onUploadPrep","onUpload","_onUpload","onUploadChunk","chunkData","_onUploadChunk","onUploadChunkSuccess","onResume","onAutoRetry","responseJSON","_onAutoRetry","onUuidChanged","setSize","_setSize","getDataByUuid","isQueued","UploadHandlerController","_fileOrBlobRejected","_formatSize","sizeSymbols","max","toFixed","_generateExtraButtonSpecs","_extraButtonSpecs","extraButtons","extraButtonOptionEntry","extraButtonSpec","_initExtraButton","extraButtonsSpec","_defaultButtonId","buttonOrFileInputOrFile","inputs","fileInput","fileBlobOrInput","_getNotFinished","_getValidationBase","_getValidationDescriptor","fileWrapper","_getValidationDescriptors","fileWrappers","fileDescriptors","_handleCameraAccess","camera","acceptIosCamera","optionRoot","details","callbackRetVal","successParam","newFileWrapperList","actualFile","handler","_customNewFileHandler","_handleNewFileGeneric","addFileToHandler","_trackButton","fileList","extSuppliedName","extension","_handleDeleteSuccess","_handleDeleteFailed","_initFormSupportAndParams","_formSupport","FormSupport","attachedToForm","getFormInputsAsObject","autoUpload","newAutoUpload","newEndpoint","_isDeletePossible","expected","allowXdr","allowed","valid","allowedExt","extRegex","code","maybeNameOrNames","replacement","extensionsForMessage","placeholderMatch","messages","names","validationBase","allowedExtension","formatFileName","sizeLimit","minSizeLimit","placeholder","_onBeforeManualRetry","notFinished","_onAllComplete","ios8SafariUploads","alert","unsupportedBrowserIos8Safari","_maybeParseAndSendUploadError","response","errorReason","defaultResponseError","_maybeProcessNextItemAfterOnValidateCallback","validItem","stopOnFirstInvalidFile","validationDescriptor","onValidate","_onValidateCallbackSuccess","_onValidateCallbackFailure","successful","failed","onAllComplete","_shouldAutoRetry","retryWaitPeriod","autoAttemptDelay","_onBeforeAutoRetry","itemLimit","onManualRetry","clearTimeout","storedItemIndex","fileIndex","onIndividualProgress","_onSubmit","_onSubmitCallbackSuccess","_onSubmitted","onSubmitted","_storeForLater","onSuccessCallback","additionalMandatedParams","adjustedOnSuccessCallback","onSubmitDelete","_deleteHandler","sendDelete","_onTotalProgress","onTotalProgress","_onValidateBatchCallbackFailure","_onValidateBatchCallbackSuccess","validationDescriptors","proposedNetFilesUploadedOrQueued","tooManyItemsError","nextIndex","_validateFileOrBlobData","_upload","onValidateBatch","_preventLeaveInProgress","event","onLeave","Session","_session","addFileRecord","refresh","_sessionRequestComplete","onSessionRequestComplete","onNewSize","enableAuto","maxAutoAttempts","formElementOrId","onSubmit","idToUpload","stillSubmitting","validityChecker","allowEmpty","ImageValidation","validate","image","errorCode","_wrapCallbacks","safeCallback","errorMsg","exception","callbackName","callbackFunc","FineUploaderBasic","disableCancelForFormUploads","filenameParam","forceMultipart","paramsInBody","totalFileSizeName","maxHeight","maxWidth","minHeight","minWidth","maybeXhr","maybeXhrOrXdr","attemptNumber","fileOrBlobData","typeError","sizeError","minSizeError","emptyError","noFilesError","maxHeightImageError","maxWidthImageError","minHeightImageError","minWidthImageError","retryFailTooManyItems","concurrent","mandatory","paramNames","partIndex","partByteOffset","chunkSize","totalFileSize","totalParts","partSize","recordsExpireIn","resuming","fileOrBlobName","sendCredentials","interceptSubmit","customResizer","sendOriginal","orient","defaultType","defaultQuality","failureText","includeExif","sizes","ImageGenerator","_scaler","handleNewFile","TotalProgress","entry","AjaxRequester","isSimpleMethod","containsNonSimpleHeaders","containsNonSimple","header","isXdr","getCorsAjaxTransport","ontimeout","onprogress","getXhrOrXdr","suppliedXhr","requestData","dequeue","nextId","queue","sendRequest","xdrError","isResponseSuccessful","getParams","onDemandParams","additionalParams","mandatedParams","optXhr","url","payload","onSend","createUrl","additionalQueryParams","getXdrLoadHandler","getXdrErrorHandler","onreadystatechange","getXhrReadyStateChangeHandler","registerForUploadProgress","open","setHeaders","send","shouldParamsBeInQueryString","contentType","stringify","addToPath","readyState","lengthComputable","onDemandHeaders","additionalHeaders","allHeaders","acceptHeader","setRequestHeader","allowXRequestedWithAndCacheControl","responseCode","successfulResponseCodes","prepareToSend","validMethods","DELETE","PATCH","POST","PUT","GET","initTransport","path","cacheBuster","withPath","appendToPath","withParams","withQueryParams","_additionalQueryParams_","withHeaders","withPayload","thePayload","withCacheBuster","qqtimestamp","Date","getTime","canceled","UploadHandler","proxy","fileState","fileItem","onCancelRetVal","getThirdPartyFileId","_getFileState","_setThirdPartyFileId","thirdPartyFileId","_wasCanceled","preventRetryResponse","controller","chunkingPossible","concurrentChunkingPossible","chunked","chunkIdx","_getChunkData","attemptingResume","chunkProgress","_getChunkDataForCallback","finalize","finalizeChunks","normaizedResponse","normalizeResponse","_maybeDeletePersistedChunkData","cleanup","handleFailure","clearCachedChunk","inProgressIdx","responseToReport","inProgress","remaining","unshift","ignoreFailure","keys","_getXhrs","ckid","ckXhr","abort","_cancelled","moveInProgressToRemaining","connectionManager","free","hasMoreParts","nextPart","nextIdx","_getTotalChunks","reevaluateChunking","sendNext","inProgressChunks","available","uploadChunk","inProgressChunkIdx","_maybePersistChunkedState","clearXhr","_open","_openChunks","_waiting","openChunkEntriesCount","openChunksCount","openChunkIndexes","dontAllowNext","allowNext","waitingIndex","connectionsIndex","getProxyOrBlob","getWaitingOrConnected","waitingOrConnected","chunks","parseInt","isUsingConnection","pop","openChunksEntry","simple","uploadFile","maybeNewUuid","_clearXhrs","getProxy","initHandler","handlerType","traditional","handlerModuleSubtype","_removeExpiredChunkingRecords","isDeferredEligibleForUpload","maybeDefer","generatedBlob","updateBlob","maybeSendDeferredFiles","errorResponse","idsInGroup","uploadedThisId","idInGroup","now","originalResponse","_shouldChunkThisFile","blobToUpload","cancelRetVal","isProxied","isResumable","WindowReceiveMessage","callbackWrapperDetachers","receiveMessage","onMessageCallbackWrapper","stopReceivingMessages","detacher","FormUploadHandler","expungeFile","detachLoadEvents","isCors","postMessageCallbackTimers","corsMessageReceiver","iframe","getElementById","_getIframeName","getFileIdForIframeName","iframeName","initIframeForUpload","body","registerPostMessageCallback","onloadCallbacks","onloadCallback","_parseJsonResponse","_detachLoadEvent","formHandlerInstanceId","_attachLoadEvent","responseDescriptor","contentDocument","_createIframe","_initFormForUpload","targetName","innerHtmlOrMessage","XhrUploadHandler","xhrId","ajaxRequester","_getAjaxRequester","chunkFiles","resumeEnabled","blobOrProxy","_initTempState","_maybePrepareForResume","cachedChunks","tempState","xhrs","ajaxRequesters","responseParser","lastChunkIdx","_getXhr","resumableFilesData","_iterateResumeRecords","notResumable","optInProgress","optRemaining","reverse","paused","totalChunks","parts","newBlob","chunkId","_createXhr","optChunkIdx","_registerXhr","chunkIndex","fileSize","startBytes","endBytes","part","count","startByte","endByte","_getLocalStorageId","formatVersion","_getMimeType","_getPersistableData","ceil","_markNotResumable","localStorageId","removeItem","persistedData","lastUpdated","_registerProgressHandler","progressCalculator","totalSuccessfullyLoadedForFile","loadedForRequest","totalForRequest","estActualChunkLoaded","totalLoadedForFile","chunkLoaded","optAjaxRequester","xhrsId","expirationDays","expirationDate","setDate","getDate","getMandatedParams","_method","requester","detectSubsampling","img","ctx","iw","naturalWidth","ih","naturalHeight","width","getContext","drawImage","getImageData","detectVerticalSquash","alpha","ratio","sy","ey","py","renderImageToDataURL","doSquash","renderImageToCanvas","maybeCalculateDownsampledDimensions","maxPixels","origHeight","origWidth","newHeight","sqrt","newWidth","modifiedDimensions","save","resize","renderImageToCanvasWithCustomResizer","imageHeight","imageWidth","orientation","targetHeight","targetWidth","transformCoordinate","tmpCtx","sx","dx","d","tmpCanvas","vertSquashRatio","dw","dh","dy","clearRect","restore","qqImageRendered","resizeInfo","sourceCanvas","sourceCanvasContext","targetCanvas","translate","rotate","PI","MegaPixImage","srcImage","errorCallback","Image","URL","createObjectURL","webkitURL","src","listeners","imageLoadListeners","render","opt","imgWidth","imgHeight","optionsKey","optionsValue","oldTargetSrc","onrender","isImg","el","isCanvas","isImgCorsSupported","crossOrigin","isCanvasSupported","determineMimeOfFileName","nameWithPath","pathSegments","isCrossOrigin","targetProtocol","targetHostname","targetPort","targetAnchor","href","protocol","port","hostname","location","registerImgLoadListeners","registerCanvasDrawImageListener","registerThumbnailRenderedListener","registered","draw","drawPreview","Identify","megapixErrorHandler","isPreviewable","dummyExif","exif","Exif","mpImg","Orientation","failureMsg","drawOnCanvasOrImgFromUrl","canvasOrImg","tempImg","tempImgRender","drawOnImgFromUrlWithCssScaling","drawFromUrl","fileBlobOrUrl","_testing","parseLittleEndian","hex","pow","seekToApp1","offset","theOffset","thePromise","segmentLength","getApp1Offset","isLittleEndian","app1Start","getDirEntryCount","littleEndian","getIfd","dirEntries","getDirEntries","ifdHex","getTagValues","TAG_VAL_OFFSET","tagsToFind","TAG_IDS","vals","tagValHex","tagValLength","idHex","tagsToFindIdx","TAG_INFO","274","parser","onParseFailure","app1Offset","dirEntryCount","tagValues","isIdentifiable","magicBytes","questionableBytes","identifiable","magicBytesEntries","magicBytesArrayEntry","previewable","isPreviewableSync","PREVIEWABLE_MIME_TYPES","fileMime","isRecognizedImage","image/jpeg","image/gif","image/png","image/bmp","image/tiff","hasNonZeroLimits","limits","atLeastOne","limit","getWidthHeight","sizeDetermination","getFailingLimit","dimensions","failingLimit","limitName","limitValue","limitMatcher","dimensionPropName","actualValue","validationEffort","isJsonResponseValid","handleFileItems","fileItems","someItemsIgnored","err","refreshEffort","refreshCompleteCallback","requesterOptions","SessionAjaxRequester","queryServer","responseText","includeOriginal","failedToScaleText","_getSortedSizes","getFileRecords","originalFileUuid","originalFileName","originalBlobOrBlobData","records","originalBlob","sizeRecord","outputType","_determineOutputType","requestedType","refType","_getName","_generateScaledImage","failedText","api","scaledIds","originalId","record","blobSize","scaledId","qqparentuuid","qqparentsize","param","scalingEffort","scalingOptions","scaler","referenceType","scaledVersionProperties","startOfExt","versionType","scaledName","scaledExt","nameAppendage","sort","a","b","sourceFile","imageGenerator","scaledImageDataUri","signalSuccess","_insertExifHeader","scaledImageDataUriWithExif","originalImage","reader","insertionEffort","originalImageDataUri","ExifRestorer","readAsDataURL","_dataUriToBlob","_createBlob","KEY_STR","encode64","chr1","chr2","enc1","enc2","enc3","output","chr3","enc4","isNaN","origFileBase64","resizedFileBase64","expectedBase64Header","rawImage","decode64","segments","slice2Segments","exifManipulation","exifArray","getExifArray","newImageArray","insertExif","aBuffer","seg","x","imageData","buf","separatePoint","mae","ato","array","rawImageArray","head","endPoint","base64test","perFileProgress","totalLoaded","totalSize","lastLoadedSent","lastTotalSent","callbackProxy","noRetryableFiles","retryable","none","failedId","updateTotalProgress","onNew","newLoaded","newTotal","oldLoaded","oldTotal","isImage","registerPasteHandler","detachPasteHandler","clipboardData","getAsFile","unregisterPasteHandler","startUpload","determineNewEndpoint","formEl","validateForm","nativeSubmit","checkValidity","maybeUploadOnSubmit","submit","determineFormEl","_form2Obj","notIrrelevantType","irrelevantTypes","radioOrCheckbox","ignoreValue","checked","selectValue","select","selected","elements","getIframeContentJson","doc","innerHtml","contentWindow","nodeValue","createForm","responseFromMessage","multipart","addChunkingSpecificParams","allChunksDoneRequester","AllChunksDoneAjaxRequester","createReadyStateChangedHandler","onUploadOrChunkComplete","getChunksCompleteParams","isErrorUploadResponse","parseResponse","sendChunksCompleteRequest","complete","setParamsAndGetEntityToSend","setUploadHeaders","extraHeaders","toSend","promises","endpointHandler","DragAndDrop","uploadDroppedFiles","uploadDropZone","filesAsArray","dropLog","dropDisabled","processingDroppedFilesComplete","getElement","traverseFileTree","parseEntryPromise","fullPath","indexOfNameInFullPath","qqPath","droppedFiles","fileError","isDirectory","getFilesInDirectory","entriesLeft","accumEntries","existingPromise","dirReader","createReader","readEntries","newEntries","handleDataTransfer","pendingFolderPromises","handleDataTransferPromise","processingDroppedFiles","allowMultipleItems","dropError","setupDropzone","dropArea","dropZone","UploadDropZone","HIDE_ZONES_EVENT_NAME","onEnter","dropActive","stopPropagation","onLeaveNotDescendants","onDrop","HIDE_BEFORE_ENTER_ATTR","uploadDropZones","isFileDrag","dragEvent","fileDrag","types","leavingDocumentOut","relatedTarget","y","setupDragDrop","dropZones","dropZoneElements","maybeHideDropZones","HTMLElement","setupExtraDropzone","removeDropzone","dzs","targetEl","errorSpecifics","dragoverShouldBeCanceled","disableDropOutside","dropOutsideDisabled","dropEffect","isValidFileDrag","effectTest","dt","isSafari","effectAllowed","isOrSetDropDisabled","isDisabled","preventDrop","triggerHidezonesEvent","triggerUsingOldApi","hideZonesEvent","createEvent","initEvent","CustomEvent","dispatchEvent","attachEvents","effect","elementFromPoint","clientX","clientY","uiPublicApi","_parent","_templating","addCacheToDom","clearFiles","addExtraDropzone","_dnd","removeExtraDropzone","getItemByFileId","isHiddenForever","getFileContainer","_setupDragAndDrop","_totalFilesInBatch","_filesInBatchAddedToUi","_setupClickAndEditEventHandlers","formattedFilename","updateFilename","uploadPaused","continued","uploadContinued","getId","fileContainerOrChildEl","getFileId","getDropTarget","qqDropTarget","uiPrivateApi","_removeFileItem","removeFile","_fileButtonsClickHandler","FileButtonsClickHandler","_bindFileButtonsClickEvent","_focusinEventSupported","_isEditFilenameEnabled","_filenameClickHandler","_bindFilenameClickEvent","_filenameInputFocusInHandler","_bindFilenameInputFocusInEvent","_filenameInputFocusHandler","_bindFilenameInputFocusEvent","dragAndDrop","extraDropzones","templating","defaultDropZone","getDropZone","showDropProcessing","hideDropProcessing","errorData","lvl","onDeleteFile","onRetry","onPause","onContinue","onGetName","isEditFilenamePossible","FilenameClickHandler","FilenameInputFocusHandler","_filenameEditHandler","onGetUploadStatus","onSetName","onEditingStatusChange","isEditing","qqInput","getEditInput","qqFileContainer","hideFilename","hideEditIcon","showFilename","showEditIcon","markFilenameEditable","hideRetry","setStatusText","_classes","retrying","hidePause","FilenameInputFocusInHandler","hideSpinner","resetTotalProgress","reportDirectoryPaths","qqpath","_addToList","addHandler","updateProgress","hideCancel","hideProgress","waitingForResponse","_displayFileSize","completeUpload","_markFileAsSuccessful","fail","showCancel","isRetryPossible","showRetry","_controlFailureTextDisplay","parentRetVal","newResult","showDeleteButton","_maybeUpdateThumbnail","showSpinner","allowPause","retryNumForDisplay","maxAuto","retryNote","_showCancelLink","showAutoRetryNote","autoRetryNote","resetProgress","_onSubmitDeleteSuccess","forceConfirm","_showDeleteConfirm","_sendDeleteRequest","deletingFailedText","hideDeleteButton","deletingStatusText","confirmMessage","deleteRequestArgs","showConfirm","canned","prependData","prependIndex","dontDisplay","hideScaled","prependFiles","disableCancel","_handledProxyGroup","_clearList","addFileToCache","updateThumbnail","thumbnails","generatePreview","fileSizeOnSubmit","loadedSize","sizeForDisplay","_formatProgress","uploadedSize","formatProgress","mode","responseProperty","failureReason","failedUploadTextDisplay","failUpload","enableTooltip","_showTooltip","showMessage","_setupPastePrompt","namePromptMessage","defaultVal","showPrompt","fileStatus","placeholders","waitUntilResponse","FineUploader","listElement","template","editable","tooManyFilesError","unsupportedBrowser","promptForName","maxCount","notAvailablePath","waitingPath","timeBetweenThumbs","hasDialog","showDialog","confirm","defaultValue","prompt","Templating","templateIdOrEl","containerEl","fileContainerEl","maxThumbs","waitUntilUpdate","thumbnailNotAvailable","waitingForThumbnail","renderFailure","isEditElementsExist","isRetryElementExist","templateHtml","showThumbnails","serverScale","FILE_ID_ATTR","FILE_CLASS_PREFIX","THUMBNAIL_MAX_SIZE_ATTR","THUMBNAIL_SERVER_SCALE_ATTR","HIDE_DROPZONE_ATTR","DROPZPONE_TEXT_ATTR","IN_PROGRESS_CLASS","HIDDEN_FOREVER_CLASS","fileBatch","content","createDocumentFragment","map","isCancelDisabled","generatedThumbnails","thumbnailQueueMonitorRunning","thumbGenerationQueue","thumbnailMaxSize","selectorClasses","alertDialog","dialogCancelButton","confirmDialog","dialogMessage","dialogOkButton","promptDialog","uploader","drop","list","progressBarContainer","totalProgressBarContainer","totalProgressBar","spinner","continueButton","deleteButton","statusText","editFilenameInput","editNameIcon","dropText","dropProcessing","dropProcessingSpinner","thumbnail","previewGeneration","cachedThumbnailNotAvailableImg","cachedWaitingForThumbnailImg","cacheThumbnailPlaceholders","notAvailableUrl","waitingUrl","updatedImg","displayWaitingImg","waitingImgPlacement","maybeScalePlaceholderViaCss","show","generateNewPreview","getThumbnail","qqThumbnailId","maybeSetDisplayNotAvailableImg","generateNextQueuedPreview","queuedThumbRequest","update","processUpdateQueuedPreviewRequest","processNewQueuedPreviewRequest","getCancel","getTemplateEl","getContinue","getDialog","getDelete","getDropProcessing","getEditIcon","getPause","getProgress","getRetry","getSpinner","cssClass","previewing","notAvailableImgPlacement","parseAndGetTemplate","scriptEl","scriptHtml","fileListNode","tempTemplateEl","fileListHtml","defaultButton","dropTextEl","uploaderEl","fileTemplate","prependFile","parentEl","beforeEl","optFileOrBlob","relatedThumbnailId","useCachedPreview","showWaitingImg","setProgressBarWidth","percent","bar","progressBarSelector","targetThumbnailId","cachedThumbnailId","targetThumbnail","cachedThumbnail","hideTotalProgress","cantRenderEl","prependInfo","hideForever","batch","thumb","fileEl","fileNameEl","waitingImg","currentNode","getFileList","filenameEl","isFileName","icon","isEditIcon","isEditInput","isCancel","allowContinueButton","isPause","isContinueButton","isDeleteButton","isRetry","textEl","dialog","messageEl","inputEl","cancelBtn","okBtn","closeHandler","cancelClickHandler","okClickHandler","close","showModal","UiEventHandler","s","protectedApi","eventType","srcElement","onHandled","attachTo","getFileIdFromItem","qqFileId","getDisposeSupport","examineEvent","buttonHandlers","buttonType","firstLetterCapButtonType","inheritedInternalApi","handleFilenameEdit","FilenameEditHandler","handleInputFocus","getFilenameSansExtension","filenameSansExt","getOriginalExtension","origName","handleNameUpdate","newFilenameInputEl","origExtension","registerInputBlurHandler","registerInputEnterKeyHandler","keyCode","which","focusInput","focus"],"mappings":"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","file":"fine-uploader.min.js","sourcesContent":[null,"/*globals window, navigator, document, FormData, File, HTMLInputElement, XMLHttpRequest, Blob, Storage, ActiveXObject */\n/* jshint -W079 */\nvar qq = function(element) {\n    \"use strict\";\n\n    return {\n        hide: function() {\n            element.style.display = \"none\";\n            return this;\n        },\n\n        /** Returns the function which detaches attached event */\n        attach: function(type, fn) {\n            if (element.addEventListener) {\n                element.addEventListener(type, fn, false);\n            } else if (element.attachEvent) {\n                element.attachEvent(\"on\" + type, fn);\n            }\n            return function() {\n                qq(element).detach(type, fn);\n            };\n        },\n\n        detach: function(type, fn) {\n            if (element.removeEventListener) {\n                element.removeEventListener(type, fn, false);\n            } else if (element.attachEvent) {\n                element.detachEvent(\"on\" + type, fn);\n            }\n            return this;\n        },\n\n        contains: function(descendant) {\n            // The [W3C spec](http://www.w3.org/TR/domcore/#dom-node-contains)\n            // says a `null` (or ostensibly `undefined`) parameter\n            // passed into `Node.contains` should result in a false return value.\n            // IE7 throws an exception if the parameter is `undefined` though.\n            if (!descendant) {\n                return false;\n            }\n\n            // compareposition returns false in this case\n            if (element === descendant) {\n                return true;\n            }\n\n            if (element.contains) {\n                return element.contains(descendant);\n            } else {\n                /*jslint bitwise: true*/\n                return !!(descendant.compareDocumentPosition(element) & 8);\n            }\n        },\n\n        /**\n         * Insert this element before elementB.\n         */\n        insertBefore: function(elementB) {\n            elementB.parentNode.insertBefore(element, elementB);\n            return this;\n        },\n\n        remove: function() {\n            element.parentNode.removeChild(element);\n            return this;\n        },\n\n        /**\n         * Sets styles for an element.\n         * Fixes opacity in IE6-8.\n         */\n        css: function(styles) {\n            /*jshint eqnull: true*/\n            if (element.style == null) {\n                throw new qq.Error(\"Can't apply style to node as it is not on the HTMLElement prototype chain!\");\n            }\n\n            /*jshint -W116*/\n            if (styles.opacity != null) {\n                if (typeof element.style.opacity !== \"string\" && typeof (element.filters) !== \"undefined\") {\n                    styles.filter = \"alpha(opacity=\" + Math.round(100 * styles.opacity) + \")\";\n                }\n            }\n            qq.extend(element.style, styles);\n\n            return this;\n        },\n\n        hasClass: function(name, considerParent) {\n            var re = new RegExp(\"(^| )\" + name + \"( |$)\");\n            return re.test(element.className) || !!(considerParent && re.test(element.parentNode.className));\n        },\n\n        addClass: function(name) {\n            if (!qq(element).hasClass(name)) {\n                element.className += \" \" + name;\n            }\n            return this;\n        },\n\n        removeClass: function(name) {\n            var re = new RegExp(\"(^| )\" + name + \"( |$)\");\n            element.className = element.className.replace(re, \" \").replace(/^\\s+|\\s+$/g, \"\");\n            return this;\n        },\n\n        getByClass: function(className, first) {\n            var candidates,\n                result = [];\n\n            if (first && element.querySelector) {\n                return element.querySelector(\".\" + className);\n            }\n            else if (element.querySelectorAll) {\n                return element.querySelectorAll(\".\" + className);\n            }\n\n            candidates = element.getElementsByTagName(\"*\");\n\n            qq.each(candidates, function(idx, val) {\n                if (qq(val).hasClass(className)) {\n                    result.push(val);\n                }\n            });\n            return first ? result[0] : result;\n        },\n\n        getFirstByClass: function(className) {\n            return qq(element).getByClass(className, true);\n        },\n\n        children: function() {\n            var children = [],\n                child = element.firstChild;\n\n            while (child) {\n                if (child.nodeType === 1) {\n                    children.push(child);\n                }\n                child = child.nextSibling;\n            }\n\n            return children;\n        },\n\n        setText: function(text) {\n            element.innerText = text;\n            element.textContent = text;\n            return this;\n        },\n\n        clearText: function() {\n            return qq(element).setText(\"\");\n        },\n\n        // Returns true if the attribute exists on the element\n        // AND the value of the attribute is NOT \"false\" (case-insensitive)\n        hasAttribute: function(attrName) {\n            var attrVal;\n\n            if (element.hasAttribute) {\n\n                if (!element.hasAttribute(attrName)) {\n                    return false;\n                }\n\n                /*jshint -W116*/\n                return (/^false$/i).exec(element.getAttribute(attrName)) == null;\n            }\n            else {\n                attrVal = element[attrName];\n\n                if (attrVal === undefined) {\n                    return false;\n                }\n\n                /*jshint -W116*/\n                return (/^false$/i).exec(attrVal) == null;\n            }\n        }\n    };\n};\n\n(function() {\n    \"use strict\";\n\n    qq.canvasToBlob = function(canvas, mime, quality) {\n        return qq.dataUriToBlob(canvas.toDataURL(mime, quality));\n    };\n\n    qq.dataUriToBlob = function(dataUri) {\n        var arrayBuffer, byteString,\n            createBlob = function(data, mime) {\n                var BlobBuilder = window.BlobBuilder ||\n                        window.WebKitBlobBuilder ||\n                        window.MozBlobBuilder ||\n                        window.MSBlobBuilder,\n                    blobBuilder = BlobBuilder && new BlobBuilder();\n\n                if (blobBuilder) {\n                    blobBuilder.append(data);\n                    return blobBuilder.getBlob(mime);\n                }\n                else {\n                    return new Blob([data], {type: mime});\n                }\n            },\n            intArray, mimeString;\n\n        // convert base64 to raw binary data held in a string\n        if (dataUri.split(\",\")[0].indexOf(\"base64\") >= 0) {\n            byteString = atob(dataUri.split(\",\")[1]);\n        }\n        else {\n            byteString = decodeURI(dataUri.split(\",\")[1]);\n        }\n\n        // extract the MIME\n        mimeString = dataUri.split(\",\")[0]\n            .split(\":\")[1]\n            .split(\";\")[0];\n\n        // write the bytes of the binary string to an ArrayBuffer\n        arrayBuffer = new ArrayBuffer(byteString.length);\n        intArray = new Uint8Array(arrayBuffer);\n        qq.each(byteString, function(idx, character) {\n            intArray[idx] = character.charCodeAt(0);\n        });\n\n        return createBlob(arrayBuffer, mimeString);\n    };\n\n    qq.log = function(message, level) {\n        if (window.console) {\n            if (!level || level === \"info\") {\n                window.console.log(message);\n            }\n            else\n            {\n                if (window.console[level]) {\n                    window.console[level](message);\n                }\n                else {\n                    window.console.log(\"<\" + level + \"> \" + message);\n                }\n            }\n        }\n    };\n\n    qq.isObject = function(variable) {\n        return variable && !variable.nodeType && Object.prototype.toString.call(variable) === \"[object Object]\";\n    };\n\n    qq.isFunction = function(variable) {\n        return typeof (variable) === \"function\";\n    };\n\n    /**\n     * Check the type of a value.  Is it an \"array\"?\n     *\n     * @param value value to test.\n     * @returns true if the value is an array or associated with an `ArrayBuffer`\n     */\n    qq.isArray = function(value) {\n        return Object.prototype.toString.call(value) === \"[object Array]\" ||\n            (value && window.ArrayBuffer && value.buffer && value.buffer.constructor === ArrayBuffer);\n    };\n\n    // Looks for an object on a `DataTransfer` object that is associated with drop events when utilizing the Filesystem API.\n    qq.isItemList = function(maybeItemList) {\n        return Object.prototype.toString.call(maybeItemList) === \"[object DataTransferItemList]\";\n    };\n\n    // Looks for an object on a `NodeList` or an `HTMLCollection`|`HTMLFormElement`|`HTMLSelectElement`\n    // object that is associated with collections of Nodes.\n    qq.isNodeList = function(maybeNodeList) {\n        return Object.prototype.toString.call(maybeNodeList) === \"[object NodeList]\" ||\n            // If `HTMLCollection` is the actual type of the object, we must determine this\n            // by checking for expected properties/methods on the object\n            (maybeNodeList.item && maybeNodeList.namedItem);\n    };\n\n    qq.isString = function(maybeString) {\n        return Object.prototype.toString.call(maybeString) === \"[object String]\";\n    };\n\n    qq.trimStr = function(string) {\n        if (String.prototype.trim) {\n            return string.trim();\n        }\n\n        return string.replace(/^\\s+|\\s+$/g, \"\");\n    };\n\n    /**\n     * @param str String to format.\n     * @returns {string} A string, swapping argument values with the associated occurrence of {} in the passed string.\n     */\n    qq.format = function(str) {\n\n        var args =  Array.prototype.slice.call(arguments, 1),\n            newStr = str,\n            nextIdxToReplace = newStr.indexOf(\"{}\");\n\n        qq.each(args, function(idx, val) {\n            var strBefore = newStr.substring(0, nextIdxToReplace),\n                strAfter = newStr.substring(nextIdxToReplace + 2);\n\n            newStr = strBefore + val + strAfter;\n            nextIdxToReplace = newStr.indexOf(\"{}\", nextIdxToReplace + val.length);\n\n            // End the loop if we have run out of tokens (when the arguments exceed the # of tokens)\n            if (nextIdxToReplace < 0) {\n                return false;\n            }\n        });\n\n        return newStr;\n    };\n\n    qq.isFile = function(maybeFile) {\n        return window.File && Object.prototype.toString.call(maybeFile) === \"[object File]\";\n    };\n\n    qq.isFileList = function(maybeFileList) {\n        return window.FileList && Object.prototype.toString.call(maybeFileList) === \"[object FileList]\";\n    };\n\n    qq.isFileOrInput = function(maybeFileOrInput) {\n        return qq.isFile(maybeFileOrInput) || qq.isInput(maybeFileOrInput);\n    };\n\n    qq.isInput = function(maybeInput, notFile) {\n        var evaluateType = function(type) {\n            var normalizedType = type.toLowerCase();\n\n            if (notFile) {\n                return normalizedType !== \"file\";\n            }\n\n            return normalizedType === \"file\";\n        };\n\n        if (window.HTMLInputElement) {\n            if (Object.prototype.toString.call(maybeInput) === \"[object HTMLInputElement]\") {\n                if (maybeInput.type && evaluateType(maybeInput.type)) {\n                    return true;\n                }\n            }\n        }\n        if (maybeInput.tagName) {\n            if (maybeInput.tagName.toLowerCase() === \"input\") {\n                if (maybeInput.type && evaluateType(maybeInput.type)) {\n                    return true;\n                }\n            }\n        }\n\n        return false;\n    };\n\n    qq.isBlob = function(maybeBlob) {\n        if (window.Blob && Object.prototype.toString.call(maybeBlob) === \"[object Blob]\") {\n            return true;\n        }\n    };\n\n    qq.isXhrUploadSupported = function() {\n        var input = document.createElement(\"input\");\n        input.type = \"file\";\n\n        return (\n            input.multiple !== undefined &&\n                typeof File !== \"undefined\" &&\n                typeof FormData !== \"undefined\" &&\n                typeof (qq.createXhrInstance()).upload !== \"undefined\");\n    };\n\n    // Fall back to ActiveX is native XHR is disabled (possible in any version of IE).\n    qq.createXhrInstance = function() {\n        if (window.XMLHttpRequest) {\n            return new XMLHttpRequest();\n        }\n\n        try {\n            return new ActiveXObject(\"MSXML2.XMLHTTP.3.0\");\n        }\n        catch (error) {\n            qq.log(\"Neither XHR or ActiveX are supported!\", \"error\");\n            return null;\n        }\n    };\n\n    qq.isFolderDropSupported = function(dataTransfer) {\n        return dataTransfer.items &&\n            dataTransfer.items.length > 0 &&\n            dataTransfer.items[0].webkitGetAsEntry;\n    };\n\n    qq.isFileChunkingSupported = function() {\n        return !qq.androidStock() && //Android's stock browser cannot upload Blobs correctly\n            qq.isXhrUploadSupported() &&\n            (File.prototype.slice !== undefined || File.prototype.webkitSlice !== undefined || File.prototype.mozSlice !== undefined);\n    };\n\n    qq.sliceBlob = function(fileOrBlob, start, end) {\n        var slicer = fileOrBlob.slice || fileOrBlob.mozSlice || fileOrBlob.webkitSlice;\n\n        return slicer.call(fileOrBlob, start, end);\n    };\n\n    qq.arrayBufferToHex = function(buffer) {\n        var bytesAsHex = \"\",\n            bytes = new Uint8Array(buffer);\n\n        qq.each(bytes, function(idx, byt) {\n            var byteAsHexStr = byt.toString(16);\n\n            if (byteAsHexStr.length < 2) {\n                byteAsHexStr = \"0\" + byteAsHexStr;\n            }\n\n            bytesAsHex += byteAsHexStr;\n        });\n\n        return bytesAsHex;\n    };\n\n    qq.readBlobToHex = function(blob, startOffset, length) {\n        var initialBlob = qq.sliceBlob(blob, startOffset, startOffset + length),\n            fileReader = new FileReader(),\n            promise = new qq.Promise();\n\n        fileReader.onload = function() {\n            promise.success(qq.arrayBufferToHex(fileReader.result));\n        };\n\n        fileReader.onerror = promise.failure;\n\n        fileReader.readAsArrayBuffer(initialBlob);\n\n        return promise;\n    };\n\n    qq.extend = function(first, second, extendNested) {\n        qq.each(second, function(prop, val) {\n            if (extendNested && qq.isObject(val)) {\n                if (first[prop] === undefined) {\n                    first[prop] = {};\n                }\n                qq.extend(first[prop], val, true);\n            }\n            else {\n                first[prop] = val;\n            }\n        });\n\n        return first;\n    };\n\n    /**\n     * Allow properties in one object to override properties in another,\n     * keeping track of the original values from the target object.\n     *\n     * Note that the pre-overriden properties to be overriden by the source will be passed into the `sourceFn` when it is invoked.\n     *\n     * @param target Update properties in this object from some source\n     * @param sourceFn A function that, when invoked, will return properties that will replace properties with the same name in the target.\n     * @returns {object} The target object\n     */\n    qq.override = function(target, sourceFn) {\n        var super_ = {},\n            source = sourceFn(super_);\n\n        qq.each(source, function(srcPropName, srcPropVal) {\n            if (target[srcPropName] !== undefined) {\n                super_[srcPropName] = target[srcPropName];\n            }\n\n            target[srcPropName] = srcPropVal;\n        });\n\n        return target;\n    };\n\n    /**\n     * Searches for a given element (elt) in the array, returns -1 if it is not present.\n     */\n    qq.indexOf = function(arr, elt, from) {\n        if (arr.indexOf) {\n            return arr.indexOf(elt, from);\n        }\n\n        from = from || 0;\n        var len = arr.length;\n\n        if (from < 0) {\n            from += len;\n        }\n\n        for (; from < len; from += 1) {\n            if (arr.hasOwnProperty(from) && arr[from] === elt) {\n                return from;\n            }\n        }\n        return -1;\n    };\n\n    //this is a version 4 UUID\n    qq.getUniqueId = function() {\n        return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function(c) {\n            /*jslint eqeq: true, bitwise: true*/\n            var r = Math.random() * 16 | 0, v = c == \"x\" ? r : (r & 0x3 | 0x8);\n            return v.toString(16);\n        });\n    };\n\n    //\n    // Browsers and platforms detection\n    qq.ie = function() {\n        return navigator.userAgent.indexOf(\"MSIE\") !== -1 ||\n            navigator.userAgent.indexOf(\"Trident\") !== -1;\n    };\n\n    qq.ie7 = function() {\n        return navigator.userAgent.indexOf(\"MSIE 7\") !== -1;\n    };\n\n    qq.ie8 = function() {\n        return navigator.userAgent.indexOf(\"MSIE 8\") !== -1;\n    };\n\n    qq.ie10 = function() {\n        return navigator.userAgent.indexOf(\"MSIE 10\") !== -1;\n    };\n\n    qq.ie11 = function() {\n        return qq.ie() && navigator.userAgent.indexOf(\"rv:11\") !== -1;\n    };\n\n    qq.edge = function() {\n        return navigator.userAgent.indexOf(\"Edge\") >= 0;\n    };\n\n    qq.safari = function() {\n        return navigator.vendor !== undefined && navigator.vendor.indexOf(\"Apple\") !== -1;\n    };\n\n    qq.chrome = function() {\n        return navigator.vendor !== undefined && navigator.vendor.indexOf(\"Google\") !== -1;\n    };\n\n    qq.opera = function() {\n        return navigator.vendor !== undefined && navigator.vendor.indexOf(\"Opera\") !== -1;\n    };\n\n    qq.firefox = function() {\n        return (!qq.edge() && !qq.ie11() && navigator.userAgent.indexOf(\"Mozilla\") !== -1 && navigator.vendor !== undefined && navigator.vendor === \"\");\n    };\n\n    qq.windows = function() {\n        return navigator.platform === \"Win32\";\n    };\n\n    qq.android = function() {\n        return navigator.userAgent.toLowerCase().indexOf(\"android\") !== -1;\n    };\n\n    // We need to identify the Android stock browser via the UA string to work around various bugs in this browser,\n    // such as the one that prevents a `Blob` from being uploaded.\n    qq.androidStock = function() {\n        return qq.android() && navigator.userAgent.toLowerCase().indexOf(\"chrome\") < 0;\n    };\n\n    qq.ios6 = function() {\n        return qq.ios() && navigator.userAgent.indexOf(\" OS 6_\") !== -1;\n    };\n\n    qq.ios7 = function() {\n        return qq.ios() && navigator.userAgent.indexOf(\" OS 7_\") !== -1;\n    };\n\n    qq.ios8 = function() {\n        return qq.ios() && navigator.userAgent.indexOf(\" OS 8_\") !== -1;\n    };\n\n    // iOS 8.0.0\n    qq.ios800 = function() {\n        return qq.ios() && navigator.userAgent.indexOf(\" OS 8_0 \") !== -1;\n    };\n\n    qq.ios = function() {\n        /*jshint -W014 */\n        return navigator.userAgent.indexOf(\"iPad\") !== -1\n            || navigator.userAgent.indexOf(\"iPod\") !== -1\n            || navigator.userAgent.indexOf(\"iPhone\") !== -1;\n    };\n\n    qq.iosChrome = function() {\n        return qq.ios() && navigator.userAgent.indexOf(\"CriOS\") !== -1;\n    };\n\n    qq.iosSafari = function() {\n        return qq.ios() && !qq.iosChrome() && navigator.userAgent.indexOf(\"Safari\") !== -1;\n    };\n\n    qq.iosSafariWebView = function() {\n        return qq.ios() && !qq.iosChrome() && !qq.iosSafari();\n    };\n\n    //\n    // Events\n\n    qq.preventDefault = function(e) {\n        if (e.preventDefault) {\n            e.preventDefault();\n        } else {\n            e.returnValue = false;\n        }\n    };\n\n    /**\n     * Creates and returns element from html string\n     * Uses innerHTML to create an element\n     */\n    qq.toElement = (function() {\n        var div = document.createElement(\"div\");\n        return function(html) {\n            div.innerHTML = html;\n            var element = div.firstChild;\n            div.removeChild(element);\n            return element;\n        };\n    }());\n\n    //key and value are passed to callback for each entry in the iterable item\n    qq.each = function(iterableItem, callback) {\n        var keyOrIndex, retVal;\n\n        if (iterableItem) {\n            // Iterate through [`Storage`](http://www.w3.org/TR/webstorage/#the-storage-interface) items\n            if (window.Storage && iterableItem.constructor === window.Storage) {\n                for (keyOrIndex = 0; keyOrIndex < iterableItem.length; keyOrIndex++) {\n                    retVal = callback(iterableItem.key(keyOrIndex), iterableItem.getItem(iterableItem.key(keyOrIndex)));\n                    if (retVal === false) {\n                        break;\n                    }\n                }\n            }\n            // `DataTransferItemList` & `NodeList` objects are array-like and should be treated as arrays\n            // when iterating over items inside the object.\n            else if (qq.isArray(iterableItem) || qq.isItemList(iterableItem) || qq.isNodeList(iterableItem)) {\n                for (keyOrIndex = 0; keyOrIndex < iterableItem.length; keyOrIndex++) {\n                    retVal = callback(keyOrIndex, iterableItem[keyOrIndex]);\n                    if (retVal === false) {\n                        break;\n                    }\n                }\n            }\n            else if (qq.isString(iterableItem)) {\n                for (keyOrIndex = 0; keyOrIndex < iterableItem.length; keyOrIndex++) {\n                    retVal = callback(keyOrIndex, iterableItem.charAt(keyOrIndex));\n                    if (retVal === false) {\n                        break;\n                    }\n                }\n            }\n            else {\n                for (keyOrIndex in iterableItem) {\n                    if (Object.prototype.hasOwnProperty.call(iterableItem, keyOrIndex)) {\n                        retVal = callback(keyOrIndex, iterableItem[keyOrIndex]);\n                        if (retVal === false) {\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n    };\n\n    //include any args that should be passed to the new function after the context arg\n    qq.bind = function(oldFunc, context) {\n        if (qq.isFunction(oldFunc)) {\n            var args =  Array.prototype.slice.call(arguments, 2);\n\n            return function() {\n                var newArgs = qq.extend([], args);\n                if (arguments.length) {\n                    newArgs = newArgs.concat(Array.prototype.slice.call(arguments));\n                }\n                return oldFunc.apply(context, newArgs);\n            };\n        }\n\n        throw new Error(\"first parameter must be a function!\");\n    };\n\n    /**\n     * obj2url() takes a json-object as argument and generates\n     * a querystring. pretty much like jQuery.param()\n     *\n     * how to use:\n     *\n     *    `qq.obj2url({a:'b',c:'d'},'http://any.url/upload?otherParam=value');`\n     *\n     * will result in:\n     *\n     *    `http://any.url/upload?otherParam=value&a=b&c=d`\n     *\n     * @param  Object JSON-Object\n     * @param  String current querystring-part\n     * @return String encoded querystring\n     */\n    qq.obj2url = function(obj, temp, prefixDone) {\n        /*jshint laxbreak: true*/\n        var uristrings = [],\n            prefix = \"&\",\n            add = function(nextObj, i) {\n                var nextTemp = temp\n                    ? (/\\[\\]$/.test(temp)) // prevent double-encoding\n                    ? temp\n                    : temp + \"[\" + i + \"]\"\n                    : i;\n                if ((nextTemp !== \"undefined\") && (i !== \"undefined\")) {\n                    uristrings.push(\n                        (typeof nextObj === \"object\")\n                            ? qq.obj2url(nextObj, nextTemp, true)\n                            : (Object.prototype.toString.call(nextObj) === \"[object Function]\")\n                            ? encodeURIComponent(nextTemp) + \"=\" + encodeURIComponent(nextObj())\n                            : encodeURIComponent(nextTemp) + \"=\" + encodeURIComponent(nextObj)\n                    );\n                }\n            };\n\n        if (!prefixDone && temp) {\n            prefix = (/\\?/.test(temp)) ? (/\\?$/.test(temp)) ? \"\" : \"&\" : \"?\";\n            uristrings.push(temp);\n            uristrings.push(qq.obj2url(obj));\n        } else if ((Object.prototype.toString.call(obj) === \"[object Array]\") && (typeof obj !== \"undefined\")) {\n            qq.each(obj, function(idx, val) {\n                add(val, idx);\n            });\n        } else if ((typeof obj !== \"undefined\") && (obj !== null) && (typeof obj === \"object\")) {\n            qq.each(obj, function(prop, val) {\n                add(val, prop);\n            });\n        } else {\n            uristrings.push(encodeURIComponent(temp) + \"=\" + encodeURIComponent(obj));\n        }\n\n        if (temp) {\n            return uristrings.join(prefix);\n        } else {\n            return uristrings.join(prefix)\n                .replace(/^&/, \"\")\n                .replace(/%20/g, \"+\");\n        }\n    };\n\n    qq.obj2FormData = function(obj, formData, arrayKeyName) {\n        if (!formData) {\n            formData = new FormData();\n        }\n\n        qq.each(obj, function(key, val) {\n            key = arrayKeyName ? arrayKeyName + \"[\" + key + \"]\" : key;\n\n            if (qq.isObject(val)) {\n                qq.obj2FormData(val, formData, key);\n            }\n            else if (qq.isFunction(val)) {\n                formData.append(key, val());\n            }\n            else {\n                formData.append(key, val);\n            }\n        });\n\n        return formData;\n    };\n\n    qq.obj2Inputs = function(obj, form) {\n        var input;\n\n        if (!form) {\n            form = document.createElement(\"form\");\n        }\n\n        qq.obj2FormData(obj, {\n            append: function(key, val) {\n                input = document.createElement(\"input\");\n                input.setAttribute(\"name\", key);\n                input.setAttribute(\"value\", val);\n                form.appendChild(input);\n            }\n        });\n\n        return form;\n    };\n\n    /**\n     * Not recommended for use outside of Fine Uploader since this falls back to an unchecked eval if JSON.parse is not\n     * implemented.  For a more secure JSON.parse polyfill, use Douglas Crockford's json2.js.\n     */\n    qq.parseJson = function(json) {\n        /*jshint evil: true*/\n        if (window.JSON && qq.isFunction(JSON.parse)) {\n            return JSON.parse(json);\n        } else {\n            return eval(\"(\" + json + \")\");\n        }\n    };\n\n    /**\n     * Retrieve the extension of a file, if it exists.\n     *\n     * @param filename\n     * @returns {string || undefined}\n     */\n    qq.getExtension = function(filename) {\n        var extIdx = filename.lastIndexOf(\".\") + 1;\n\n        if (extIdx > 0) {\n            return filename.substr(extIdx, filename.length - extIdx);\n        }\n    };\n\n    qq.getFilename = function(blobOrFileInput) {\n        /*jslint regexp: true*/\n\n        if (qq.isInput(blobOrFileInput)) {\n            // get input value and remove path to normalize\n            return blobOrFileInput.value.replace(/.*(\\/|\\\\)/, \"\");\n        }\n        else if (qq.isFile(blobOrFileInput)) {\n            if (blobOrFileInput.fileName !== null && blobOrFileInput.fileName !== undefined) {\n                return blobOrFileInput.fileName;\n            }\n        }\n\n        return blobOrFileInput.name;\n    };\n\n    /**\n     * A generic module which supports object disposing in dispose() method.\n     * */\n    qq.DisposeSupport = function() {\n        var disposers = [];\n\n        return {\n            /** Run all registered disposers */\n            dispose: function() {\n                var disposer;\n                do {\n                    disposer = disposers.shift();\n                    if (disposer) {\n                        disposer();\n                    }\n                }\n                while (disposer);\n            },\n\n            /** Attach event handler and register de-attacher as a disposer */\n            attach: function() {\n                var args = arguments;\n                /*jslint undef:true*/\n                this.addDisposer(qq(args[0]).attach.apply(this, Array.prototype.slice.call(arguments, 1)));\n            },\n\n            /** Add disposer to the collection */\n            addDisposer: function(disposeFunction) {\n                disposers.push(disposeFunction);\n            }\n        };\n    };\n}());\n","/* globals define, module, global, qq */\n(function() {\n    \"use strict\";\n    if (typeof define === \"function\" && define.amd) {\n        define(function() {\n            return qq;\n        });\n    }\n    else if (typeof module !== \"undefined\" && module.exports) {\n        module.exports = qq;\n    }\n    else {\n        global.qq = qq;\n    }\n}());\n","/* globals qq */\n/**\n * Fine Uploader top-level Error container.  Inherits from `Error`.\n */\n(function() {\n    \"use strict\";\n\n    qq.Error = function(message) {\n        this.message = \"[Fine Uploader \" + qq.version + \"] \" + message;\n    };\n\n    qq.Error.prototype = new Error();\n}());\n","/*global qq */\nqq.version = \"5.14.1\";\n","/* globals qq */\nqq.supportedFeatures = (function() {\n    \"use strict\";\n\n    var supportsUploading,\n        supportsUploadingBlobs,\n        supportsFileDrop,\n        supportsAjaxFileUploading,\n        supportsFolderDrop,\n        supportsChunking,\n        supportsResume,\n        supportsUploadViaPaste,\n        supportsUploadCors,\n        supportsDeleteFileXdr,\n        supportsDeleteFileCorsXhr,\n        supportsDeleteFileCors,\n        supportsFolderSelection,\n        supportsImagePreviews,\n        supportsUploadProgress;\n\n    function testSupportsFileInputElement() {\n        var supported = true,\n            tempInput;\n\n        try {\n            tempInput = document.createElement(\"input\");\n            tempInput.type = \"file\";\n            qq(tempInput).hide();\n\n            if (tempInput.disabled) {\n                supported = false;\n            }\n        }\n        catch (ex) {\n            supported = false;\n        }\n\n        return supported;\n    }\n\n    //only way to test for Filesystem API support since webkit does not expose the DataTransfer interface\n    function isChrome21OrHigher() {\n        return (qq.chrome() || qq.opera()) &&\n            navigator.userAgent.match(/Chrome\\/[2][1-9]|Chrome\\/[3-9][0-9]/) !== undefined;\n    }\n\n    //only way to test for complete Clipboard API support at this time\n    function isChrome14OrHigher() {\n        return (qq.chrome() || qq.opera()) &&\n            navigator.userAgent.match(/Chrome\\/[1][4-9]|Chrome\\/[2-9][0-9]/) !== undefined;\n    }\n\n    //Ensure we can send cross-origin `XMLHttpRequest`s\n    function isCrossOriginXhrSupported() {\n        if (window.XMLHttpRequest) {\n            var xhr = qq.createXhrInstance();\n\n            //Commonly accepted test for XHR CORS support.\n            return xhr.withCredentials !== undefined;\n        }\n\n        return false;\n    }\n\n    //Test for (terrible) cross-origin ajax transport fallback for IE9 and IE8\n    function isXdrSupported() {\n        return window.XDomainRequest !== undefined;\n    }\n\n    // CORS Ajax requests are supported if it is either possible to send credentialed `XMLHttpRequest`s,\n    // or if `XDomainRequest` is an available alternative.\n    function isCrossOriginAjaxSupported() {\n        if (isCrossOriginXhrSupported()) {\n            return true;\n        }\n\n        return isXdrSupported();\n    }\n\n    function isFolderSelectionSupported() {\n        // We know that folder selection is only supported in Chrome via this proprietary attribute for now\n        return document.createElement(\"input\").webkitdirectory !== undefined;\n    }\n\n    function isLocalStorageSupported() {\n        try {\n            return !!window.localStorage &&\n                // unpatched versions of IE10/11 have buggy impls of localStorage where setItem is a string\n                qq.isFunction(window.localStorage.setItem);\n        }\n        catch (error) {\n            // probably caught a security exception, so no localStorage for you\n            return false;\n        }\n    }\n\n    function isDragAndDropSupported() {\n        var span = document.createElement(\"span\");\n\n        return (\"draggable\" in span || (\"ondragstart\" in span && \"ondrop\" in span)) &&\n            !qq.android() && !qq.ios();\n    }\n\n    supportsUploading = testSupportsFileInputElement();\n\n    supportsAjaxFileUploading = supportsUploading && qq.isXhrUploadSupported();\n\n    supportsUploadingBlobs = supportsAjaxFileUploading && !qq.androidStock();\n\n    supportsFileDrop = supportsAjaxFileUploading && isDragAndDropSupported();\n\n    supportsFolderDrop = supportsFileDrop && isChrome21OrHigher();\n\n    supportsChunking = supportsAjaxFileUploading && qq.isFileChunkingSupported();\n\n    supportsResume = supportsAjaxFileUploading && supportsChunking && isLocalStorageSupported();\n\n    supportsUploadViaPaste = supportsAjaxFileUploading && isChrome14OrHigher();\n\n    supportsUploadCors = supportsUploading && (window.postMessage !== undefined || supportsAjaxFileUploading);\n\n    supportsDeleteFileCorsXhr = isCrossOriginXhrSupported();\n\n    supportsDeleteFileXdr = isXdrSupported();\n\n    supportsDeleteFileCors = isCrossOriginAjaxSupported();\n\n    supportsFolderSelection = isFolderSelectionSupported();\n\n    supportsImagePreviews = supportsAjaxFileUploading && window.FileReader !== undefined;\n\n    supportsUploadProgress = (function() {\n        if (supportsAjaxFileUploading) {\n            return !qq.androidStock() && !qq.iosChrome();\n        }\n        return false;\n    }());\n\n    return {\n        ajaxUploading: supportsAjaxFileUploading,\n        blobUploading: supportsUploadingBlobs,\n        canDetermineSize: supportsAjaxFileUploading,\n        chunking: supportsChunking,\n        deleteFileCors: supportsDeleteFileCors,\n        deleteFileCorsXdr: supportsDeleteFileXdr, //NOTE: will also return true in IE10, where XDR is also supported\n        deleteFileCorsXhr: supportsDeleteFileCorsXhr,\n        dialogElement: !!window.HTMLDialogElement,\n        fileDrop: supportsFileDrop,\n        folderDrop: supportsFolderDrop,\n        folderSelection: supportsFolderSelection,\n        imagePreviews: supportsImagePreviews,\n        imageValidation: supportsImagePreviews,\n        itemSizeValidation: supportsAjaxFileUploading,\n        pause: supportsChunking,\n        progressBar: supportsUploadProgress,\n        resume: supportsResume,\n        scaling: supportsImagePreviews && supportsUploadingBlobs,\n        tiffPreviews: qq.safari(), // Not the best solution, but simple and probably accurate enough (for now)\n        unlimitedScaledImageSize: !qq.ios(), // false simply indicates that there is some known limit\n        uploading: supportsUploading,\n        uploadCors: supportsUploadCors,\n        uploadCustomHeaders: supportsAjaxFileUploading,\n        uploadNonMultipart: supportsAjaxFileUploading,\n        uploadViaPaste: supportsUploadViaPaste\n    };\n\n}());\n","/*globals qq*/\n\n// Is the passed object a promise instance?\nqq.isGenericPromise = function(maybePromise) {\n    \"use strict\";\n    return !!(maybePromise && maybePromise.then && qq.isFunction(maybePromise.then));\n};\n\nqq.Promise = function() {\n    \"use strict\";\n\n    var successArgs, failureArgs,\n        successCallbacks = [],\n        failureCallbacks = [],\n        doneCallbacks = [],\n        state = 0;\n\n    qq.extend(this, {\n        then: function(onSuccess, onFailure) {\n            if (state === 0) {\n                if (onSuccess) {\n                    successCallbacks.push(onSuccess);\n                }\n                if (onFailure) {\n                    failureCallbacks.push(onFailure);\n                }\n            }\n            else if (state === -1) {\n                onFailure && onFailure.apply(null, failureArgs);\n            }\n            else if (onSuccess) {\n                onSuccess.apply(null, successArgs);\n            }\n\n            return this;\n        },\n\n        done: function(callback) {\n            if (state === 0) {\n                doneCallbacks.push(callback);\n            }\n            else {\n                callback.apply(null, failureArgs === undefined ? successArgs : failureArgs);\n            }\n\n            return this;\n        },\n\n        success: function() {\n            state = 1;\n            successArgs = arguments;\n\n            if (successCallbacks.length) {\n                qq.each(successCallbacks, function(idx, callback) {\n                    callback.apply(null, successArgs);\n                });\n            }\n\n            if (doneCallbacks.length) {\n                qq.each(doneCallbacks, function(idx, callback) {\n                    callback.apply(null, successArgs);\n                });\n            }\n\n            return this;\n        },\n\n        failure: function() {\n            state = -1;\n            failureArgs = arguments;\n\n            if (failureCallbacks.length) {\n                qq.each(failureCallbacks, function(idx, callback) {\n                    callback.apply(null, failureArgs);\n                });\n            }\n\n            if (doneCallbacks.length) {\n                qq.each(doneCallbacks, function(idx, callback) {\n                    callback.apply(null, failureArgs);\n                });\n            }\n\n            return this;\n        }\n    });\n};\n","/* globals qq */\n/**\n * Placeholder for a Blob that will be generated on-demand.\n *\n * @param referenceBlob Parent of the generated blob\n * @param onCreate Function to invoke when the blob must be created.  Must be promissory.\n * @constructor\n */\nqq.BlobProxy = function(referenceBlob, onCreate) {\n    \"use strict\";\n\n    qq.extend(this, {\n        referenceBlob: referenceBlob,\n\n        create: function() {\n            return onCreate(referenceBlob);\n        }\n    });\n};\n","/*globals qq*/\n\n/**\n * This module represents an upload or \"Select File(s)\" button.  It's job is to embed an opaque `<input type=\"file\">`\n * element as a child of a provided \"container\" element.  This \"container\" element (`options.element`) is used to provide\n * a custom style for the `<input type=\"file\">` element.  The ability to change the style of the container element is also\n * provided here by adding CSS classes to the container on hover/focus.\n *\n * TODO Eliminate the mouseover and mouseout event handlers since the :hover CSS pseudo-class should now be\n * available on all supported browsers.\n *\n * @param o Options to override the default values\n */\nqq.UploadButton = function(o) {\n    \"use strict\";\n\n    var self = this,\n\n        disposeSupport = new qq.DisposeSupport(),\n\n        options = {\n            // Corresponds to the `accept` attribute on the associated `<input type=\"file\">`\n            acceptFiles: null,\n\n            // \"Container\" element\n            element: null,\n\n            focusClass: \"qq-upload-button-focus\",\n\n            // A true value allows folders to be selected, if supported by the UA\n            folders: false,\n\n            // **This option will be removed** in the future as the :hover CSS pseudo-class is available on all supported browsers\n            hoverClass: \"qq-upload-button-hover\",\n\n            ios8BrowserCrashWorkaround: false,\n\n            // If true adds `multiple` attribute to `<input type=\"file\">`\n            multiple: false,\n\n            // `name` attribute of `<input type=\"file\">`\n            name: \"qqfile\",\n\n            // Called when the browser invokes the onchange handler on the `<input type=\"file\">`\n            onChange: function(input) {},\n\n            title: null\n        },\n        input, buttonId;\n\n    // Overrides any of the default option values with any option values passed in during construction.\n    qq.extend(options, o);\n\n    buttonId = qq.getUniqueId();\n\n    // Embed an opaque `<input type=\"file\">` element as a child of `options.element`.\n    function createInput() {\n        var input = document.createElement(\"input\");\n\n        input.setAttribute(qq.UploadButton.BUTTON_ID_ATTR_NAME, buttonId);\n        input.setAttribute(\"title\", options.title);\n\n        self.setMultiple(options.multiple, input);\n\n        if (options.folders && qq.supportedFeatures.folderSelection) {\n            // selecting directories is only possible in Chrome now, via a vendor-specific prefixed attribute\n            input.setAttribute(\"webkitdirectory\", \"\");\n        }\n\n        if (options.acceptFiles) {\n            input.setAttribute(\"accept\", options.acceptFiles);\n        }\n\n        input.setAttribute(\"type\", \"file\");\n        input.setAttribute(\"name\", options.name);\n\n        qq(input).css({\n            position: \"absolute\",\n            // in Opera only 'browse' button\n            // is clickable and it is located at\n            // the right side of the input\n            right: 0,\n            top: 0,\n            fontFamily: \"Arial\",\n            // It's especially important to make this an arbitrarily large value\n            // to ensure the rendered input button in IE takes up the entire\n            // space of the container element.  Otherwise, the left side of the\n            // button will require a double-click to invoke the file chooser.\n            // In other browsers, this might cause other issues, so a large font-size\n            // is only used in IE.  There is a bug in IE8 where the opacity style is  ignored\n            // in some cases when the font-size is large.  So, this workaround is not applied\n            // to IE8.\n            fontSize: qq.ie() && !qq.ie8() ? \"3500px\" : \"118px\",\n            margin: 0,\n            padding: 0,\n            cursor: \"pointer\",\n            opacity: 0\n        });\n\n        // Setting the file input's height to 100% in IE7 causes\n        // most of the visible button to be unclickable.\n        !qq.ie7() && qq(input).css({height: \"100%\"});\n\n        options.element.appendChild(input);\n\n        disposeSupport.attach(input, \"change\", function() {\n            options.onChange(input);\n        });\n\n        // **These event handlers will be removed** in the future as the :hover CSS pseudo-class is available on all supported browsers\n        disposeSupport.attach(input, \"mouseover\", function() {\n            qq(options.element).addClass(options.hoverClass);\n        });\n        disposeSupport.attach(input, \"mouseout\", function() {\n            qq(options.element).removeClass(options.hoverClass);\n        });\n\n        disposeSupport.attach(input, \"focus\", function() {\n            qq(options.element).addClass(options.focusClass);\n        });\n        disposeSupport.attach(input, \"blur\", function() {\n            qq(options.element).removeClass(options.focusClass);\n        });\n\n        return input;\n    }\n\n    // Make button suitable container for input\n    qq(options.element).css({\n        position: \"relative\",\n        overflow: \"hidden\",\n        // Make sure browse button is in the right side in Internet Explorer\n        direction: \"ltr\"\n    });\n\n    // Exposed API\n    qq.extend(this, {\n        getInput: function() {\n            return input;\n        },\n\n        getButtonId: function() {\n            return buttonId;\n        },\n\n        setMultiple: function(isMultiple, optInput) {\n            var input = optInput || this.getInput();\n\n            // Temporary workaround for bug in in iOS8 UIWebView that causes the browser to crash\n            // before the file chooser appears if the file input doesn't contain a multiple attribute.\n            // See #1283.\n            if (options.ios8BrowserCrashWorkaround && qq.ios8() && (qq.iosChrome() || qq.iosSafariWebView())) {\n                input.setAttribute(\"multiple\", \"\");\n            }\n\n            else {\n                if (isMultiple) {\n                    input.setAttribute(\"multiple\", \"\");\n                }\n                else {\n                    input.removeAttribute(\"multiple\");\n                }\n            }\n        },\n\n        setAcceptFiles: function(acceptFiles) {\n            if (acceptFiles !== options.acceptFiles) {\n                input.setAttribute(\"accept\", acceptFiles);\n            }\n        },\n\n        reset: function() {\n            if (input.parentNode) {\n                qq(input).remove();\n            }\n\n            qq(options.element).removeClass(options.focusClass);\n            input = null;\n            input = createInput();\n        }\n    });\n\n    input = createInput();\n};\n\nqq.UploadButton.BUTTON_ID_ATTR_NAME = \"qq-button-id\";\n","/*globals qq */\nqq.UploadData = function(uploaderProxy) {\n    \"use strict\";\n\n    var data = [],\n        byUuid = {},\n        byStatus = {},\n        byProxyGroupId = {},\n        byBatchId = {};\n\n    function getDataByIds(idOrIds) {\n        if (qq.isArray(idOrIds)) {\n            var entries = [];\n\n            qq.each(idOrIds, function(idx, id) {\n                entries.push(data[id]);\n            });\n\n            return entries;\n        }\n\n        return data[idOrIds];\n    }\n\n    function getDataByUuids(uuids) {\n        if (qq.isArray(uuids)) {\n            var entries = [];\n\n            qq.each(uuids, function(idx, uuid) {\n                entries.push(data[byUuid[uuid]]);\n            });\n\n            return entries;\n        }\n\n        return data[byUuid[uuids]];\n    }\n\n    function getDataByStatus(status) {\n        var statusResults = [],\n            statuses = [].concat(status);\n\n        qq.each(statuses, function(index, statusEnum) {\n            var statusResultIndexes = byStatus[statusEnum];\n\n            if (statusResultIndexes !== undefined) {\n                qq.each(statusResultIndexes, function(i, dataIndex) {\n                    statusResults.push(data[dataIndex]);\n                });\n            }\n        });\n\n        return statusResults;\n    }\n\n    qq.extend(this, {\n        /**\n         * Adds a new file to the data cache for tracking purposes.\n         *\n         * @param spec Data that describes this file.  Possible properties are:\n         *\n         * - uuid: Initial UUID for this file.\n         * - name: Initial name of this file.\n         * - size: Size of this file, omit if this cannot be determined\n         * - status: Initial `qq.status` for this file.  Omit for `qq.status.SUBMITTING`.\n         * - batchId: ID of the batch this file belongs to\n         * - proxyGroupId: ID of the proxy group associated with this file\n         *\n         * @returns {number} Internal ID for this file.\n         */\n        addFile: function(spec) {\n            var status = spec.status || qq.status.SUBMITTING,\n                id = data.push({\n                    name: spec.name,\n                    originalName: spec.name,\n                    uuid: spec.uuid,\n                    size: spec.size == null ? -1 : spec.size,\n                    status: status\n                }) - 1;\n\n            if (spec.batchId) {\n                data[id].batchId = spec.batchId;\n\n                if (byBatchId[spec.batchId] === undefined) {\n                    byBatchId[spec.batchId] = [];\n                }\n                byBatchId[spec.batchId].push(id);\n            }\n\n            if (spec.proxyGroupId) {\n                data[id].proxyGroupId = spec.proxyGroupId;\n\n                if (byProxyGroupId[spec.proxyGroupId] === undefined) {\n                    byProxyGroupId[spec.proxyGroupId] = [];\n                }\n                byProxyGroupId[spec.proxyGroupId].push(id);\n            }\n\n            data[id].id = id;\n            byUuid[spec.uuid] = id;\n\n            if (byStatus[status] === undefined) {\n                byStatus[status] = [];\n            }\n            byStatus[status].push(id);\n\n            uploaderProxy.onStatusChange(id, null, status);\n\n            return id;\n        },\n\n        retrieve: function(optionalFilter) {\n            if (qq.isObject(optionalFilter) && data.length)  {\n                if (optionalFilter.id !== undefined) {\n                    return getDataByIds(optionalFilter.id);\n                }\n\n                else if (optionalFilter.uuid !== undefined) {\n                    return getDataByUuids(optionalFilter.uuid);\n                }\n\n                else if (optionalFilter.status) {\n                    return getDataByStatus(optionalFilter.status);\n                }\n            }\n            else {\n                return qq.extend([], data, true);\n            }\n        },\n\n        reset: function() {\n            data = [];\n            byUuid = {};\n            byStatus = {};\n            byBatchId = {};\n        },\n\n        setStatus: function(id, newStatus) {\n            var oldStatus = data[id].status,\n                byStatusOldStatusIndex = qq.indexOf(byStatus[oldStatus], id);\n\n            byStatus[oldStatus].splice(byStatusOldStatusIndex, 1);\n\n            data[id].status = newStatus;\n\n            if (byStatus[newStatus] === undefined) {\n                byStatus[newStatus] = [];\n            }\n            byStatus[newStatus].push(id);\n\n            uploaderProxy.onStatusChange(id, oldStatus, newStatus);\n        },\n\n        uuidChanged: function(id, newUuid) {\n            var oldUuid = data[id].uuid;\n\n            data[id].uuid = newUuid;\n            byUuid[newUuid] = id;\n            delete byUuid[oldUuid];\n        },\n\n        updateName: function(id, newName) {\n            data[id].name = newName;\n        },\n\n        updateSize: function(id, newSize) {\n            data[id].size = newSize;\n        },\n\n        // Only applicable if this file has a parent that we may want to reference later.\n        setParentId: function(targetId, parentId) {\n            data[targetId].parentId = parentId;\n        },\n\n        getIdsInProxyGroup: function(id) {\n            var proxyGroupId = data[id].proxyGroupId;\n\n            if (proxyGroupId) {\n                return byProxyGroupId[proxyGroupId];\n            }\n            return [];\n        },\n\n        getIdsInBatch: function(id) {\n            var batchId = data[id].batchId;\n\n            return byBatchId[batchId];\n        }\n    });\n};\n\nqq.status = {\n    SUBMITTING: \"submitting\",\n    SUBMITTED: \"submitted\",\n    REJECTED: \"rejected\",\n    QUEUED: \"queued\",\n    CANCELED: \"canceled\",\n    PAUSED: \"paused\",\n    UPLOADING: \"uploading\",\n    UPLOAD_RETRYING: \"retrying upload\",\n    UPLOAD_SUCCESSFUL: \"upload successful\",\n    UPLOAD_FAILED: \"upload failed\",\n    DELETE_FAILED: \"delete failed\",\n    DELETING: \"deleting\",\n    DELETED: \"deleted\"\n};\n","/*globals qq*/\n/**\n * Defines the public API for FineUploaderBasic mode.\n */\n(function() {\n    \"use strict\";\n\n    qq.basePublicApi = {\n        // DEPRECATED - TODO REMOVE IN NEXT MAJOR RELEASE (replaced by addFiles)\n        addBlobs: function(blobDataOrArray, params, endpoint) {\n            this.addFiles(blobDataOrArray, params, endpoint);\n        },\n\n        addInitialFiles: function(cannedFileList) {\n            var self = this;\n\n            qq.each(cannedFileList, function(index, cannedFile) {\n                self._addCannedFile(cannedFile);\n            });\n        },\n\n        addFiles: function(data, params, endpoint) {\n            this._maybeHandleIos8SafariWorkaround();\n\n            var batchId = this._storedIds.length === 0 ? qq.getUniqueId() : this._currentBatchId,\n\n                processBlob = qq.bind(function(blob) {\n                    this._handleNewFile({\n                        blob: blob,\n                        name: this._options.blobs.defaultName\n                    }, batchId, verifiedFiles);\n                }, this),\n\n                processBlobData = qq.bind(function(blobData) {\n                    this._handleNewFile(blobData, batchId, verifiedFiles);\n                }, this),\n\n                processCanvas = qq.bind(function(canvas) {\n                    var blob = qq.canvasToBlob(canvas);\n\n                    this._handleNewFile({\n                        blob: blob,\n                        name: this._options.blobs.defaultName + \".png\"\n                    }, batchId, verifiedFiles);\n                }, this),\n\n                processCanvasData = qq.bind(function(canvasData) {\n                    var normalizedQuality = canvasData.quality && canvasData.quality / 100,\n                        blob = qq.canvasToBlob(canvasData.canvas, canvasData.type, normalizedQuality);\n\n                    this._handleNewFile({\n                        blob: blob,\n                        name: canvasData.name\n                    }, batchId, verifiedFiles);\n                }, this),\n\n                processFileOrInput = qq.bind(function(fileOrInput) {\n                    if (qq.isInput(fileOrInput) && qq.supportedFeatures.ajaxUploading) {\n                        var files = Array.prototype.slice.call(fileOrInput.files),\n                            self = this;\n\n                        qq.each(files, function(idx, file) {\n                            self._handleNewFile(file, batchId, verifiedFiles);\n                        });\n                    }\n                    else {\n                        this._handleNewFile(fileOrInput, batchId, verifiedFiles);\n                    }\n                }, this),\n\n                normalizeData = function() {\n                    if (qq.isFileList(data)) {\n                        data = Array.prototype.slice.call(data);\n                    }\n                    data = [].concat(data);\n                },\n\n                self = this,\n                verifiedFiles = [];\n\n            this._currentBatchId = batchId;\n\n            if (data) {\n                normalizeData();\n\n                qq.each(data, function(idx, fileContainer) {\n                    if (qq.isFileOrInput(fileContainer)) {\n                        processFileOrInput(fileContainer);\n                    }\n                    else if (qq.isBlob(fileContainer)) {\n                        processBlob(fileContainer);\n                    }\n                    else if (qq.isObject(fileContainer)) {\n                        if (fileContainer.blob && fileContainer.name) {\n                            processBlobData(fileContainer);\n                        }\n                        else if (fileContainer.canvas && fileContainer.name) {\n                            processCanvasData(fileContainer);\n                        }\n                    }\n                    else if (fileContainer.tagName && fileContainer.tagName.toLowerCase() === \"canvas\") {\n                        processCanvas(fileContainer);\n                    }\n                    else {\n                        self.log(fileContainer + \" is not a valid file container!  Ignoring!\", \"warn\");\n                    }\n                });\n\n                this.log(\"Received \" + verifiedFiles.length + \" files.\");\n                this._prepareItemsForUpload(verifiedFiles, params, endpoint);\n            }\n        },\n\n        cancel: function(id) {\n            this._handler.cancel(id);\n        },\n\n        cancelAll: function() {\n            var storedIdsCopy = [],\n                self = this;\n\n            qq.extend(storedIdsCopy, this._storedIds);\n            qq.each(storedIdsCopy, function(idx, storedFileId) {\n                self.cancel(storedFileId);\n            });\n\n            this._handler.cancelAll();\n        },\n\n        clearStoredFiles: function() {\n            this._storedIds = [];\n        },\n\n        continueUpload: function(id) {\n            var uploadData = this._uploadData.retrieve({id: id});\n\n            if (!qq.supportedFeatures.pause || !this._options.chunking.enabled) {\n                return false;\n            }\n\n            if (uploadData.status === qq.status.PAUSED) {\n                this.log(qq.format(\"Paused file ID {} ({}) will be continued.  Not paused.\", id, this.getName(id)));\n                this._uploadFile(id);\n                return true;\n            }\n            else {\n                this.log(qq.format(\"Ignoring continue for file ID {} ({}).  Not paused.\", id, this.getName(id)), \"error\");\n            }\n\n            return false;\n        },\n\n        deleteFile: function(id) {\n            return this._onSubmitDelete(id);\n        },\n\n        // TODO document?\n        doesExist: function(fileOrBlobId) {\n            return this._handler.isValid(fileOrBlobId);\n        },\n\n        // Generate a variable size thumbnail on an img or canvas,\n        // returning a promise that is fulfilled when the attempt completes.\n        // Thumbnail can either be based off of a URL for an image returned\n        // by the server in the upload response, or the associated `Blob`.\n        drawThumbnail: function(fileId, imgOrCanvas, maxSize, fromServer, customResizeFunction) {\n            var promiseToReturn = new qq.Promise(),\n                fileOrUrl, options;\n\n            if (this._imageGenerator) {\n                fileOrUrl = this._thumbnailUrls[fileId];\n                options = {\n                    customResizeFunction: customResizeFunction,\n                    maxSize: maxSize > 0 ? maxSize : null,\n                    scale: maxSize > 0\n                };\n\n                // If client-side preview generation is possible\n                // and we are not specifically looking for the image URl returned by the server...\n                if (!fromServer && qq.supportedFeatures.imagePreviews) {\n                    fileOrUrl = this.getFile(fileId);\n                }\n\n                /* jshint eqeqeq:false,eqnull:true */\n                if (fileOrUrl == null) {\n                    promiseToReturn.failure({container: imgOrCanvas, error: \"File or URL not found.\"});\n                }\n                else {\n                    this._imageGenerator.generate(fileOrUrl, imgOrCanvas, options).then(\n                        function success(modifiedContainer) {\n                            promiseToReturn.success(modifiedContainer);\n                        },\n\n                        function failure(container, reason) {\n                            promiseToReturn.failure({container: container, error: reason || \"Problem generating thumbnail\"});\n                        }\n                    );\n                }\n            }\n            else {\n                promiseToReturn.failure({container: imgOrCanvas, error: \"Missing image generator module\"});\n            }\n\n            return promiseToReturn;\n        },\n\n        getButton: function(fileId) {\n            return this._getButton(this._buttonIdsForFileIds[fileId]);\n        },\n\n        getEndpoint: function(fileId) {\n            return this._endpointStore.get(fileId);\n        },\n\n        getFile: function(fileOrBlobId) {\n            return this._handler.getFile(fileOrBlobId) || null;\n        },\n\n        getInProgress: function() {\n            return this._uploadData.retrieve({\n                status: [\n                    qq.status.UPLOADING,\n                    qq.status.UPLOAD_RETRYING,\n                    qq.status.QUEUED\n                ]\n            }).length;\n        },\n\n        getName: function(id) {\n            return this._uploadData.retrieve({id: id}).name;\n        },\n\n        // Parent ID for a specific file, or null if this is the parent, or if it has no parent.\n        getParentId: function(id) {\n            var uploadDataEntry = this.getUploads({id: id}),\n                parentId = null;\n\n            if (uploadDataEntry) {\n                if (uploadDataEntry.parentId !== undefined) {\n                    parentId = uploadDataEntry.parentId;\n                }\n            }\n\n            return parentId;\n        },\n\n        getResumableFilesData: function() {\n            return this._handler.getResumableFilesData();\n        },\n\n        getSize: function(id) {\n            return this._uploadData.retrieve({id: id}).size;\n        },\n\n        getNetUploads: function() {\n            return this._netUploaded;\n        },\n\n        getRemainingAllowedItems: function() {\n            var allowedItems = this._currentItemLimit;\n\n            if (allowedItems > 0) {\n                return allowedItems - this._netUploadedOrQueued;\n            }\n\n            return null;\n        },\n\n        getUploads: function(optionalFilter) {\n            return this._uploadData.retrieve(optionalFilter);\n        },\n\n        getUuid: function(id) {\n            return this._uploadData.retrieve({id: id}).uuid;\n        },\n\n        log: function(str, level) {\n            if (this._options.debug && (!level || level === \"info\")) {\n                qq.log(\"[Fine Uploader \" + qq.version + \"] \" + str);\n            }\n            else if (level && level !== \"info\") {\n                qq.log(\"[Fine Uploader \" + qq.version + \"] \" + str, level);\n\n            }\n        },\n\n        pauseUpload: function(id) {\n            var uploadData = this._uploadData.retrieve({id: id});\n\n            if (!qq.supportedFeatures.pause || !this._options.chunking.enabled) {\n                return false;\n            }\n\n            // Pause only really makes sense if the file is uploading or retrying\n            if (qq.indexOf([qq.status.UPLOADING, qq.status.UPLOAD_RETRYING], uploadData.status) >= 0) {\n                if (this._handler.pause(id)) {\n                    this._uploadData.setStatus(id, qq.status.PAUSED);\n                    return true;\n                }\n                else {\n                    this.log(qq.format(\"Unable to pause file ID {} ({}).\", id, this.getName(id)), \"error\");\n                }\n            }\n            else {\n                this.log(qq.format(\"Ignoring pause for file ID {} ({}).  Not in progress.\", id, this.getName(id)), \"error\");\n            }\n\n            return false;\n        },\n\n        removeFileRef: function(id) {\n            this._handler.expunge(id);\n        },\n\n        reset: function() {\n            this.log(\"Resetting uploader...\");\n\n            this._handler.reset();\n            this._storedIds = [];\n            this._autoRetries = [];\n            this._retryTimeouts = [];\n            this._preventRetries = [];\n            this._thumbnailUrls = [];\n\n            qq.each(this._buttons, function(idx, button) {\n                button.reset();\n            });\n\n            this._paramsStore.reset();\n            this._endpointStore.reset();\n            this._netUploadedOrQueued = 0;\n            this._netUploaded = 0;\n            this._uploadData.reset();\n            this._buttonIdsForFileIds = [];\n\n            this._pasteHandler && this._pasteHandler.reset();\n            this._options.session.refreshOnReset && this._refreshSessionData();\n\n            this._succeededSinceLastAllComplete = [];\n            this._failedSinceLastAllComplete = [];\n\n            this._totalProgress && this._totalProgress.reset();\n        },\n\n        retry: function(id) {\n            return this._manualRetry(id);\n        },\n\n        scaleImage: function(id, specs) {\n            var self = this;\n\n            return qq.Scaler.prototype.scaleImage(id, specs, {\n                log: qq.bind(self.log, self),\n                getFile: qq.bind(self.getFile, self),\n                uploadData: self._uploadData\n            });\n        },\n\n        setCustomHeaders: function(headers, id) {\n            this._customHeadersStore.set(headers, id);\n        },\n\n        setDeleteFileCustomHeaders: function(headers, id) {\n            this._deleteFileCustomHeadersStore.set(headers, id);\n        },\n\n        setDeleteFileEndpoint: function(endpoint, id) {\n            this._deleteFileEndpointStore.set(endpoint, id);\n        },\n\n        setDeleteFileParams: function(params, id) {\n            this._deleteFileParamsStore.set(params, id);\n        },\n\n        // Re-sets the default endpoint, an endpoint for a specific file, or an endpoint for a specific button\n        setEndpoint: function(endpoint, id) {\n            this._endpointStore.set(endpoint, id);\n        },\n\n        setForm: function(elementOrId) {\n            this._updateFormSupportAndParams(elementOrId);\n        },\n\n        setItemLimit: function(newItemLimit) {\n            this._currentItemLimit = newItemLimit;\n        },\n\n        setName: function(id, newName) {\n            this._uploadData.updateName(id, newName);\n        },\n\n        setParams: function(params, id) {\n            this._paramsStore.set(params, id);\n        },\n\n        setUuid: function(id, newUuid) {\n            return this._uploadData.uuidChanged(id, newUuid);\n        },\n\n        /**\n         * Expose the internal status of a file id to the public api for manual state changes\n         * @public\n         *\n         * @param {Number} id,\n         * @param {String} newStatus\n         *\n         * @todo Implement the remaining methods\n         */\n        setStatus: function(id, newStatus) {\n            var fileRecord = this.getUploads({id: id});\n            if (!fileRecord) {\n                throw new qq.Error(id + \" is not a valid file ID.\");\n            }\n\n            switch (newStatus) {\n                case qq.status.DELETED:\n                    this._onDeleteComplete(id, null, false);\n                    break;\n                case qq.status.DELETE_FAILED:\n                    this._onDeleteComplete(id, null, true);\n                    break;\n                default:\n                    var errorMessage = \"Method setStatus called on '\" + name + \"' not implemented yet for \" + newStatus;\n                    this.log(errorMessage);\n                    throw new qq.Error(errorMessage);\n            }\n        },\n\n        uploadStoredFiles: function() {\n            if (this._storedIds.length === 0) {\n                this._itemError(\"noFilesError\");\n            }\n            else {\n                this._uploadStoredFiles();\n            }\n        }\n    };\n\n    /**\n     * Defines the private (internal) API for FineUploaderBasic mode.\n     */\n    qq.basePrivateApi = {\n        // Updates internal state with a file record (not backed by a live file).  Returns the assigned ID.\n        _addCannedFile: function(sessionData) {\n            var id = this._uploadData.addFile({\n                uuid: sessionData.uuid,\n                name: sessionData.name,\n                size: sessionData.size,\n                status: qq.status.UPLOAD_SUCCESSFUL\n            });\n\n            sessionData.deleteFileEndpoint && this.setDeleteFileEndpoint(sessionData.deleteFileEndpoint, id);\n            sessionData.deleteFileParams && this.setDeleteFileParams(sessionData.deleteFileParams, id);\n\n            if (sessionData.thumbnailUrl) {\n                this._thumbnailUrls[id] = sessionData.thumbnailUrl;\n            }\n\n            this._netUploaded++;\n            this._netUploadedOrQueued++;\n\n            return id;\n        },\n\n        _annotateWithButtonId: function(file, associatedInput) {\n            if (qq.isFile(file)) {\n                file.qqButtonId = this._getButtonId(associatedInput);\n            }\n        },\n\n        _batchError: function(message) {\n            this._options.callbacks.onError(null, null, message, undefined);\n        },\n\n        _createDeleteHandler: function() {\n            var self = this;\n\n            return new qq.DeleteFileAjaxRequester({\n                method: this._options.deleteFile.method.toUpperCase(),\n                maxConnections: this._options.maxConnections,\n                uuidParamName: this._options.request.uuidName,\n                customHeaders: this._deleteFileCustomHeadersStore,\n                paramsStore: this._deleteFileParamsStore,\n                endpointStore: this._deleteFileEndpointStore,\n                cors: this._options.cors,\n                log: qq.bind(self.log, self),\n                onDelete: function(id) {\n                    self._onDelete(id);\n                    self._options.callbacks.onDelete(id);\n                },\n                onDeleteComplete: function(id, xhrOrXdr, isError) {\n                    self._onDeleteComplete(id, xhrOrXdr, isError);\n                    self._options.callbacks.onDeleteComplete(id, xhrOrXdr, isError);\n                }\n\n            });\n        },\n\n        _createPasteHandler: function() {\n            var self = this;\n\n            return new qq.PasteSupport({\n                targetElement: this._options.paste.targetElement,\n                callbacks: {\n                    log: qq.bind(self.log, self),\n                    pasteReceived: function(blob) {\n                        self._handleCheckedCallback({\n                            name: \"onPasteReceived\",\n                            callback: qq.bind(self._options.callbacks.onPasteReceived, self, blob),\n                            onSuccess: qq.bind(self._handlePasteSuccess, self, blob),\n                            identifier: \"pasted image\"\n                        });\n                    }\n                }\n            });\n        },\n\n        _createStore: function(initialValue, _readOnlyValues_) {\n            var store = {},\n                catchall = initialValue,\n                perIdReadOnlyValues = {},\n                readOnlyValues = _readOnlyValues_,\n                copy = function(orig) {\n                    if (qq.isObject(orig)) {\n                        return qq.extend({}, orig);\n                    }\n                    return orig;\n                },\n                getReadOnlyValues = function() {\n                    if (qq.isFunction(readOnlyValues)) {\n                        return readOnlyValues();\n                    }\n                    return readOnlyValues;\n                },\n                includeReadOnlyValues = function(id, existing) {\n                    if (readOnlyValues && qq.isObject(existing)) {\n                        qq.extend(existing, getReadOnlyValues());\n                    }\n\n                    if (perIdReadOnlyValues[id]) {\n                        qq.extend(existing, perIdReadOnlyValues[id]);\n                    }\n                };\n\n            return {\n                set: function(val, id) {\n                    /*jshint eqeqeq: true, eqnull: true*/\n                    if (id == null) {\n                        store = {};\n                        catchall = copy(val);\n                    }\n                    else {\n                        store[id] = copy(val);\n                    }\n                },\n\n                get: function(id) {\n                    var values;\n\n                    /*jshint eqeqeq: true, eqnull: true*/\n                    if (id != null && store[id]) {\n                        values = store[id];\n                    }\n                    else {\n                        values = copy(catchall);\n                    }\n\n                    includeReadOnlyValues(id, values);\n\n                    return copy(values);\n                },\n\n                addReadOnly: function(id, values) {\n                    // Only applicable to Object stores\n                    if (qq.isObject(store)) {\n                        // If null ID, apply readonly values to all files\n                        if (id === null) {\n                            if (qq.isFunction(values)) {\n                                readOnlyValues = values;\n                            }\n                            else {\n                                readOnlyValues = readOnlyValues || {};\n                                qq.extend(readOnlyValues, values);\n                            }\n                        }\n                        else {\n                            perIdReadOnlyValues[id] = perIdReadOnlyValues[id] || {};\n                            qq.extend(perIdReadOnlyValues[id], values);\n                        }\n                    }\n                },\n\n                remove: function(fileId) {\n                    return delete store[fileId];\n                },\n\n                reset: function() {\n                    store = {};\n                    perIdReadOnlyValues = {};\n                    catchall = initialValue;\n                }\n            };\n        },\n\n        _createUploadDataTracker: function() {\n            var self = this;\n\n            return new qq.UploadData({\n                getName: function(id) {\n                    return self.getName(id);\n                },\n                getUuid: function(id) {\n                    return self.getUuid(id);\n                },\n                getSize: function(id) {\n                    return self.getSize(id);\n                },\n                onStatusChange: function(id, oldStatus, newStatus) {\n                    self._onUploadStatusChange(id, oldStatus, newStatus);\n                    self._options.callbacks.onStatusChange(id, oldStatus, newStatus);\n                    self._maybeAllComplete(id, newStatus);\n\n                    if (self._totalProgress) {\n                        setTimeout(function() {\n                            self._totalProgress.onStatusChange(id, oldStatus, newStatus);\n                        }, 0);\n                    }\n                }\n            });\n        },\n\n        /**\n         * Generate a tracked upload button.\n         *\n         * @param spec Object containing a required `element` property\n         * along with optional `multiple`, `accept`, and `folders`.\n         * @returns {qq.UploadButton}\n         * @private\n         */\n        _createUploadButton: function(spec) {\n            var self = this,\n                acceptFiles = spec.accept || this._options.validation.acceptFiles,\n                allowedExtensions = spec.allowedExtensions || this._options.validation.allowedExtensions,\n                button;\n\n            function allowMultiple() {\n                if (qq.supportedFeatures.ajaxUploading) {\n                    // Workaround for bug in iOS7+ (see #1039)\n                    if (self._options.workarounds.iosEmptyVideos &&\n                        qq.ios() &&\n                        !qq.ios6() &&\n                        self._isAllowedExtension(allowedExtensions, \".mov\")) {\n\n                        return false;\n                    }\n\n                    if (spec.multiple === undefined) {\n                        return self._options.multiple;\n                    }\n\n                    return spec.multiple;\n                }\n\n                return false;\n            }\n\n            button = new qq.UploadButton({\n                acceptFiles: acceptFiles,\n                element: spec.element,\n                focusClass: this._options.classes.buttonFocus,\n                folders: spec.folders,\n                hoverClass: this._options.classes.buttonHover,\n                ios8BrowserCrashWorkaround: this._options.workarounds.ios8BrowserCrash,\n                multiple: allowMultiple(),\n                name: this._options.request.inputName,\n                onChange: function(input) {\n                    self._onInputChange(input);\n                },\n                title: spec.title == null ? this._options.text.fileInputTitle : spec.title\n            });\n\n            this._disposeSupport.addDisposer(function() {\n                button.dispose();\n            });\n\n            self._buttons.push(button);\n\n            return button;\n        },\n\n        _createUploadHandler: function(additionalOptions, namespace) {\n            var self = this,\n                lastOnProgress = {},\n                options = {\n                    debug: this._options.debug,\n                    maxConnections: this._options.maxConnections,\n                    cors: this._options.cors,\n                    paramsStore: this._paramsStore,\n                    endpointStore: this._endpointStore,\n                    chunking: this._options.chunking,\n                    resume: this._options.resume,\n                    blobs: this._options.blobs,\n                    log: qq.bind(self.log, self),\n                    preventRetryParam: this._options.retry.preventRetryResponseProperty,\n                    onProgress: function(id, name, loaded, total) {\n                        if (loaded < 0 || total < 0) {\n                            return;\n                        }\n\n                        if (lastOnProgress[id]) {\n                            if (lastOnProgress[id].loaded !== loaded || lastOnProgress[id].total !== total) {\n                                self._onProgress(id, name, loaded, total);\n                                self._options.callbacks.onProgress(id, name, loaded, total);\n                            }\n                        }\n                        else {\n                            self._onProgress(id, name, loaded, total);\n                            self._options.callbacks.onProgress(id, name, loaded, total);\n                        }\n\n                        lastOnProgress[id] = {loaded: loaded, total: total};\n\n                    },\n                    onComplete: function(id, name, result, xhr) {\n                        delete lastOnProgress[id];\n\n                        var status = self.getUploads({id: id}).status,\n                            retVal;\n\n                        // This is to deal with some observed cases where the XHR readyStateChange handler is\n                        // invoked by the browser multiple times for the same XHR instance with the same state\n                        // readyState value.  Higher level: don't invoke complete-related code if we've already\n                        // done this.\n                        if (status === qq.status.UPLOAD_SUCCESSFUL || status === qq.status.UPLOAD_FAILED) {\n                            return;\n                        }\n\n                        retVal = self._onComplete(id, name, result, xhr);\n\n                        // If the internal `_onComplete` handler returns a promise, don't invoke the `onComplete` callback\n                        // until the promise has been fulfilled.\n                        if (retVal instanceof  qq.Promise) {\n                            retVal.done(function() {\n                                self._options.callbacks.onComplete(id, name, result, xhr);\n                            });\n                        }\n                        else {\n                            self._options.callbacks.onComplete(id, name, result, xhr);\n                        }\n                    },\n                    onCancel: function(id, name, cancelFinalizationEffort) {\n                        var promise = new qq.Promise();\n\n                        self._handleCheckedCallback({\n                            name: \"onCancel\",\n                            callback: qq.bind(self._options.callbacks.onCancel, self, id, name),\n                            onFailure: promise.failure,\n                            onSuccess: function() {\n                                cancelFinalizationEffort.then(function() {\n                                    self._onCancel(id, name);\n                                });\n\n                                promise.success();\n                            },\n                            identifier: id\n                        });\n\n                        return promise;\n                    },\n                    onUploadPrep: qq.bind(this._onUploadPrep, this),\n                    onUpload: function(id, name) {\n                        self._onUpload(id, name);\n                        self._options.callbacks.onUpload(id, name);\n                    },\n                    onUploadChunk: function(id, name, chunkData) {\n                        self._onUploadChunk(id, chunkData);\n                        self._options.callbacks.onUploadChunk(id, name, chunkData);\n                    },\n                    onUploadChunkSuccess: function(id, chunkData, result, xhr) {\n                        self._options.callbacks.onUploadChunkSuccess.apply(self, arguments);\n                    },\n                    onResume: function(id, name, chunkData) {\n                        return self._options.callbacks.onResume(id, name, chunkData);\n                    },\n                    onAutoRetry: function(id, name, responseJSON, xhr) {\n                        return self._onAutoRetry.apply(self, arguments);\n                    },\n                    onUuidChanged: function(id, newUuid) {\n                        self.log(\"Server requested UUID change from '\" + self.getUuid(id) + \"' to '\" + newUuid + \"'\");\n                        self.setUuid(id, newUuid);\n                    },\n                    getName: qq.bind(self.getName, self),\n                    getUuid: qq.bind(self.getUuid, self),\n                    getSize: qq.bind(self.getSize, self),\n                    setSize: qq.bind(self._setSize, self),\n                    getDataByUuid: function(uuid) {\n                        return self.getUploads({uuid: uuid});\n                    },\n                    isQueued: function(id) {\n                        var status = self.getUploads({id: id}).status;\n                        return status === qq.status.QUEUED ||\n                            status === qq.status.SUBMITTED ||\n                            status === qq.status.UPLOAD_RETRYING ||\n                            status === qq.status.PAUSED;\n                    },\n                    getIdsInProxyGroup: self._uploadData.getIdsInProxyGroup,\n                    getIdsInBatch: self._uploadData.getIdsInBatch\n                };\n\n            qq.each(this._options.request, function(prop, val) {\n                options[prop] = val;\n            });\n\n            options.customHeaders = this._customHeadersStore;\n\n            if (additionalOptions) {\n                qq.each(additionalOptions, function(key, val) {\n                    options[key] = val;\n                });\n            }\n\n            return new qq.UploadHandlerController(options, namespace);\n        },\n\n        _fileOrBlobRejected: function(id) {\n            this._netUploadedOrQueued--;\n            this._uploadData.setStatus(id, qq.status.REJECTED);\n        },\n\n        _formatSize: function(bytes) {\n            if (bytes === 0) {\n                return bytes + this._options.text.sizeSymbols[0];\n            }\n            var i = -1;\n            do {\n                bytes = bytes / 1000;\n                i++;\n            } while (bytes > 999);\n\n            return Math.max(bytes, 0.1).toFixed(1) + this._options.text.sizeSymbols[i];\n        },\n\n        // Creates an internal object that tracks various properties of each extra button,\n        // and then actually creates the extra button.\n        _generateExtraButtonSpecs: function() {\n            var self = this;\n\n            this._extraButtonSpecs = {};\n\n            qq.each(this._options.extraButtons, function(idx, extraButtonOptionEntry) {\n                var multiple = extraButtonOptionEntry.multiple,\n                    validation = qq.extend({}, self._options.validation, true),\n                    extraButtonSpec = qq.extend({}, extraButtonOptionEntry);\n\n                if (multiple === undefined) {\n                    multiple = self._options.multiple;\n                }\n\n                if (extraButtonSpec.validation) {\n                    qq.extend(validation, extraButtonOptionEntry.validation, true);\n                }\n\n                qq.extend(extraButtonSpec, {\n                    multiple: multiple,\n                    validation: validation\n                }, true);\n\n                self._initExtraButton(extraButtonSpec);\n            });\n        },\n\n        _getButton: function(buttonId) {\n            var extraButtonsSpec = this._extraButtonSpecs[buttonId];\n\n            if (extraButtonsSpec) {\n                return extraButtonsSpec.element;\n            }\n            else if (buttonId === this._defaultButtonId) {\n                return this._options.button;\n            }\n        },\n\n        /**\n         * Gets the internally used tracking ID for a button.\n         *\n         * @param buttonOrFileInputOrFile `File`, `<input type=\"file\">`, or a button container element\n         * @returns {*} The button's ID, or undefined if no ID is recoverable\n         * @private\n         */\n        _getButtonId: function(buttonOrFileInputOrFile) {\n            var inputs, fileInput,\n                fileBlobOrInput = buttonOrFileInputOrFile;\n\n            // We want the reference file/blob here if this is a proxy (a file that will be generated on-demand later)\n            if (fileBlobOrInput instanceof qq.BlobProxy) {\n                fileBlobOrInput = fileBlobOrInput.referenceBlob;\n            }\n\n            // If the item is a `Blob` it will never be associated with a button or drop zone.\n            if (fileBlobOrInput && !qq.isBlob(fileBlobOrInput)) {\n                if (qq.isFile(fileBlobOrInput)) {\n                    return fileBlobOrInput.qqButtonId;\n                }\n                else if (fileBlobOrInput.tagName.toLowerCase() === \"input\" &&\n                    fileBlobOrInput.type.toLowerCase() === \"file\") {\n\n                    return fileBlobOrInput.getAttribute(qq.UploadButton.BUTTON_ID_ATTR_NAME);\n                }\n\n                inputs = fileBlobOrInput.getElementsByTagName(\"input\");\n\n                qq.each(inputs, function(idx, input) {\n                    if (input.getAttribute(\"type\") === \"file\") {\n                        fileInput = input;\n                        return false;\n                    }\n                });\n\n                if (fileInput) {\n                    return fileInput.getAttribute(qq.UploadButton.BUTTON_ID_ATTR_NAME);\n                }\n            }\n        },\n\n        _getNotFinished: function() {\n            return this._uploadData.retrieve({\n                status: [\n                    qq.status.UPLOADING,\n                    qq.status.UPLOAD_RETRYING,\n                    qq.status.QUEUED,\n                    qq.status.SUBMITTING,\n                    qq.status.SUBMITTED,\n                    qq.status.PAUSED\n                ]\n            }).length;\n        },\n\n        // Get the validation options for this button.  Could be the default validation option\n        // or a specific one assigned to this particular button.\n        _getValidationBase: function(buttonId) {\n            var extraButtonSpec = this._extraButtonSpecs[buttonId];\n\n            return extraButtonSpec ? extraButtonSpec.validation : this._options.validation;\n        },\n\n        _getValidationDescriptor: function(fileWrapper) {\n            if (fileWrapper.file instanceof qq.BlobProxy) {\n                return {\n                    name: qq.getFilename(fileWrapper.file.referenceBlob),\n                    size: fileWrapper.file.referenceBlob.size\n                };\n            }\n\n            return {\n                name: this.getUploads({id: fileWrapper.id}).name,\n                size: this.getUploads({id: fileWrapper.id}).size\n            };\n        },\n\n        _getValidationDescriptors: function(fileWrappers) {\n            var self = this,\n                fileDescriptors = [];\n\n            qq.each(fileWrappers, function(idx, fileWrapper) {\n                fileDescriptors.push(self._getValidationDescriptor(fileWrapper));\n            });\n\n            return fileDescriptors;\n        },\n\n        // Allows camera access on either the default or an extra button for iOS devices.\n        _handleCameraAccess: function() {\n            if (this._options.camera.ios && qq.ios()) {\n                var acceptIosCamera = \"image/*;capture=camera\",\n                    button = this._options.camera.button,\n                    buttonId = button ? this._getButtonId(button) : this._defaultButtonId,\n                    optionRoot = this._options;\n\n                // If we are not targeting the default button, it is an \"extra\" button\n                if (buttonId && buttonId !== this._defaultButtonId) {\n                    optionRoot = this._extraButtonSpecs[buttonId];\n                }\n\n                // Camera access won't work in iOS if the `multiple` attribute is present on the file input\n                optionRoot.multiple = false;\n\n                // update the options\n                if (optionRoot.validation.acceptFiles === null) {\n                    optionRoot.validation.acceptFiles = acceptIosCamera;\n                }\n                else {\n                    optionRoot.validation.acceptFiles += \",\" + acceptIosCamera;\n                }\n\n                // update the already-created button\n                qq.each(this._buttons, function(idx, button) {\n                    if (button.getButtonId() === buttonId) {\n                        button.setMultiple(optionRoot.multiple);\n                        button.setAcceptFiles(optionRoot.acceptFiles);\n\n                        return false;\n                    }\n                });\n            }\n        },\n\n        _handleCheckedCallback: function(details) {\n            var self = this,\n                callbackRetVal = details.callback();\n\n            if (qq.isGenericPromise(callbackRetVal)) {\n                this.log(details.name + \" - waiting for \" + details.name + \" promise to be fulfilled for \" + details.identifier);\n                return callbackRetVal.then(\n                    function(successParam) {\n                        self.log(details.name + \" promise success for \" + details.identifier);\n                        details.onSuccess(successParam);\n                    },\n                    function() {\n                        if (details.onFailure) {\n                            self.log(details.name + \" promise failure for \" + details.identifier);\n                            details.onFailure();\n                        }\n                        else {\n                            self.log(details.name + \" promise failure for \" + details.identifier);\n                        }\n                    });\n            }\n\n            if (callbackRetVal !== false) {\n                details.onSuccess(callbackRetVal);\n            }\n            else {\n                if (details.onFailure) {\n                    this.log(details.name + \" - return value was 'false' for \" + details.identifier + \".  Invoking failure callback.\");\n                    details.onFailure();\n                }\n                else {\n                    this.log(details.name + \" - return value was 'false' for \" + details.identifier + \".  Will not proceed.\");\n                }\n            }\n\n            return callbackRetVal;\n        },\n\n        // Updates internal state when a new file has been received, and adds it along with its ID to a passed array.\n        _handleNewFile: function(file, batchId, newFileWrapperList) {\n            var self = this,\n                uuid = qq.getUniqueId(),\n                size = -1,\n                name = qq.getFilename(file),\n                actualFile = file.blob || file,\n                handler = this._customNewFileHandler ?\n                    this._customNewFileHandler :\n                    qq.bind(self._handleNewFileGeneric, self);\n\n            if (!qq.isInput(actualFile) && actualFile.size >= 0) {\n                size = actualFile.size;\n            }\n\n            handler(actualFile, name, uuid, size, newFileWrapperList, batchId, this._options.request.uuidName, {\n                uploadData: self._uploadData,\n                paramsStore: self._paramsStore,\n                addFileToHandler: function(id, file) {\n                    self._handler.add(id, file);\n                    self._netUploadedOrQueued++;\n                    self._trackButton(id);\n                }\n            });\n        },\n\n        _handleNewFileGeneric: function(file, name, uuid, size, fileList, batchId) {\n            var id = this._uploadData.addFile({uuid: uuid, name: name, size: size, batchId: batchId});\n\n            this._handler.add(id, file);\n            this._trackButton(id);\n\n            this._netUploadedOrQueued++;\n\n            fileList.push({id: id, file: file});\n        },\n\n        _handlePasteSuccess: function(blob, extSuppliedName) {\n            var extension = blob.type.split(\"/\")[1],\n                name = extSuppliedName;\n\n            /*jshint eqeqeq: true, eqnull: true*/\n            if (name == null) {\n                name = this._options.paste.defaultName;\n            }\n\n            name += \".\" + extension;\n\n            this.addFiles({\n                name: name,\n                blob: blob\n            });\n        },\n\n        _handleDeleteSuccess: function(id) {\n            if (this.getUploads({id: id}).status !== qq.status.DELETED) {\n                var name = this.getName(id);\n\n                this._netUploadedOrQueued--;\n                this._netUploaded--;\n                this._handler.expunge(id);\n                this._uploadData.setStatus(id, qq.status.DELETED);\n                this.log(\"Delete request for '\" + name + \"' has succeeded.\");\n            }\n        },\n\n        _handleDeleteFailed: function(id, xhrOrXdr) {\n            var name = this.getName(id);\n\n            this._uploadData.setStatus(id, qq.status.DELETE_FAILED);\n            this.log(\"Delete request for '\" + name + \"' has failed.\", \"error\");\n\n            // Check first if xhrOrXdr is actually passed or valid\n            // For error reporting, we only have access to the response status if this is not\n            // an `XDomainRequest`.\n            if (!xhrOrXdr || xhrOrXdr.withCredentials === undefined) {\n                this._options.callbacks.onError(id, name, \"Delete request failed\", xhrOrXdr);\n            }\n            else {\n                this._options.callbacks.onError(id, name, \"Delete request failed with response code \" + xhrOrXdr.status, xhrOrXdr);\n            }\n        },\n\n        // Creates an extra button element\n        _initExtraButton: function(spec) {\n            var button = this._createUploadButton({\n                accept: spec.validation.acceptFiles,\n                allowedExtensions: spec.validation.allowedExtensions,\n                element: spec.element,\n                folders: spec.folders,\n                multiple: spec.multiple,\n                title: spec.fileInputTitle\n            });\n\n            this._extraButtonSpecs[button.getButtonId()] = spec;\n        },\n\n        _initFormSupportAndParams: function() {\n            this._formSupport = qq.FormSupport && new qq.FormSupport(\n                this._options.form, qq.bind(this.uploadStoredFiles, this), qq.bind(this.log, this)\n            );\n\n            if (this._formSupport && this._formSupport.attachedToForm) {\n                this._paramsStore = this._createStore(\n                    this._options.request.params,  this._formSupport.getFormInputsAsObject\n                );\n\n                this._options.autoUpload = this._formSupport.newAutoUpload;\n                if (this._formSupport.newEndpoint) {\n                    this._options.request.endpoint = this._formSupport.newEndpoint;\n                }\n            }\n            else {\n                this._paramsStore = this._createStore(this._options.request.params);\n            }\n        },\n\n        _isDeletePossible: function() {\n            if (!qq.DeleteFileAjaxRequester || !this._options.deleteFile.enabled) {\n                return false;\n            }\n\n            if (this._options.cors.expected) {\n                if (qq.supportedFeatures.deleteFileCorsXhr) {\n                    return true;\n                }\n\n                if (qq.supportedFeatures.deleteFileCorsXdr && this._options.cors.allowXdr) {\n                    return true;\n                }\n\n                return false;\n            }\n\n            return true;\n        },\n\n        _isAllowedExtension: function(allowed, fileName) {\n            var valid = false;\n\n            if (!allowed.length) {\n                return true;\n            }\n\n            qq.each(allowed, function(idx, allowedExt) {\n                /**\n                 * If an argument is not a string, ignore it.  Added when a possible issue with MooTools hijacking the\n                 * `allowedExtensions` array was discovered.  See case #735 in the issue tracker for more details.\n                 */\n                if (qq.isString(allowedExt)) {\n                    /*jshint eqeqeq: true, eqnull: true*/\n                    var extRegex = new RegExp(\"\\\\.\" + allowedExt + \"$\", \"i\");\n\n                    if (fileName.match(extRegex) != null) {\n                        valid = true;\n                        return false;\n                    }\n                }\n            });\n\n            return valid;\n        },\n\n        /**\n         * Constructs and returns a message that describes an item/file error.  Also calls `onError` callback.\n         *\n         * @param code REQUIRED - a code that corresponds to a stock message describing this type of error\n         * @param maybeNameOrNames names of the items that have failed, if applicable\n         * @param item `File`, `Blob`, or `<input type=\"file\">`\n         * @private\n         */\n        _itemError: function(code, maybeNameOrNames, item) {\n            var message = this._options.messages[code],\n                allowedExtensions = [],\n                names = [].concat(maybeNameOrNames),\n                name = names[0],\n                buttonId = this._getButtonId(item),\n                validationBase = this._getValidationBase(buttonId),\n                extensionsForMessage, placeholderMatch;\n\n            function r(name, replacement) { message = message.replace(name, replacement); }\n\n            qq.each(validationBase.allowedExtensions, function(idx, allowedExtension) {\n                /**\n                 * If an argument is not a string, ignore it.  Added when a possible issue with MooTools hijacking the\n                 * `allowedExtensions` array was discovered.  See case #735 in the issue tracker for more details.\n                 */\n                if (qq.isString(allowedExtension)) {\n                    allowedExtensions.push(allowedExtension);\n                }\n            });\n\n            extensionsForMessage = allowedExtensions.join(\", \").toLowerCase();\n\n            r(\"{file}\", this._options.formatFileName(name));\n            r(\"{extensions}\", extensionsForMessage);\n            r(\"{sizeLimit}\", this._formatSize(validationBase.sizeLimit));\n            r(\"{minSizeLimit}\", this._formatSize(validationBase.minSizeLimit));\n\n            placeholderMatch = message.match(/(\\{\\w+\\})/g);\n            if (placeholderMatch !== null) {\n                qq.each(placeholderMatch, function(idx, placeholder) {\n                    r(placeholder, names[idx]);\n                });\n            }\n\n            this._options.callbacks.onError(null, name, message, undefined);\n\n            return message;\n        },\n\n        /**\n         * Conditionally orders a manual retry of a failed upload.\n         *\n         * @param id File ID of the failed upload\n         * @param callback Optional callback to invoke if a retry is prudent.\n         * In lieu of asking the upload handler to retry.\n         * @returns {boolean} true if a manual retry will occur\n         * @private\n         */\n        _manualRetry: function(id, callback) {\n            if (this._onBeforeManualRetry(id)) {\n                this._netUploadedOrQueued++;\n                this._uploadData.setStatus(id, qq.status.UPLOAD_RETRYING);\n\n                if (callback) {\n                    callback(id);\n                }\n                else {\n                    this._handler.retry(id);\n                }\n\n                return true;\n            }\n        },\n\n        _maybeAllComplete: function(id, status) {\n            var self = this,\n                notFinished = this._getNotFinished();\n\n            if (status === qq.status.UPLOAD_SUCCESSFUL) {\n                this._succeededSinceLastAllComplete.push(id);\n            }\n            else if (status === qq.status.UPLOAD_FAILED) {\n                this._failedSinceLastAllComplete.push(id);\n            }\n\n            if (notFinished === 0 &&\n                (this._succeededSinceLastAllComplete.length || this._failedSinceLastAllComplete.length)) {\n                // Attempt to ensure onAllComplete is not invoked before other callbacks, such as onCancel & onComplete\n                setTimeout(function() {\n                    self._onAllComplete(self._succeededSinceLastAllComplete, self._failedSinceLastAllComplete);\n                }, 0);\n            }\n        },\n\n        _maybeHandleIos8SafariWorkaround: function() {\n            var self = this;\n\n            if (this._options.workarounds.ios8SafariUploads && qq.ios800() && qq.iosSafari()) {\n                setTimeout(function() {\n                    window.alert(self._options.messages.unsupportedBrowserIos8Safari);\n                }, 0);\n                throw new qq.Error(this._options.messages.unsupportedBrowserIos8Safari);\n            }\n        },\n\n        _maybeParseAndSendUploadError: function(id, name, response, xhr) {\n            // Assuming no one will actually set the response code to something other than 200\n            // and still set 'success' to true...\n            if (!response.success) {\n                if (xhr && xhr.status !== 200 && !response.error) {\n                    this._options.callbacks.onError(id, name, \"XHR returned response code \" + xhr.status, xhr);\n                }\n                else {\n                    var errorReason = response.error ? response.error : this._options.text.defaultResponseError;\n                    this._options.callbacks.onError(id, name, errorReason, xhr);\n                }\n            }\n        },\n\n        _maybeProcessNextItemAfterOnValidateCallback: function(validItem, items, index, params, endpoint) {\n            var self = this;\n\n            if (items.length > index) {\n                if (validItem || !this._options.validation.stopOnFirstInvalidFile) {\n                    //use setTimeout to prevent a stack overflow with a large number of files in the batch & non-promissory callbacks\n                    setTimeout(function() {\n                        var validationDescriptor = self._getValidationDescriptor(items[index]),\n                            buttonId = self._getButtonId(items[index].file),\n                            button = self._getButton(buttonId);\n\n                        self._handleCheckedCallback({\n                            name: \"onValidate\",\n                            callback: qq.bind(self._options.callbacks.onValidate, self, validationDescriptor, button),\n                            onSuccess: qq.bind(self._onValidateCallbackSuccess, self, items, index, params, endpoint),\n                            onFailure: qq.bind(self._onValidateCallbackFailure, self, items, index, params, endpoint),\n                            identifier: \"Item '\" + validationDescriptor.name + \"', size: \" + validationDescriptor.size\n                        });\n                    }, 0);\n                }\n                else if (!validItem) {\n                    for (; index < items.length; index++) {\n                        self._fileOrBlobRejected(items[index].id);\n                    }\n                }\n            }\n        },\n\n        _onAllComplete: function(successful, failed) {\n            this._totalProgress && this._totalProgress.onAllComplete(successful, failed, this._preventRetries);\n\n            this._options.callbacks.onAllComplete(qq.extend([], successful), qq.extend([], failed));\n\n            this._succeededSinceLastAllComplete = [];\n            this._failedSinceLastAllComplete = [];\n        },\n\n        /**\n         * Attempt to automatically retry a failed upload.\n         *\n         * @param id The file ID of the failed upload\n         * @param name The name of the file associated with the failed upload\n         * @param responseJSON Response from the server, parsed into a javascript object\n         * @param xhr Ajax transport used to send the failed request\n         * @param callback Optional callback to be invoked if a retry is prudent.\n         * Invoked in lieu of asking the upload handler to retry.\n         * @returns {boolean} true if an auto-retry will occur\n         * @private\n         */\n        _onAutoRetry: function(id, name, responseJSON, xhr, callback) {\n            var self = this;\n\n            self._preventRetries[id] = responseJSON[self._options.retry.preventRetryResponseProperty];\n\n            if (self._shouldAutoRetry(id, name, responseJSON)) {\n                var retryWaitPeriod = self._options.retry.autoAttemptDelay * 1000;\n\n                self._maybeParseAndSendUploadError.apply(self, arguments);\n                self._options.callbacks.onAutoRetry(id, name, self._autoRetries[id]);\n                self._onBeforeAutoRetry(id, name);\n\n                self._uploadData.setStatus(id, qq.status.UPLOAD_RETRYING);\n                self._retryTimeouts[id] = setTimeout(function() {\n                    self.log(\"Starting retry for \" + name + \"...\");\n\n                    if (callback) {\n                        callback(id);\n                    }\n                    else {\n                        self._handler.retry(id);\n                    }\n                }, retryWaitPeriod);\n\n                return true;\n            }\n        },\n\n        _onBeforeAutoRetry: function(id, name) {\n            this.log(\"Waiting \" + this._options.retry.autoAttemptDelay + \" seconds before retrying \" + name + \"...\");\n        },\n\n        //return false if we should not attempt the requested retry\n        _onBeforeManualRetry: function(id) {\n            var itemLimit = this._currentItemLimit,\n                fileName;\n\n            if (this._preventRetries[id]) {\n                this.log(\"Retries are forbidden for id \" + id, \"warn\");\n                return false;\n            }\n            else if (this._handler.isValid(id)) {\n                fileName = this.getName(id);\n\n                if (this._options.callbacks.onManualRetry(id, fileName) === false) {\n                    return false;\n                }\n\n                if (itemLimit > 0 && this._netUploadedOrQueued + 1 > itemLimit) {\n                    this._itemError(\"retryFailTooManyItems\");\n                    return false;\n                }\n\n                this.log(\"Retrying upload for '\" + fileName + \"' (id: \" + id + \")...\");\n                return true;\n            }\n            else {\n                this.log(\"'\" + id + \"' is not a valid file ID\", \"error\");\n                return false;\n            }\n        },\n\n        _onCancel: function(id, name) {\n            this._netUploadedOrQueued--;\n\n            clearTimeout(this._retryTimeouts[id]);\n\n            var storedItemIndex = qq.indexOf(this._storedIds, id);\n            if (!this._options.autoUpload && storedItemIndex >= 0) {\n                this._storedIds.splice(storedItemIndex, 1);\n            }\n\n            this._uploadData.setStatus(id, qq.status.CANCELED);\n        },\n\n        _onComplete: function(id, name, result, xhr) {\n            if (!result.success) {\n                this._netUploadedOrQueued--;\n                this._uploadData.setStatus(id, qq.status.UPLOAD_FAILED);\n\n                if (result[this._options.retry.preventRetryResponseProperty] === true) {\n                    this._preventRetries[id] = true;\n                }\n            }\n            else {\n                if (result.thumbnailUrl) {\n                    this._thumbnailUrls[id] = result.thumbnailUrl;\n                }\n\n                this._netUploaded++;\n                this._uploadData.setStatus(id, qq.status.UPLOAD_SUCCESSFUL);\n            }\n\n            this._maybeParseAndSendUploadError(id, name, result, xhr);\n\n            return result.success ? true : false;\n        },\n\n        _onDelete: function(id) {\n            this._uploadData.setStatus(id, qq.status.DELETING);\n        },\n\n        _onDeleteComplete: function(id, xhrOrXdr, isError) {\n            var name = this.getName(id);\n\n            if (isError) {\n                this._handleDeleteFailed(id, xhrOrXdr);\n            }\n            else {\n                this._handleDeleteSuccess(id);\n            }\n        },\n\n        _onInputChange: function(input) {\n            var fileIndex;\n\n            if (qq.supportedFeatures.ajaxUploading) {\n                for (fileIndex = 0; fileIndex < input.files.length; fileIndex++) {\n                    this._annotateWithButtonId(input.files[fileIndex], input);\n                }\n\n                this.addFiles(input.files);\n            }\n            // Android 2.3.x will fire `onchange` even if no file has been selected\n            else if (input.value.length > 0) {\n                this.addFiles(input);\n            }\n\n            qq.each(this._buttons, function(idx, button) {\n                button.reset();\n            });\n        },\n\n        _onProgress: function(id, name, loaded, total) {\n            this._totalProgress && this._totalProgress.onIndividualProgress(id, loaded, total);\n        },\n\n        _onSubmit: function(id, name) {\n            //nothing to do yet in core uploader\n        },\n\n        _onSubmitCallbackSuccess: function(id, name) {\n            this._onSubmit.apply(this, arguments);\n            this._uploadData.setStatus(id, qq.status.SUBMITTED);\n            this._onSubmitted.apply(this, arguments);\n\n            if (this._options.autoUpload) {\n                this._options.callbacks.onSubmitted.apply(this, arguments);\n                this._uploadFile(id);\n            }\n            else {\n                this._storeForLater(id);\n                this._options.callbacks.onSubmitted.apply(this, arguments);\n            }\n        },\n\n        _onSubmitDelete: function(id, onSuccessCallback, additionalMandatedParams) {\n            var uuid = this.getUuid(id),\n                adjustedOnSuccessCallback;\n\n            if (onSuccessCallback) {\n                adjustedOnSuccessCallback = qq.bind(onSuccessCallback, this, id, uuid, additionalMandatedParams);\n            }\n\n            if (this._isDeletePossible()) {\n                this._handleCheckedCallback({\n                    name: \"onSubmitDelete\",\n                    callback: qq.bind(this._options.callbacks.onSubmitDelete, this, id),\n                    onSuccess: adjustedOnSuccessCallback ||\n                        qq.bind(this._deleteHandler.sendDelete, this, id, uuid, additionalMandatedParams),\n                    identifier: id\n                });\n                return true;\n            }\n            else {\n                this.log(\"Delete request ignored for ID \" + id + \", delete feature is disabled or request not possible \" +\n                    \"due to CORS on a user agent that does not support pre-flighting.\", \"warn\");\n                return false;\n            }\n        },\n\n        _onSubmitted: function(id) {\n            //nothing to do in the base uploader\n        },\n\n        _onTotalProgress: function(loaded, total) {\n            this._options.callbacks.onTotalProgress(loaded, total);\n        },\n\n        _onUploadPrep: function(id) {\n            // nothing to do in the core uploader for now\n        },\n\n        _onUpload: function(id, name) {\n            this._uploadData.setStatus(id, qq.status.UPLOADING);\n        },\n\n        _onUploadChunk: function(id, chunkData) {\n            //nothing to do in the base uploader\n        },\n\n        _onUploadStatusChange: function(id, oldStatus, newStatus) {\n            // Make sure a \"queued\" retry attempt is canceled if the upload has been paused\n            if (newStatus === qq.status.PAUSED) {\n                clearTimeout(this._retryTimeouts[id]);\n            }\n        },\n\n        _onValidateBatchCallbackFailure: function(fileWrappers) {\n            var self = this;\n\n            qq.each(fileWrappers, function(idx, fileWrapper) {\n                self._fileOrBlobRejected(fileWrapper.id);\n            });\n        },\n\n        _onValidateBatchCallbackSuccess: function(validationDescriptors, items, params, endpoint, button) {\n            var errorMessage,\n                itemLimit = this._currentItemLimit,\n                proposedNetFilesUploadedOrQueued = this._netUploadedOrQueued;\n\n            if (itemLimit === 0 || proposedNetFilesUploadedOrQueued <= itemLimit) {\n                if (items.length > 0) {\n                    this._handleCheckedCallback({\n                        name: \"onValidate\",\n                        callback: qq.bind(this._options.callbacks.onValidate, this, validationDescriptors[0], button),\n                        onSuccess: qq.bind(this._onValidateCallbackSuccess, this, items, 0, params, endpoint),\n                        onFailure: qq.bind(this._onValidateCallbackFailure, this, items, 0, params, endpoint),\n                        identifier: \"Item '\" + items[0].file.name + \"', size: \" + items[0].file.size\n                    });\n                }\n                else {\n                    this._itemError(\"noFilesError\");\n                }\n            }\n            else {\n                this._onValidateBatchCallbackFailure(items);\n                errorMessage = this._options.messages.tooManyItemsError\n                    .replace(/\\{netItems\\}/g, proposedNetFilesUploadedOrQueued)\n                    .replace(/\\{itemLimit\\}/g, itemLimit);\n                this._batchError(errorMessage);\n            }\n        },\n\n        _onValidateCallbackFailure: function(items, index, params, endpoint) {\n            var nextIndex = index + 1;\n\n            this._fileOrBlobRejected(items[index].id, items[index].file.name);\n\n            this._maybeProcessNextItemAfterOnValidateCallback(false, items, nextIndex, params, endpoint);\n        },\n\n        _onValidateCallbackSuccess: function(items, index, params, endpoint) {\n            var self = this,\n                nextIndex = index + 1,\n                validationDescriptor = this._getValidationDescriptor(items[index]);\n\n            this._validateFileOrBlobData(items[index], validationDescriptor)\n                .then(\n                function() {\n                    self._upload(items[index].id, params, endpoint);\n                    self._maybeProcessNextItemAfterOnValidateCallback(true, items, nextIndex, params, endpoint);\n                },\n                function() {\n                    self._maybeProcessNextItemAfterOnValidateCallback(false, items, nextIndex, params, endpoint);\n                }\n            );\n        },\n\n        _prepareItemsForUpload: function(items, params, endpoint) {\n            if (items.length === 0) {\n                this._itemError(\"noFilesError\");\n                return;\n            }\n\n            var validationDescriptors = this._getValidationDescriptors(items),\n                buttonId = this._getButtonId(items[0].file),\n                button = this._getButton(buttonId);\n\n            this._handleCheckedCallback({\n                name: \"onValidateBatch\",\n                callback: qq.bind(this._options.callbacks.onValidateBatch, this, validationDescriptors, button),\n                onSuccess: qq.bind(this._onValidateBatchCallbackSuccess, this, validationDescriptors, items, params, endpoint, button),\n                onFailure: qq.bind(this._onValidateBatchCallbackFailure, this, items),\n                identifier: \"batch validation\"\n            });\n        },\n\n        _preventLeaveInProgress: function() {\n            var self = this;\n\n            this._disposeSupport.attach(window, \"beforeunload\", function(e) {\n                if (self.getInProgress()) {\n                    e = e || window.event;\n                    // for ie, ff\n                    e.returnValue = self._options.messages.onLeave;\n                    // for webkit\n                    return self._options.messages.onLeave;\n                }\n            });\n        },\n\n        // Attempts to refresh session data only if the `qq.Session` module exists\n        // and a session endpoint has been specified.  The `onSessionRequestComplete`\n        // callback will be invoked once the refresh is complete.\n        _refreshSessionData: function() {\n            var self = this,\n                options = this._options.session;\n\n            /* jshint eqnull:true */\n            if (qq.Session && this._options.session.endpoint != null) {\n                if (!this._session) {\n                    qq.extend(options, {cors: this._options.cors});\n\n                    options.log = qq.bind(this.log, this);\n                    options.addFileRecord = qq.bind(this._addCannedFile, this);\n\n                    this._session = new qq.Session(options);\n                }\n\n                setTimeout(function() {\n                    self._session.refresh().then(function(response, xhrOrXdr) {\n                        self._sessionRequestComplete();\n                        self._options.callbacks.onSessionRequestComplete(response, true, xhrOrXdr);\n\n                    }, function(response, xhrOrXdr) {\n\n                        self._options.callbacks.onSessionRequestComplete(response, false, xhrOrXdr);\n                    });\n                }, 0);\n            }\n        },\n\n        _sessionRequestComplete: function() {},\n\n        _setSize: function(id, newSize) {\n            this._uploadData.updateSize(id, newSize);\n            this._totalProgress && this._totalProgress.onNewSize(id);\n        },\n\n        _shouldAutoRetry: function(id, name, responseJSON) {\n            var uploadData = this._uploadData.retrieve({id: id});\n\n            /*jshint laxbreak: true */\n            if (!this._preventRetries[id]\n                && this._options.retry.enableAuto\n                && uploadData.status !== qq.status.PAUSED) {\n\n                if (this._autoRetries[id] === undefined) {\n                    this._autoRetries[id] = 0;\n                }\n\n                if (this._autoRetries[id] < this._options.retry.maxAutoAttempts) {\n                    this._autoRetries[id] += 1;\n                    return true;\n                }\n            }\n\n            return false;\n        },\n\n        _storeForLater: function(id) {\n            this._storedIds.push(id);\n        },\n\n        // Maps a file with the button that was used to select it.\n        _trackButton: function(id) {\n            var buttonId;\n\n            if (qq.supportedFeatures.ajaxUploading) {\n                buttonId = this._handler.getFile(id).qqButtonId;\n            }\n            else {\n                buttonId = this._getButtonId(this._handler.getInput(id));\n            }\n\n            if (buttonId) {\n                this._buttonIdsForFileIds[id] = buttonId;\n            }\n        },\n\n        _updateFormSupportAndParams: function(formElementOrId) {\n            this._options.form.element = formElementOrId;\n\n            this._formSupport = qq.FormSupport && new qq.FormSupport(\n                    this._options.form, qq.bind(this.uploadStoredFiles, this), qq.bind(this.log, this)\n                );\n\n            if (this._formSupport && this._formSupport.attachedToForm) {\n                this._paramsStore.addReadOnly(null, this._formSupport.getFormInputsAsObject);\n\n                this._options.autoUpload = this._formSupport.newAutoUpload;\n                if (this._formSupport.newEndpoint) {\n                    this.setEndpoint(this._formSupport.newEndpoint);\n                }\n            }\n        },\n\n        _upload: function(id, params, endpoint) {\n            var name = this.getName(id);\n\n            if (params) {\n                this.setParams(params, id);\n            }\n\n            if (endpoint) {\n                this.setEndpoint(endpoint, id);\n            }\n\n            this._handleCheckedCallback({\n                name: \"onSubmit\",\n                callback: qq.bind(this._options.callbacks.onSubmit, this, id, name),\n                onSuccess: qq.bind(this._onSubmitCallbackSuccess, this, id, name),\n                onFailure: qq.bind(this._fileOrBlobRejected, this, id, name),\n                identifier: id\n            });\n        },\n\n        _uploadFile: function(id) {\n            if (!this._handler.upload(id)) {\n                this._uploadData.setStatus(id, qq.status.QUEUED);\n            }\n        },\n\n        _uploadStoredFiles: function() {\n            var idToUpload, stillSubmitting,\n                self = this;\n\n            while (this._storedIds.length) {\n                idToUpload = this._storedIds.shift();\n                this._uploadFile(idToUpload);\n            }\n\n            // If we are still waiting for some files to clear validation, attempt to upload these again in a bit\n            stillSubmitting = this.getUploads({status: qq.status.SUBMITTING}).length;\n            if (stillSubmitting) {\n                qq.log(\"Still waiting for \" + stillSubmitting + \" files to clear submit queue. Will re-parse stored IDs array shortly.\");\n                setTimeout(function() {\n                    self._uploadStoredFiles();\n                }, 1000);\n            }\n        },\n\n        /**\n         * Performs some internal validation checks on an item, defined in the `validation` option.\n         *\n         * @param fileWrapper Wrapper containing a `file` along with an `id`\n         * @param validationDescriptor Normalized information about the item (`size`, `name`).\n         * @returns qq.Promise with appropriate callbacks invoked depending on the validity of the file\n         * @private\n         */\n        _validateFileOrBlobData: function(fileWrapper, validationDescriptor) {\n            var self = this,\n                file = (function() {\n                    if (fileWrapper.file instanceof qq.BlobProxy) {\n                        return fileWrapper.file.referenceBlob;\n                    }\n                    return fileWrapper.file;\n                }()),\n                name = validationDescriptor.name,\n                size = validationDescriptor.size,\n                buttonId = this._getButtonId(fileWrapper.file),\n                validationBase = this._getValidationBase(buttonId),\n                validityChecker = new qq.Promise();\n\n            validityChecker.then(\n                function() {},\n                function() {\n                    self._fileOrBlobRejected(fileWrapper.id, name);\n                });\n\n            if (qq.isFileOrInput(file) && !this._isAllowedExtension(validationBase.allowedExtensions, name)) {\n                this._itemError(\"typeError\", name, file);\n                return validityChecker.failure();\n            }\n\n            if (!this._options.validation.allowEmpty && size === 0) {\n                this._itemError(\"emptyError\", name, file);\n                return validityChecker.failure();\n            }\n\n            if (size > 0 && validationBase.sizeLimit && size > validationBase.sizeLimit) {\n                this._itemError(\"sizeError\", name, file);\n                return validityChecker.failure();\n            }\n\n            if (size > 0 && size < validationBase.minSizeLimit) {\n                this._itemError(\"minSizeError\", name, file);\n                return validityChecker.failure();\n            }\n\n            if (qq.ImageValidation && qq.supportedFeatures.imagePreviews && qq.isFile(file)) {\n                new qq.ImageValidation(file, qq.bind(self.log, self)).validate(validationBase.image).then(\n                    validityChecker.success,\n                    function(errorCode) {\n                        self._itemError(errorCode + \"ImageError\", name, file);\n                        validityChecker.failure();\n                    }\n                );\n            }\n            else {\n                validityChecker.success();\n            }\n\n            return validityChecker;\n        },\n\n        _wrapCallbacks: function() {\n            var self, safeCallback, prop;\n\n            self = this;\n\n            safeCallback = function(name, callback, args) {\n                var errorMsg;\n\n                try {\n                    return callback.apply(self, args);\n                }\n                catch (exception) {\n                    errorMsg = exception.message || exception.toString();\n                    self.log(\"Caught exception in '\" + name + \"' callback - \" + errorMsg, \"error\");\n                }\n            };\n\n            /* jshint forin: false, loopfunc: true */\n            for (prop in this._options.callbacks) {\n                (function() {\n                    var callbackName, callbackFunc;\n                    callbackName = prop;\n                    callbackFunc = self._options.callbacks[callbackName];\n                    self._options.callbacks[callbackName] = function() {\n                        return safeCallback(callbackName, callbackFunc, arguments);\n                    };\n                }());\n            }\n        }\n    };\n}());\n","/*globals qq*/\n(function() {\n    \"use strict\";\n\n    qq.FineUploaderBasic = function(o) {\n        var self = this;\n\n        // These options define FineUploaderBasic mode.\n        this._options = {\n            debug: false,\n            button: null,\n            multiple: true,\n            maxConnections: 3,\n            disableCancelForFormUploads: false,\n            autoUpload: true,\n\n            request: {\n                customHeaders: {},\n                endpoint: \"/server/upload\",\n                filenameParam: \"qqfilename\",\n                forceMultipart: true,\n                inputName: \"qqfile\",\n                method: \"POST\",\n                params: {},\n                paramsInBody: true,\n                totalFileSizeName: \"qqtotalfilesize\",\n                uuidName: \"qquuid\"\n            },\n\n            validation: {\n                allowedExtensions: [],\n                sizeLimit: 0,\n                minSizeLimit: 0,\n                itemLimit: 0,\n                stopOnFirstInvalidFile: true,\n                acceptFiles: null,\n                image: {\n                    maxHeight: 0,\n                    maxWidth: 0,\n                    minHeight: 0,\n                    minWidth: 0\n                },\n                allowEmpty: false\n            },\n\n            callbacks: {\n                onSubmit: function(id, name) {},\n                onSubmitted: function(id, name) {},\n                onComplete: function(id, name, responseJSON, maybeXhr) {},\n                onAllComplete: function(successful, failed) {},\n                onCancel: function(id, name) {},\n                onUpload: function(id, name) {},\n                onUploadChunk: function(id, name, chunkData) {},\n                onUploadChunkSuccess: function(id, chunkData, responseJSON, xhr) {},\n                onResume: function(id, fileName, chunkData) {},\n                onProgress: function(id, name, loaded, total) {},\n                onTotalProgress: function(loaded, total) {},\n                onError: function(id, name, reason, maybeXhrOrXdr) {},\n                onAutoRetry: function(id, name, attemptNumber) {},\n                onManualRetry: function(id, name) {},\n                onValidateBatch: function(fileOrBlobData) {},\n                onValidate: function(fileOrBlobData) {},\n                onSubmitDelete: function(id) {},\n                onDelete: function(id) {},\n                onDeleteComplete: function(id, xhrOrXdr, isError) {},\n                onPasteReceived: function(blob) {},\n                onStatusChange: function(id, oldStatus, newStatus) {},\n                onSessionRequestComplete: function(response, success, xhrOrXdr) {}\n            },\n\n            messages: {\n                typeError: \"{file} has an invalid extension. Valid extension(s): {extensions}.\",\n                sizeError: \"{file} is too large, maximum file size is {sizeLimit}.\",\n                minSizeError: \"{file} is too small, minimum file size is {minSizeLimit}.\",\n                emptyError: \"{file} is empty, please select files again without it.\",\n                noFilesError: \"No files to upload.\",\n                tooManyItemsError: \"Too many items ({netItems}) would be uploaded.  Item limit is {itemLimit}.\",\n                maxHeightImageError: \"Image is too tall.\",\n                maxWidthImageError: \"Image is too wide.\",\n                minHeightImageError: \"Image is not tall enough.\",\n                minWidthImageError: \"Image is not wide enough.\",\n                retryFailTooManyItems: \"Retry failed - you have reached your file limit.\",\n                onLeave: \"The files are being uploaded, if you leave now the upload will be canceled.\",\n                unsupportedBrowserIos8Safari: \"Unrecoverable error - this browser does not permit file uploading of any kind due to serious bugs in iOS8 Safari.  Please use iOS8 Chrome until Apple fixes these issues.\"\n            },\n\n            retry: {\n                enableAuto: false,\n                maxAutoAttempts: 3,\n                autoAttemptDelay: 5,\n                preventRetryResponseProperty: \"preventRetry\"\n            },\n\n            classes: {\n                buttonHover: \"qq-upload-button-hover\",\n                buttonFocus: \"qq-upload-button-focus\"\n            },\n\n            chunking: {\n                enabled: false,\n                concurrent: {\n                    enabled: false\n                },\n                mandatory: false,\n                paramNames: {\n                    partIndex: \"qqpartindex\",\n                    partByteOffset: \"qqpartbyteoffset\",\n                    chunkSize: \"qqchunksize\",\n                    totalFileSize: \"qqtotalfilesize\",\n                    totalParts: \"qqtotalparts\"\n                },\n                partSize: 2000000,\n                // only relevant for traditional endpoints, only required when concurrent.enabled === true\n                success: {\n                    endpoint: null\n                }\n            },\n\n            resume: {\n                enabled: false,\n                recordsExpireIn: 7, //days\n                paramNames: {\n                    resuming: \"qqresume\"\n                }\n            },\n\n            formatFileName: function(fileOrBlobName) {\n                return fileOrBlobName;\n            },\n\n            text: {\n                defaultResponseError: \"Upload failure reason unknown\",\n                fileInputTitle: \"file input\",\n                sizeSymbols: [\"kB\", \"MB\", \"GB\", \"TB\", \"PB\", \"EB\"]\n            },\n\n            deleteFile: {\n                enabled: false,\n                method: \"DELETE\",\n                endpoint: \"/server/upload\",\n                customHeaders: {},\n                params: {}\n            },\n\n            cors: {\n                expected: false,\n                sendCredentials: false,\n                allowXdr: false\n            },\n\n            blobs: {\n                defaultName: \"misc_data\"\n            },\n\n            paste: {\n                targetElement: null,\n                defaultName: \"pasted_image\"\n            },\n\n            camera: {\n                ios: false,\n\n                // if ios is true: button is null means target the default button, otherwise target the button specified\n                button: null\n            },\n\n            // This refers to additional upload buttons to be handled by Fine Uploader.\n            // Each element is an object, containing `element` as the only required\n            // property.  The `element` must be a container that will ultimately\n            // contain an invisible `<input type=\"file\">` created by Fine Uploader.\n            // Optional properties of each object include `multiple`, `validation`,\n            // and `folders`.\n            extraButtons: [],\n\n            // Depends on the session module.  Used to query the server for an initial file list\n            // during initialization and optionally after a `reset`.\n            session: {\n                endpoint: null,\n                params: {},\n                customHeaders: {},\n                refreshOnReset: true\n            },\n\n            // Send parameters associated with an existing form along with the files\n            form: {\n                // Element ID, HTMLElement, or null\n                element: \"qq-form\",\n\n                // Overrides the base `autoUpload`, unless `element` is null.\n                autoUpload: false,\n\n                // true = upload files on form submission (and squelch submit event)\n                interceptSubmit: true\n            },\n\n            // scale images client side, upload a new file for each scaled version\n            scaling: {\n                customResizer: null,\n\n                // send the original file as well\n                sendOriginal: true,\n\n                // fox orientation for scaled images\n                orient: true,\n\n                // If null, scaled image type will match reference image type.  This value will be referred to\n                // for any size record that does not specific a type.\n                defaultType: null,\n\n                defaultQuality: 80,\n\n                failureText: \"Failed to scale\",\n\n                includeExif: false,\n\n                // metadata about each requested scaled version\n                sizes: []\n            },\n\n            workarounds: {\n                iosEmptyVideos: true,\n                ios8SafariUploads: true,\n                ios8BrowserCrash: false\n            }\n        };\n\n        // Replace any default options with user defined ones\n        qq.extend(this._options, o, true);\n\n        this._buttons = [];\n        this._extraButtonSpecs = {};\n        this._buttonIdsForFileIds = [];\n\n        this._wrapCallbacks();\n        this._disposeSupport =  new qq.DisposeSupport();\n\n        this._storedIds = [];\n        this._autoRetries = [];\n        this._retryTimeouts = [];\n        this._preventRetries = [];\n        this._thumbnailUrls = [];\n\n        this._netUploadedOrQueued = 0;\n        this._netUploaded = 0;\n        this._uploadData = this._createUploadDataTracker();\n\n        this._initFormSupportAndParams();\n\n        this._customHeadersStore = this._createStore(this._options.request.customHeaders);\n        this._deleteFileCustomHeadersStore = this._createStore(this._options.deleteFile.customHeaders);\n\n        this._deleteFileParamsStore = this._createStore(this._options.deleteFile.params);\n\n        this._endpointStore = this._createStore(this._options.request.endpoint);\n        this._deleteFileEndpointStore = this._createStore(this._options.deleteFile.endpoint);\n\n        this._handler = this._createUploadHandler();\n\n        this._deleteHandler = qq.DeleteFileAjaxRequester && this._createDeleteHandler();\n\n        if (this._options.button) {\n            this._defaultButtonId = this._createUploadButton({\n                element: this._options.button,\n                title: this._options.text.fileInputTitle\n            }).getButtonId();\n        }\n\n        this._generateExtraButtonSpecs();\n\n        this._handleCameraAccess();\n\n        if (this._options.paste.targetElement) {\n            if (qq.PasteSupport) {\n                this._pasteHandler = this._createPasteHandler();\n            }\n            else {\n                this.log(\"Paste support module not found\", \"error\");\n            }\n        }\n\n        this._preventLeaveInProgress();\n\n        this._imageGenerator = qq.ImageGenerator && new qq.ImageGenerator(qq.bind(this.log, this));\n        this._refreshSessionData();\n\n        this._succeededSinceLastAllComplete = [];\n        this._failedSinceLastAllComplete = [];\n\n        this._scaler = (qq.Scaler && new qq.Scaler(this._options.scaling, qq.bind(this.log, this))) || {};\n        if (this._scaler.enabled) {\n            this._customNewFileHandler = qq.bind(this._scaler.handleNewFile, this._scaler);\n        }\n\n        if (qq.TotalProgress && qq.supportedFeatures.progressBar) {\n            this._totalProgress = new qq.TotalProgress(\n                qq.bind(this._onTotalProgress, this),\n\n                function(id) {\n                    var entry = self._uploadData.retrieve({id: id});\n                    return (entry && entry.size) || 0;\n                }\n            );\n        }\n\n        this._currentItemLimit = this._options.validation.itemLimit;\n    };\n\n    // Define the private & public API methods.\n    qq.FineUploaderBasic.prototype = qq.basePublicApi;\n    qq.extend(qq.FineUploaderBasic.prototype, qq.basePrivateApi);\n}());\n","/*globals qq, XDomainRequest*/\n/** Generic class for sending non-upload ajax requests and handling the associated responses **/\nqq.AjaxRequester = function(o) {\n    \"use strict\";\n\n    var log, shouldParamsBeInQueryString,\n        queue = [],\n        requestData = {},\n        options = {\n            acceptHeader: null,\n            validMethods: [\"PATCH\", \"POST\", \"PUT\"],\n            method: \"POST\",\n            contentType: \"application/x-www-form-urlencoded\",\n            maxConnections: 3,\n            customHeaders: {},\n            endpointStore: {},\n            paramsStore: {},\n            mandatedParams: {},\n            allowXRequestedWithAndCacheControl: true,\n            successfulResponseCodes: {\n                DELETE: [200, 202, 204],\n                PATCH: [200, 201, 202, 203, 204],\n                POST: [200, 201, 202, 203, 204],\n                PUT: [200, 201, 202, 203, 204],\n                GET: [200]\n            },\n            cors: {\n                expected: false,\n                sendCredentials: false\n            },\n            log: function(str, level) {},\n            onSend: function(id) {},\n            onComplete: function(id, xhrOrXdr, isError) {},\n            onProgress: null\n        };\n\n    qq.extend(options, o);\n    log = options.log;\n\n    if (qq.indexOf(options.validMethods, options.method) < 0) {\n        throw new Error(\"'\" + options.method + \"' is not a supported method for this type of request!\");\n    }\n\n    // [Simple methods](http://www.w3.org/TR/cors/#simple-method)\n    // are defined by the W3C in the CORS spec as a list of methods that, in part,\n    // make a CORS request eligible to be exempt from preflighting.\n    function isSimpleMethod() {\n        return qq.indexOf([\"GET\", \"POST\", \"HEAD\"], options.method) >= 0;\n    }\n\n    // [Simple headers](http://www.w3.org/TR/cors/#simple-header)\n    // are defined by the W3C in the CORS spec as a list of headers that, in part,\n    // make a CORS request eligible to be exempt from preflighting.\n    function containsNonSimpleHeaders(headers) {\n        var containsNonSimple = false;\n\n        qq.each(containsNonSimple, function(idx, header) {\n            if (qq.indexOf([\"Accept\", \"Accept-Language\", \"Content-Language\", \"Content-Type\"], header) < 0) {\n                containsNonSimple = true;\n                return false;\n            }\n        });\n\n        return containsNonSimple;\n    }\n\n    function isXdr(xhr) {\n        //The `withCredentials` test is a commonly accepted way to determine if XHR supports CORS.\n        return options.cors.expected && xhr.withCredentials === undefined;\n    }\n\n    // Returns either a new `XMLHttpRequest` or `XDomainRequest` instance.\n    function getCorsAjaxTransport() {\n        var xhrOrXdr;\n\n        if (window.XMLHttpRequest || window.ActiveXObject) {\n            xhrOrXdr = qq.createXhrInstance();\n\n            if (xhrOrXdr.withCredentials === undefined) {\n                xhrOrXdr = new XDomainRequest();\n                // Workaround for XDR bug in IE9 - https://social.msdn.microsoft.com/Forums/ie/en-US/30ef3add-767c-4436-b8a9-f1ca19b4812e/ie9-rtm-xdomainrequest-issued-requests-may-abort-if-all-event-handlers-not-specified?forum=iewebdevelopment\n                xhrOrXdr.onload = function() {};\n                xhrOrXdr.onerror = function() {};\n                xhrOrXdr.ontimeout = function() {};\n                xhrOrXdr.onprogress = function() {};\n            }\n        }\n\n        return xhrOrXdr;\n    }\n\n    // Returns either a new XHR/XDR instance, or an existing one for the associated `File` or `Blob`.\n    function getXhrOrXdr(id, suppliedXhr) {\n        var xhrOrXdr = requestData[id].xhr;\n\n        if (!xhrOrXdr) {\n            if (suppliedXhr) {\n                xhrOrXdr = suppliedXhr;\n            }\n            else {\n                if (options.cors.expected) {\n                    xhrOrXdr = getCorsAjaxTransport();\n                }\n                else {\n                    xhrOrXdr = qq.createXhrInstance();\n                }\n            }\n\n            requestData[id].xhr = xhrOrXdr;\n        }\n\n        return xhrOrXdr;\n    }\n\n    // Removes element from queue, sends next request\n    function dequeue(id) {\n        var i = qq.indexOf(queue, id),\n            max = options.maxConnections,\n            nextId;\n\n        delete requestData[id];\n        queue.splice(i, 1);\n\n        if (queue.length >= max && i < max) {\n            nextId = queue[max - 1];\n            sendRequest(nextId);\n        }\n    }\n\n    function onComplete(id, xdrError) {\n        var xhr = getXhrOrXdr(id),\n            method = options.method,\n            isError = xdrError === true;\n\n        dequeue(id);\n\n        if (isError) {\n            log(method + \" request for \" + id + \" has failed\", \"error\");\n        }\n        else if (!isXdr(xhr) && !isResponseSuccessful(xhr.status)) {\n            isError = true;\n            log(method + \" request for \" + id + \" has failed - response code \" + xhr.status, \"error\");\n        }\n\n        options.onComplete(id, xhr, isError);\n    }\n\n    function getParams(id) {\n        var onDemandParams = requestData[id].additionalParams,\n            mandatedParams = options.mandatedParams,\n            params;\n\n        if (options.paramsStore.get) {\n            params = options.paramsStore.get(id);\n        }\n\n        if (onDemandParams) {\n            qq.each(onDemandParams, function(name, val) {\n                params = params || {};\n                params[name] = val;\n            });\n        }\n\n        if (mandatedParams) {\n            qq.each(mandatedParams, function(name, val) {\n                params = params || {};\n                params[name] = val;\n            });\n        }\n\n        return params;\n    }\n\n    function sendRequest(id, optXhr) {\n        var xhr = getXhrOrXdr(id, optXhr),\n            method = options.method,\n            params = getParams(id),\n            payload = requestData[id].payload,\n            url;\n\n        options.onSend(id);\n\n        url = createUrl(id, params, requestData[id].additionalQueryParams);\n\n        // XDR and XHR status detection APIs differ a bit.\n        if (isXdr(xhr)) {\n            xhr.onload = getXdrLoadHandler(id);\n            xhr.onerror = getXdrErrorHandler(id);\n        }\n        else {\n            xhr.onreadystatechange = getXhrReadyStateChangeHandler(id);\n        }\n\n        registerForUploadProgress(id);\n\n        // The last parameter is assumed to be ignored if we are actually using `XDomainRequest`.\n        xhr.open(method, url, true);\n\n        // Instruct the transport to send cookies along with the CORS request,\n        // unless we are using `XDomainRequest`, which is not capable of this.\n        if (options.cors.expected && options.cors.sendCredentials && !isXdr(xhr)) {\n            xhr.withCredentials = true;\n        }\n\n        setHeaders(id);\n\n        log(\"Sending \" + method + \" request for \" + id);\n\n        if (payload) {\n            xhr.send(payload);\n        }\n        else if (shouldParamsBeInQueryString || !params) {\n            xhr.send();\n        }\n        else if (params && options.contentType && options.contentType.toLowerCase().indexOf(\"application/x-www-form-urlencoded\") >= 0) {\n            xhr.send(qq.obj2url(params, \"\"));\n        }\n        else if (params && options.contentType && options.contentType.toLowerCase().indexOf(\"application/json\") >= 0) {\n            xhr.send(JSON.stringify(params));\n        }\n        else {\n            xhr.send(params);\n        }\n\n        return xhr;\n    }\n\n    function createUrl(id, params, additionalQueryParams) {\n        var endpoint = options.endpointStore.get(id),\n            addToPath = requestData[id].addToPath;\n\n        /*jshint -W116,-W041 */\n        if (addToPath != undefined) {\n            endpoint += \"/\" + addToPath;\n        }\n\n        if (shouldParamsBeInQueryString && params) {\n            endpoint = qq.obj2url(params, endpoint);\n        }\n\n        if (additionalQueryParams) {\n            endpoint = qq.obj2url(additionalQueryParams, endpoint);\n        }\n\n        return endpoint;\n    }\n\n    // Invoked by the UA to indicate a number of possible states that describe\n    // a live `XMLHttpRequest` transport.\n    function getXhrReadyStateChangeHandler(id) {\n        return function() {\n            if (getXhrOrXdr(id).readyState === 4) {\n                onComplete(id);\n            }\n        };\n    }\n\n    function registerForUploadProgress(id) {\n        var onProgress = options.onProgress;\n\n        if (onProgress) {\n            getXhrOrXdr(id).upload.onprogress = function(e) {\n                if (e.lengthComputable) {\n                    onProgress(id, e.loaded, e.total);\n                }\n            };\n        }\n    }\n\n    // This will be called by IE to indicate **success** for an associated\n    // `XDomainRequest` transported request.\n    function getXdrLoadHandler(id) {\n        return function() {\n            onComplete(id);\n        };\n    }\n\n    // This will be called by IE to indicate **failure** for an associated\n    // `XDomainRequest` transported request.\n    function getXdrErrorHandler(id) {\n        return function() {\n            onComplete(id, true);\n        };\n    }\n\n    function setHeaders(id) {\n        var xhr = getXhrOrXdr(id),\n            customHeaders = options.customHeaders,\n            onDemandHeaders = requestData[id].additionalHeaders || {},\n            method = options.method,\n            allHeaders = {};\n\n        // If XDomainRequest is being used, we can't set headers, so just ignore this block.\n        if (!isXdr(xhr)) {\n            options.acceptHeader && xhr.setRequestHeader(\"Accept\", options.acceptHeader);\n\n            // Only attempt to add X-Requested-With & Cache-Control if permitted\n            if (options.allowXRequestedWithAndCacheControl) {\n                // Do not add X-Requested-With & Cache-Control if this is a cross-origin request\n                // OR the cross-origin request contains a non-simple method or header.\n                // This is done to ensure a preflight is not triggered exclusively based on the\n                // addition of these 2 non-simple headers.\n                if (!options.cors.expected || (!isSimpleMethod() || containsNonSimpleHeaders(customHeaders))) {\n                    xhr.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\n                    xhr.setRequestHeader(\"Cache-Control\", \"no-cache\");\n                }\n            }\n\n            if (options.contentType && (method === \"POST\" || method === \"PUT\")) {\n                xhr.setRequestHeader(\"Content-Type\", options.contentType);\n            }\n\n            qq.extend(allHeaders, qq.isFunction(customHeaders) ? customHeaders(id) : customHeaders);\n            qq.extend(allHeaders, onDemandHeaders);\n\n            qq.each(allHeaders, function(name, val) {\n                xhr.setRequestHeader(name, val);\n            });\n        }\n    }\n\n    function isResponseSuccessful(responseCode) {\n        return qq.indexOf(options.successfulResponseCodes[options.method], responseCode) >= 0;\n    }\n\n    function prepareToSend(id, optXhr, addToPath, additionalParams, additionalQueryParams, additionalHeaders, payload) {\n        requestData[id] = {\n            addToPath: addToPath,\n            additionalParams: additionalParams,\n            additionalQueryParams: additionalQueryParams,\n            additionalHeaders: additionalHeaders,\n            payload: payload\n        };\n\n        var len = queue.push(id);\n\n        // if too many active connections, wait...\n        if (len <= options.maxConnections) {\n            return sendRequest(id, optXhr);\n        }\n    }\n\n    shouldParamsBeInQueryString = options.method === \"GET\" || options.method === \"DELETE\";\n\n    qq.extend(this, {\n        // Start the process of sending the request.  The ID refers to the file associated with the request.\n        initTransport: function(id) {\n            var path, params, headers, payload, cacheBuster, additionalQueryParams;\n\n            return {\n                // Optionally specify the end of the endpoint path for the request.\n                withPath: function(appendToPath) {\n                    path = appendToPath;\n                    return this;\n                },\n\n                // Optionally specify additional parameters to send along with the request.\n                // These will be added to the query string for GET/DELETE requests or the payload\n                // for POST/PUT requests.  The Content-Type of the request will be used to determine\n                // how these parameters should be formatted as well.\n                withParams: function(additionalParams) {\n                    params = additionalParams;\n                    return this;\n                },\n\n                withQueryParams: function(_additionalQueryParams_) {\n                    additionalQueryParams = _additionalQueryParams_;\n                    return this;\n                },\n\n                // Optionally specify additional headers to send along with the request.\n                withHeaders: function(additionalHeaders) {\n                    headers = additionalHeaders;\n                    return this;\n                },\n\n                // Optionally specify a payload/body for the request.\n                withPayload: function(thePayload) {\n                    payload = thePayload;\n                    return this;\n                },\n\n                // Appends a cache buster (timestamp) to the request URL as a query parameter (only if GET or DELETE)\n                withCacheBuster: function() {\n                    cacheBuster = true;\n                    return this;\n                },\n\n                // Send the constructed request.\n                send: function(optXhr) {\n                    if (cacheBuster && qq.indexOf([\"GET\", \"DELETE\"], options.method) >= 0) {\n                        params.qqtimestamp = new Date().getTime();\n                    }\n\n                    return prepareToSend(id, optXhr, path, params, additionalQueryParams, headers, payload);\n                }\n            };\n        },\n\n        canceled: function(id) {\n            dequeue(id);\n        }\n    });\n};\n","/* globals qq */\n/**\n * Common upload handler functions.\n *\n * @constructor\n */\nqq.UploadHandler = function(spec) {\n    \"use strict\";\n\n    var proxy = spec.proxy,\n        fileState = {},\n        onCancel = proxy.onCancel,\n        getName = proxy.getName;\n\n    qq.extend(this, {\n        add: function(id, fileItem) {\n            fileState[id] = fileItem;\n            fileState[id].temp = {};\n        },\n\n        cancel: function(id) {\n            var self = this,\n                cancelFinalizationEffort = new qq.Promise(),\n                onCancelRetVal = onCancel(id, getName(id), cancelFinalizationEffort);\n\n            onCancelRetVal.then(function() {\n                if (self.isValid(id)) {\n                    fileState[id].canceled = true;\n                    self.expunge(id);\n                }\n                cancelFinalizationEffort.success();\n            });\n        },\n\n        expunge: function(id) {\n            delete fileState[id];\n        },\n\n        getThirdPartyFileId: function(id) {\n            return fileState[id].key;\n        },\n\n        isValid: function(id) {\n            return fileState[id] !== undefined;\n        },\n\n        reset: function() {\n            fileState = {};\n        },\n\n        _getFileState: function(id) {\n            return fileState[id];\n        },\n\n        _setThirdPartyFileId: function(id, thirdPartyFileId) {\n            fileState[id].key = thirdPartyFileId;\n        },\n\n        _wasCanceled: function(id) {\n            return !!fileState[id].canceled;\n        }\n    });\n};\n","/*globals qq*/\n/**\n * Base upload handler module.  Controls more specific handlers.\n *\n * @param o Options.  Passed along to the specific handler submodule as well.\n * @param namespace [optional] Namespace for the specific handler.\n */\nqq.UploadHandlerController = function(o, namespace) {\n    \"use strict\";\n\n    var controller = this,\n        chunkingPossible = false,\n        concurrentChunkingPossible = false,\n        chunking, preventRetryResponse, log, handler,\n\n    options = {\n        paramsStore: {},\n        maxConnections: 3, // maximum number of concurrent uploads\n        chunking: {\n            enabled: false,\n            multiple: {\n                enabled: false\n            }\n        },\n        log: function(str, level) {},\n        onProgress: function(id, fileName, loaded, total) {},\n        onComplete: function(id, fileName, response, xhr) {},\n        onCancel: function(id, fileName) {},\n        onUploadPrep: function(id) {}, // Called if non-trivial operations will be performed before onUpload\n        onUpload: function(id, fileName) {},\n        onUploadChunk: function(id, fileName, chunkData) {},\n        onUploadChunkSuccess: function(id, chunkData, response, xhr) {},\n        onAutoRetry: function(id, fileName, response, xhr) {},\n        onResume: function(id, fileName, chunkData) {},\n        onUuidChanged: function(id, newUuid) {},\n        getName: function(id) {},\n        setSize: function(id, newSize) {},\n        isQueued: function(id) {},\n        getIdsInProxyGroup: function(id) {},\n        getIdsInBatch: function(id) {}\n    },\n\n    chunked = {\n        // Called when each chunk has uploaded successfully\n        done: function(id, chunkIdx, response, xhr) {\n            var chunkData = handler._getChunkData(id, chunkIdx);\n\n            handler._getFileState(id).attemptingResume = false;\n\n            delete handler._getFileState(id).temp.chunkProgress[chunkIdx];\n            handler._getFileState(id).loaded += chunkData.size;\n\n            options.onUploadChunkSuccess(id, handler._getChunkDataForCallback(chunkData), response, xhr);\n        },\n\n        // Called when all chunks have been successfully uploaded and we want to ask the handler to perform any\n        // logic associated with closing out the file, such as combining the chunks.\n        finalize: function(id) {\n            var size = options.getSize(id),\n                name = options.getName(id);\n\n            log(\"All chunks have been uploaded for \" + id + \" - finalizing....\");\n            handler.finalizeChunks(id).then(\n                function(response, xhr) {\n                    log(\"Finalize successful for \" + id);\n\n                    var normaizedResponse = upload.normalizeResponse(response, true);\n\n                    options.onProgress(id, name, size, size);\n                    handler._maybeDeletePersistedChunkData(id);\n                    upload.cleanup(id, normaizedResponse, xhr);\n                },\n                function(response, xhr) {\n                    var normaizedResponse = upload.normalizeResponse(response, false);\n\n                    log(\"Problem finalizing chunks for file ID \" + id + \" - \" + normaizedResponse.error, \"error\");\n\n                    if (normaizedResponse.reset) {\n                        chunked.reset(id);\n                    }\n\n                    if (!options.onAutoRetry(id, name, normaizedResponse, xhr)) {\n                        upload.cleanup(id, normaizedResponse, xhr);\n                    }\n                }\n            );\n        },\n\n        handleFailure: function(chunkIdx, id, response, xhr) {\n            var name = options.getName(id);\n\n            log(\"Chunked upload request failed for \" + id + \", chunk \" + chunkIdx);\n\n            handler.clearCachedChunk(id, chunkIdx);\n\n            var responseToReport = upload.normalizeResponse(response, false),\n                inProgressIdx;\n\n            if (responseToReport.reset) {\n                chunked.reset(id);\n            }\n            else {\n                inProgressIdx = qq.indexOf(handler._getFileState(id).chunking.inProgress, chunkIdx);\n                if (inProgressIdx >= 0) {\n                    handler._getFileState(id).chunking.inProgress.splice(inProgressIdx, 1);\n                    handler._getFileState(id).chunking.remaining.unshift(chunkIdx);\n                }\n            }\n\n            // We may have aborted all other in-progress chunks for this file due to a failure.\n            // If so, ignore the failures associated with those aborts.\n            if (!handler._getFileState(id).temp.ignoreFailure) {\n                // If this chunk has failed, we want to ignore all other failures of currently in-progress\n                // chunks since they will be explicitly aborted\n                if (concurrentChunkingPossible) {\n                    handler._getFileState(id).temp.ignoreFailure = true;\n\n                    log(qq.format(\"Going to attempt to abort these chunks: {}. These are currently in-progress: {}.\", JSON.stringify(Object.keys(handler._getXhrs(id))), JSON.stringify(handler._getFileState(id).chunking.inProgress)));\n                    qq.each(handler._getXhrs(id), function(ckid, ckXhr) {\n                        log(qq.format(\"Attempting to abort file {}.{}. XHR readyState {}. \", id, ckid, ckXhr.readyState));\n                        ckXhr.abort();\n                        // Flag the transport, in case we are waiting for some other async operation\n                        // to complete before attempting to upload the chunk\n                        ckXhr._cancelled = true;\n                    });\n\n                    // We must indicate that all aborted chunks are no longer in progress\n                    handler.moveInProgressToRemaining(id);\n\n                    // Free up any connections used by these chunks, but don't allow any\n                    // other files to take up the connections (until we have exhausted all auto-retries)\n                    connectionManager.free(id, true);\n                }\n\n                if (!options.onAutoRetry(id, name, responseToReport, xhr)) {\n                    // If one chunk fails, abort all of the others to avoid odd race conditions that occur\n                    // if a chunk succeeds immediately after one fails before we have determined if the upload\n                    // is a failure or not.\n                    upload.cleanup(id, responseToReport, xhr);\n                }\n            }\n        },\n\n        hasMoreParts: function(id) {\n            return !!handler._getFileState(id).chunking.remaining.length;\n        },\n\n        nextPart: function(id) {\n            var nextIdx = handler._getFileState(id).chunking.remaining.shift();\n\n            if (nextIdx >= handler._getTotalChunks(id)) {\n                nextIdx = null;\n            }\n\n            return nextIdx;\n        },\n\n        reset: function(id) {\n            log(\"Server or callback has ordered chunking effort to be restarted on next attempt for item ID \" + id, \"error\");\n\n            handler._maybeDeletePersistedChunkData(id);\n            handler.reevaluateChunking(id);\n            handler._getFileState(id).loaded = 0;\n        },\n\n        sendNext: function(id) {\n            var size = options.getSize(id),\n                name = options.getName(id),\n                chunkIdx = chunked.nextPart(id),\n                chunkData = handler._getChunkData(id, chunkIdx),\n                resuming = handler._getFileState(id).attemptingResume,\n                inProgressChunks = handler._getFileState(id).chunking.inProgress || [];\n\n            if (handler._getFileState(id).loaded == null) {\n                handler._getFileState(id).loaded = 0;\n            }\n\n            // Don't follow-through with the resume attempt if the integrator returns false from onResume\n            if (resuming && options.onResume(id, name, chunkData) === false) {\n                chunked.reset(id);\n                chunkIdx = chunked.nextPart(id);\n                chunkData = handler._getChunkData(id, chunkIdx);\n                resuming = false;\n            }\n\n            // If all chunks have already uploaded successfully, we must be re-attempting the finalize step.\n            if (chunkIdx == null && inProgressChunks.length === 0) {\n                chunked.finalize(id);\n            }\n\n            // Send the next chunk\n            else {\n                log(qq.format(\"Sending chunked upload request for item {}.{}, bytes {}-{} of {}.\", id, chunkIdx, chunkData.start + 1, chunkData.end, size));\n                options.onUploadChunk(id, name, handler._getChunkDataForCallback(chunkData));\n                inProgressChunks.push(chunkIdx);\n                handler._getFileState(id).chunking.inProgress = inProgressChunks;\n\n                if (concurrentChunkingPossible) {\n                    connectionManager.open(id, chunkIdx);\n                }\n\n                if (concurrentChunkingPossible && connectionManager.available() && handler._getFileState(id).chunking.remaining.length) {\n                    chunked.sendNext(id);\n                }\n\n                if (chunkData.blob.size === 0) {\n                    log(qq.format(\"Chunk {} for file {} will not be uploaded, zero sized chunk.\", chunkIdx, id), \"error\");\n                    chunked.handleFailure(chunkIdx, id, \"File is no longer available\", null);\n                }\n                else {\n                    handler.uploadChunk(id, chunkIdx, resuming).then(\n                        // upload chunk success\n                        function success(response, xhr) {\n                            log(\"Chunked upload request succeeded for \" + id + \", chunk \" + chunkIdx);\n\n                            handler.clearCachedChunk(id, chunkIdx);\n\n                            var inProgressChunks = handler._getFileState(id).chunking.inProgress || [],\n                                responseToReport = upload.normalizeResponse(response, true),\n                                inProgressChunkIdx = qq.indexOf(inProgressChunks, chunkIdx);\n\n                            log(qq.format(\"Chunk {} for file {} uploaded successfully.\", chunkIdx, id));\n\n                            chunked.done(id, chunkIdx, responseToReport, xhr);\n\n                            if (inProgressChunkIdx >= 0) {\n                                inProgressChunks.splice(inProgressChunkIdx, 1);\n                            }\n\n                            handler._maybePersistChunkedState(id);\n\n                            if (!chunked.hasMoreParts(id) && inProgressChunks.length === 0) {\n                                chunked.finalize(id);\n                            }\n                            else if (chunked.hasMoreParts(id)) {\n                                chunked.sendNext(id);\n                            }\n                            else {\n                                log(qq.format(\"File ID {} has no more chunks to send and these chunk indexes are still marked as in-progress: {}\", id, JSON.stringify(inProgressChunks)));\n                            }\n                        },\n\n                        // upload chunk failure\n                        function failure(response, xhr) {\n                            chunked.handleFailure(chunkIdx, id, response, xhr);\n                        }\n                        )\n                        .done(function() {\n                            handler.clearXhr(id, chunkIdx);\n                        });\n                }\n            }\n        }\n    },\n\n    connectionManager = {\n        _open: [],\n        _openChunks: {},\n        _waiting: [],\n\n        available: function() {\n            var max = options.maxConnections,\n                openChunkEntriesCount = 0,\n                openChunksCount = 0;\n\n            qq.each(connectionManager._openChunks, function(fileId, openChunkIndexes) {\n                openChunkEntriesCount++;\n                openChunksCount += openChunkIndexes.length;\n            });\n\n            return max - (connectionManager._open.length - openChunkEntriesCount + openChunksCount);\n        },\n\n        /**\n         * Removes element from queue, starts upload of next\n         */\n        free: function(id, dontAllowNext) {\n            var allowNext = !dontAllowNext,\n                waitingIndex = qq.indexOf(connectionManager._waiting, id),\n                connectionsIndex = qq.indexOf(connectionManager._open, id),\n                nextId;\n\n            delete connectionManager._openChunks[id];\n\n            if (upload.getProxyOrBlob(id) instanceof qq.BlobProxy) {\n                log(\"Generated blob upload has ended for \" + id + \", disposing generated blob.\");\n                delete handler._getFileState(id).file;\n            }\n\n            // If this file was not consuming a connection, it was just waiting, so remove it from the waiting array\n            if (waitingIndex >= 0) {\n                connectionManager._waiting.splice(waitingIndex, 1);\n            }\n            // If this file was consuming a connection, allow the next file to be uploaded\n            else if (allowNext && connectionsIndex >= 0) {\n                connectionManager._open.splice(connectionsIndex, 1);\n\n                nextId = connectionManager._waiting.shift();\n                if (nextId >= 0) {\n                    connectionManager._open.push(nextId);\n                    upload.start(nextId);\n                }\n            }\n        },\n\n        getWaitingOrConnected: function() {\n            var waitingOrConnected = [];\n\n            // Chunked files may have multiple connections open per chunk (if concurrent chunking is enabled)\n            // We need to grab the file ID of any file that has at least one chunk consuming a connection.\n            qq.each(connectionManager._openChunks, function(fileId, chunks) {\n                if (chunks && chunks.length) {\n                    waitingOrConnected.push(parseInt(fileId));\n                }\n            });\n\n            // For non-chunked files, only one connection will be consumed per file.\n            // This is where we aggregate those file IDs.\n            qq.each(connectionManager._open, function(idx, fileId) {\n                if (!connectionManager._openChunks[fileId]) {\n                    waitingOrConnected.push(parseInt(fileId));\n                }\n            });\n\n            // There may be files waiting for a connection.\n            waitingOrConnected = waitingOrConnected.concat(connectionManager._waiting);\n\n            return waitingOrConnected;\n        },\n\n        isUsingConnection: function(id) {\n            return qq.indexOf(connectionManager._open, id) >= 0;\n        },\n\n        open: function(id, chunkIdx) {\n            if (chunkIdx == null) {\n                connectionManager._waiting.push(id);\n            }\n\n            if (connectionManager.available()) {\n                if (chunkIdx == null) {\n                    connectionManager._waiting.pop();\n                    connectionManager._open.push(id);\n                }\n                else {\n                    (function() {\n                        var openChunksEntry = connectionManager._openChunks[id] || [];\n                        openChunksEntry.push(chunkIdx);\n                        connectionManager._openChunks[id] = openChunksEntry;\n                    }());\n                }\n\n                return true;\n            }\n\n            return false;\n        },\n\n        reset: function() {\n            connectionManager._waiting = [];\n            connectionManager._open = [];\n        }\n    },\n\n    simple = {\n        send: function(id, name) {\n            handler._getFileState(id).loaded = 0;\n\n            log(\"Sending simple upload request for \" + id);\n            handler.uploadFile(id).then(\n                function(response, optXhr) {\n                    log(\"Simple upload request succeeded for \" + id);\n\n                    var responseToReport = upload.normalizeResponse(response, true),\n                        size = options.getSize(id);\n\n                    options.onProgress(id, name, size, size);\n                    upload.maybeNewUuid(id, responseToReport);\n                    upload.cleanup(id, responseToReport, optXhr);\n                },\n\n                function(response, optXhr) {\n                    log(\"Simple upload request failed for \" + id);\n\n                    var responseToReport = upload.normalizeResponse(response, false);\n\n                    if (!options.onAutoRetry(id, name, responseToReport, optXhr)) {\n                        upload.cleanup(id, responseToReport, optXhr);\n                    }\n                }\n            );\n        }\n    },\n\n    upload = {\n        cancel: function(id) {\n            log(\"Cancelling \" + id);\n            options.paramsStore.remove(id);\n            connectionManager.free(id);\n        },\n\n        cleanup: function(id, response, optXhr) {\n            var name = options.getName(id);\n\n            options.onComplete(id, name, response, optXhr);\n\n            if (handler._getFileState(id)) {\n                handler._clearXhrs && handler._clearXhrs(id);\n            }\n\n            connectionManager.free(id);\n        },\n\n        // Returns a qq.BlobProxy, or an actual File/Blob if no proxy is involved, or undefined\n        // if none of these are available for the ID\n        getProxyOrBlob: function(id) {\n            return (handler.getProxy && handler.getProxy(id)) ||\n                (handler.getFile && handler.getFile(id));\n        },\n\n        initHandler: function() {\n            var handlerType = namespace ? qq[namespace] : qq.traditional,\n                handlerModuleSubtype = qq.supportedFeatures.ajaxUploading ? \"Xhr\" : \"Form\";\n\n            handler = new handlerType[handlerModuleSubtype + \"UploadHandler\"](\n                options,\n                {\n                    getDataByUuid: options.getDataByUuid,\n                    getName: options.getName,\n                    getSize: options.getSize,\n                    getUuid: options.getUuid,\n                    log: log,\n                    onCancel: options.onCancel,\n                    onProgress: options.onProgress,\n                    onUuidChanged: options.onUuidChanged\n                }\n            );\n\n            if (handler._removeExpiredChunkingRecords) {\n                handler._removeExpiredChunkingRecords();\n            }\n        },\n\n        isDeferredEligibleForUpload: function(id) {\n            return options.isQueued(id);\n        },\n\n        // For Blobs that are part of a group of generated images, along with a reference image,\n        // this will ensure the blobs in the group are uploaded in the order they were triggered,\n        // even if some async processing must be completed on one or more Blobs first.\n        maybeDefer: function(id, blob) {\n            // If we don't have a file/blob yet & no file/blob exists for this item, request it,\n            // and then submit the upload to the specific handler once the blob is available.\n            // ASSUMPTION: This condition will only ever be true if XHR uploading is supported.\n            if (blob && !handler.getFile(id) && blob instanceof qq.BlobProxy) {\n\n                // Blob creation may take some time, so the caller may want to update the\n                // UI to indicate that an operation is in progress, even before the actual\n                // upload begins and an onUpload callback is invoked.\n                options.onUploadPrep(id);\n\n                log(\"Attempting to generate a blob on-demand for \" + id);\n                blob.create().then(function(generatedBlob) {\n                    log(\"Generated an on-demand blob for \" + id);\n\n                    // Update record associated with this file by providing the generated Blob\n                    handler.updateBlob(id, generatedBlob);\n\n                    // Propagate the size for this generated Blob\n                    options.setSize(id, generatedBlob.size);\n\n                    // Order handler to recalculate chunking possibility, if applicable\n                    handler.reevaluateChunking(id);\n\n                    upload.maybeSendDeferredFiles(id);\n                },\n\n                // Blob could not be generated.  Fail the upload & attempt to prevent retries.  Also bubble error message.\n                function(errorMessage) {\n                    var errorResponse = {};\n\n                    if (errorMessage) {\n                        errorResponse.error = errorMessage;\n                    }\n\n                    log(qq.format(\"Failed to generate blob for ID {}.  Error message: {}.\", id, errorMessage), \"error\");\n\n                    options.onComplete(id, options.getName(id), qq.extend(errorResponse, preventRetryResponse), null);\n                    upload.maybeSendDeferredFiles(id);\n                    connectionManager.free(id);\n                });\n            }\n            else {\n                return upload.maybeSendDeferredFiles(id);\n            }\n\n            return false;\n        },\n\n        // Upload any grouped blobs, in the proper order, that are ready to be uploaded\n        maybeSendDeferredFiles: function(id) {\n            var idsInGroup = options.getIdsInProxyGroup(id),\n                uploadedThisId = false;\n\n            if (idsInGroup && idsInGroup.length) {\n                log(\"Maybe ready to upload proxy group file \" + id);\n\n                qq.each(idsInGroup, function(idx, idInGroup) {\n                    if (upload.isDeferredEligibleForUpload(idInGroup) && !!handler.getFile(idInGroup)) {\n                        uploadedThisId = idInGroup === id;\n                        upload.now(idInGroup);\n                    }\n                    else if (upload.isDeferredEligibleForUpload(idInGroup)) {\n                        return false;\n                    }\n                });\n            }\n            else {\n                uploadedThisId = true;\n                upload.now(id);\n            }\n\n            return uploadedThisId;\n        },\n\n        maybeNewUuid: function(id, response) {\n            if (response.newUuid !== undefined) {\n                options.onUuidChanged(id, response.newUuid);\n            }\n        },\n\n        // The response coming from handler implementations may be in various formats.\n        // Instead of hoping a promise nested 5 levels deep will always return an object\n        // as its first param, let's just normalize the response here.\n        normalizeResponse: function(originalResponse, successful) {\n            var response = originalResponse;\n\n            // The passed \"response\" param may not be a response at all.\n            // It could be a string, detailing the error, for example.\n            if (!qq.isObject(originalResponse)) {\n                response = {};\n\n                if (qq.isString(originalResponse) && !successful) {\n                    response.error = originalResponse;\n                }\n            }\n\n            response.success = successful;\n\n            return response;\n        },\n\n        now: function(id) {\n            var name = options.getName(id);\n\n            if (!controller.isValid(id)) {\n                throw new qq.Error(id + \" is not a valid file ID to upload!\");\n            }\n\n            options.onUpload(id, name);\n\n            if (chunkingPossible && handler._shouldChunkThisFile(id)) {\n                chunked.sendNext(id);\n            }\n            else {\n                simple.send(id, name);\n            }\n        },\n\n        start: function(id) {\n            var blobToUpload = upload.getProxyOrBlob(id);\n\n            if (blobToUpload) {\n                return upload.maybeDefer(id, blobToUpload);\n            }\n            else {\n                upload.now(id);\n                return true;\n            }\n        }\n    };\n\n    qq.extend(this, {\n        /**\n         * Adds file or file input to the queue\n         **/\n        add: function(id, file) {\n            handler.add.apply(this, arguments);\n        },\n\n        /**\n         * Sends the file identified by id\n         */\n        upload: function(id) {\n            if (connectionManager.open(id)) {\n                return upload.start(id);\n            }\n            return false;\n        },\n\n        retry: function(id) {\n            // On retry, if concurrent chunking has been enabled, we may have aborted all other in-progress chunks\n            // for a file when encountering a failed chunk upload.  We then signaled the controller to ignore\n            // all failures associated with these aborts.  We are now retrying, so we don't want to ignore\n            // any more failures at this point.\n            if (concurrentChunkingPossible) {\n                handler._getFileState(id).temp.ignoreFailure = false;\n            }\n\n            // If we are attempting to retry a file that is already consuming a connection, this is likely an auto-retry.\n            // Just go ahead and ask the handler to upload again.\n            if (connectionManager.isUsingConnection(id)) {\n                return upload.start(id);\n            }\n\n            // If we are attempting to retry a file that is not currently consuming a connection,\n            // this is likely a manual retry attempt.  We will need to ensure a connection is available\n            // before the retry commences.\n            else {\n                return controller.upload(id);\n            }\n        },\n\n        /**\n         * Cancels file upload by id\n         */\n        cancel: function(id) {\n            var cancelRetVal = handler.cancel(id);\n\n            if (qq.isGenericPromise(cancelRetVal)) {\n                cancelRetVal.then(function() {\n                    upload.cancel(id);\n                });\n            }\n            else if (cancelRetVal !== false) {\n                upload.cancel(id);\n            }\n        },\n\n        /**\n         * Cancels all queued or in-progress uploads\n         */\n        cancelAll: function() {\n            var waitingOrConnected = connectionManager.getWaitingOrConnected(),\n                i;\n\n            // ensure files are cancelled in reverse order which they were added\n            // to avoid a flash of time where a queued file begins to upload before it is canceled\n            if (waitingOrConnected.length) {\n                for (i = waitingOrConnected.length - 1; i >= 0; i--) {\n                    controller.cancel(waitingOrConnected[i]);\n                }\n            }\n\n            connectionManager.reset();\n        },\n\n        // Returns a File, Blob, or the Blob/File for the reference/parent file if the targeted blob is a proxy.\n        // Undefined if no file record is available.\n        getFile: function(id) {\n            if (handler.getProxy && handler.getProxy(id)) {\n                return handler.getProxy(id).referenceBlob;\n            }\n\n            return handler.getFile && handler.getFile(id);\n        },\n\n        // Returns true if the Blob associated with the ID is related to a proxy s\n        isProxied: function(id) {\n            return !!(handler.getProxy && handler.getProxy(id));\n        },\n\n        getInput: function(id) {\n            if (handler.getInput) {\n                return handler.getInput(id);\n            }\n        },\n\n        reset: function() {\n            log(\"Resetting upload handler\");\n            controller.cancelAll();\n            connectionManager.reset();\n            handler.reset();\n        },\n\n        expunge: function(id) {\n            if (controller.isValid(id)) {\n                return handler.expunge(id);\n            }\n        },\n\n        /**\n         * Determine if the file exists.\n         */\n        isValid: function(id) {\n            return handler.isValid(id);\n        },\n\n        getResumableFilesData: function() {\n            if (handler.getResumableFilesData) {\n                return handler.getResumableFilesData();\n            }\n            return [];\n        },\n\n        /**\n         * This may or may not be implemented, depending on the handler.  For handlers where a third-party ID is\n         * available (such as the \"key\" for Amazon S3), this will return that value.  Otherwise, the return value\n         * will be undefined.\n         *\n         * @param id Internal file ID\n         * @returns {*} Some identifier used by a 3rd-party service involved in the upload process\n         */\n        getThirdPartyFileId: function(id) {\n            if (controller.isValid(id)) {\n                return handler.getThirdPartyFileId(id);\n            }\n        },\n\n        /**\n         * Attempts to pause the associated upload if the specific handler supports this and the file is \"valid\".\n         * @param id ID of the upload/file to pause\n         * @returns {boolean} true if the upload was paused\n         */\n        pause: function(id) {\n            if (controller.isResumable(id) && handler.pause && controller.isValid(id) && handler.pause(id)) {\n                connectionManager.free(id);\n                handler.moveInProgressToRemaining(id);\n                return true;\n            }\n            return false;\n        },\n\n        // True if the file is eligible for pause/resume.\n        isResumable: function(id) {\n            return !!handler.isResumable && handler.isResumable(id);\n        }\n    });\n\n    qq.extend(options, o);\n    log = options.log;\n    chunkingPossible = options.chunking.enabled && qq.supportedFeatures.chunking;\n    concurrentChunkingPossible = chunkingPossible && options.chunking.concurrent.enabled;\n\n    preventRetryResponse = (function() {\n        var response = {};\n\n        response[options.preventRetryParam] = true;\n\n        return response;\n    }());\n\n    upload.initHandler();\n};\n","/*globals qq */\n/*jshint -W117 */\nqq.WindowReceiveMessage = function(o) {\n    \"use strict\";\n\n    var options = {\n            log: function(message, level) {}\n        },\n        callbackWrapperDetachers = {};\n\n    qq.extend(options, o);\n\n    qq.extend(this, {\n        receiveMessage: function(id, callback) {\n            var onMessageCallbackWrapper = function(event) {\n                    callback(event.data);\n                };\n\n            if (window.postMessage) {\n                callbackWrapperDetachers[id] = qq(window).attach(\"message\", onMessageCallbackWrapper);\n            }\n            else {\n                log(\"iframe message passing not supported in this browser!\", \"error\");\n            }\n        },\n\n        stopReceivingMessages: function(id) {\n            if (window.postMessage) {\n                var detacher = callbackWrapperDetachers[id];\n                if (detacher) {\n                    detacher();\n                }\n            }\n        }\n    });\n};\n","/* globals qq */\n/**\n * Common APIs exposed to creators of upload via form/iframe handlers.  This is reused and possibly overridden\n * in some cases by specific form upload handlers.\n *\n * @constructor\n */\nqq.FormUploadHandler = function(spec) {\n    \"use strict\";\n\n    var options = spec.options,\n        handler = this,\n        proxy = spec.proxy,\n        formHandlerInstanceId = qq.getUniqueId(),\n        onloadCallbacks = {},\n        detachLoadEvents = {},\n        postMessageCallbackTimers = {},\n        isCors = options.isCors,\n        inputName = options.inputName,\n        getUuid = proxy.getUuid,\n        log = proxy.log,\n        corsMessageReceiver = new qq.WindowReceiveMessage({log: log});\n\n    /**\n     * Remove any trace of the file from the handler.\n     *\n     * @param id ID of the associated file\n     */\n    function expungeFile(id) {\n        delete detachLoadEvents[id];\n\n        // If we are dealing with CORS, we might still be waiting for a response from a loaded iframe.\n        // In that case, terminate the timer waiting for a message from the loaded iframe\n        // and stop listening for any more messages coming from this iframe.\n        if (isCors) {\n            clearTimeout(postMessageCallbackTimers[id]);\n            delete postMessageCallbackTimers[id];\n            corsMessageReceiver.stopReceivingMessages(id);\n        }\n\n        var iframe = document.getElementById(handler._getIframeName(id));\n        if (iframe) {\n            // To cancel request set src to something else.  We use src=\"javascript:false;\"\n            // because it doesn't trigger ie6 prompt on https\n            /* jshint scripturl:true */\n            iframe.setAttribute(\"src\", \"javascript:false;\");\n\n            qq(iframe).remove();\n        }\n    }\n\n    /**\n     * @param iframeName `document`-unique Name of the associated iframe\n     * @returns {*} ID of the associated file\n     */\n    function getFileIdForIframeName(iframeName) {\n        return iframeName.split(\"_\")[0];\n    }\n\n    /**\n     * Generates an iframe to be used as a target for upload-related form submits.  This also adds the iframe\n     * to the current `document`.  Note that the iframe is hidden from view.\n     *\n     * @param name Name of the iframe.\n     * @returns {HTMLIFrameElement} The created iframe\n     */\n    function initIframeForUpload(name) {\n        var iframe = qq.toElement(\"<iframe src='javascript:false;' name='\" + name + \"' />\");\n\n        iframe.setAttribute(\"id\", name);\n\n        iframe.style.display = \"none\";\n        document.body.appendChild(iframe);\n\n        return iframe;\n    }\n\n    /**\n     * If we are in CORS mode, we must listen for messages (containing the server response) from the associated\n     * iframe, since we cannot directly parse the content of the iframe due to cross-origin restrictions.\n     *\n     * @param iframe Listen for messages on this iframe.\n     * @param callback Invoke this callback with the message from the iframe.\n     */\n    function registerPostMessageCallback(iframe, callback) {\n        var iframeName = iframe.id,\n            fileId = getFileIdForIframeName(iframeName),\n            uuid = getUuid(fileId);\n\n        onloadCallbacks[uuid] = callback;\n\n        // When the iframe has loaded (after the server responds to an upload request)\n        // declare the attempt a failure if we don't receive a valid message shortly after the response comes in.\n        detachLoadEvents[fileId] = qq(iframe).attach(\"load\", function() {\n            if (handler.getInput(fileId)) {\n                log(\"Received iframe load event for CORS upload request (iframe name \" + iframeName + \")\");\n\n                postMessageCallbackTimers[iframeName] = setTimeout(function() {\n                    var errorMessage = \"No valid message received from loaded iframe for iframe name \" + iframeName;\n                    log(errorMessage, \"error\");\n                    callback({\n                        error: errorMessage\n                    });\n                }, 1000);\n            }\n        });\n\n        // Listen for messages coming from this iframe.  When a message has been received, cancel the timer\n        // that declares the upload a failure if a message is not received within a reasonable amount of time.\n        corsMessageReceiver.receiveMessage(iframeName, function(message) {\n            log(\"Received the following window message: '\" + message + \"'\");\n            var fileId = getFileIdForIframeName(iframeName),\n                response = handler._parseJsonResponse(message),\n                uuid = response.uuid,\n                onloadCallback;\n\n            if (uuid && onloadCallbacks[uuid]) {\n                log(\"Handling response for iframe name \" + iframeName);\n                clearTimeout(postMessageCallbackTimers[iframeName]);\n                delete postMessageCallbackTimers[iframeName];\n\n                handler._detachLoadEvent(iframeName);\n\n                onloadCallback = onloadCallbacks[uuid];\n\n                delete onloadCallbacks[uuid];\n                corsMessageReceiver.stopReceivingMessages(iframeName);\n                onloadCallback(response);\n            }\n            else if (!uuid) {\n                log(\"'\" + message + \"' does not contain a UUID - ignoring.\");\n            }\n        });\n    }\n\n    qq.extend(this, new qq.UploadHandler(spec));\n\n    qq.override(this, function(super_) {\n        return {\n            /**\n             * Adds File or Blob to the queue\n             **/\n            add: function(id, fileInput) {\n                super_.add(id, {input: fileInput});\n\n                fileInput.setAttribute(\"name\", inputName);\n\n                // remove file input from DOM\n                if (fileInput.parentNode) {\n                    qq(fileInput).remove();\n                }\n            },\n\n            expunge: function(id) {\n                expungeFile(id);\n                super_.expunge(id);\n            },\n\n            isValid: function(id) {\n                return super_.isValid(id) &&\n                    handler._getFileState(id).input !== undefined;\n            }\n        };\n    });\n\n    qq.extend(this, {\n        getInput: function(id) {\n            return handler._getFileState(id).input;\n        },\n\n        /**\n         * This function either delegates to a more specific message handler if CORS is involved,\n         * or simply registers a callback when the iframe has been loaded that invokes the passed callback\n         * after determining if the content of the iframe is accessible.\n         *\n         * @param iframe Associated iframe\n         * @param callback Callback to invoke after we have determined if the iframe content is accessible.\n         */\n        _attachLoadEvent: function(iframe, callback) {\n            /*jslint eqeq: true*/\n            var responseDescriptor;\n\n            if (isCors) {\n                registerPostMessageCallback(iframe, callback);\n            }\n            else {\n                detachLoadEvents[iframe.id] = qq(iframe).attach(\"load\", function() {\n                    log(\"Received response for \" + iframe.id);\n\n                    // when we remove iframe from dom\n                    // the request stops, but in IE load\n                    // event fires\n                    if (!iframe.parentNode) {\n                        return;\n                    }\n\n                    try {\n                        // fixing Opera 10.53\n                        if (iframe.contentDocument &&\n                            iframe.contentDocument.body &&\n                            iframe.contentDocument.body.innerHTML == \"false\") {\n                            // In Opera event is fired second time\n                            // when body.innerHTML changed from false\n                            // to server response approx. after 1 sec\n                            // when we upload file with iframe\n                            return;\n                        }\n                    }\n                    catch (error) {\n                        //IE may throw an \"access is denied\" error when attempting to access contentDocument on the iframe in some cases\n                        log(\"Error when attempting to access iframe during handling of upload response (\" + error.message + \")\", \"error\");\n                        responseDescriptor = {success: false};\n                    }\n\n                    callback(responseDescriptor);\n                });\n            }\n        },\n\n        /**\n         * Creates an iframe with a specific document-unique name.\n         *\n         * @param id ID of the associated file\n         * @returns {HTMLIFrameElement}\n         */\n        _createIframe: function(id) {\n            var iframeName = handler._getIframeName(id);\n\n            return initIframeForUpload(iframeName);\n        },\n\n        /**\n         * Called when we are no longer interested in being notified when an iframe has loaded.\n         *\n         * @param id Associated file ID\n         */\n        _detachLoadEvent: function(id) {\n            if (detachLoadEvents[id] !== undefined) {\n                detachLoadEvents[id]();\n                delete detachLoadEvents[id];\n            }\n        },\n\n        /**\n         * @param fileId ID of the associated file\n         * @returns {string} The `document`-unique name of the iframe\n         */\n        _getIframeName: function(fileId) {\n            return fileId + \"_\" + formHandlerInstanceId;\n        },\n\n        /**\n         * Generates a form element and appends it to the `document`.  When the form is submitted, a specific iframe is targeted.\n         * The name of the iframe is passed in as a property of the spec parameter, and must be unique in the `document`.  Note\n         * that the form is hidden from view.\n         *\n         * @param spec An object containing various properties to be used when constructing the form.  Required properties are\n         * currently: `method`, `endpoint`, `params`, `paramsInBody`, and `targetName`.\n         * @returns {HTMLFormElement} The created form\n         */\n        _initFormForUpload: function(spec) {\n            var method = spec.method,\n                endpoint = spec.endpoint,\n                params = spec.params,\n                paramsInBody = spec.paramsInBody,\n                targetName = spec.targetName,\n                form = qq.toElement(\"<form method='\" + method + \"' enctype='multipart/form-data'></form>\"),\n                url = endpoint;\n\n            if (paramsInBody) {\n                qq.obj2Inputs(params, form);\n            }\n            else {\n                url = qq.obj2url(params, endpoint);\n            }\n\n            form.setAttribute(\"action\", url);\n            form.setAttribute(\"target\", targetName);\n            form.style.display = \"none\";\n            document.body.appendChild(form);\n\n            return form;\n        },\n\n        /**\n         * @param innerHtmlOrMessage JSON message\n         * @returns {*} The parsed response, or an empty object if the response could not be parsed\n         */\n        _parseJsonResponse: function(innerHtmlOrMessage) {\n            var response = {};\n\n            try {\n                response = qq.parseJson(innerHtmlOrMessage);\n            }\n            catch (error) {\n                log(\"Error when attempting to parse iframe upload response (\" + error.message + \")\", \"error\");\n            }\n\n            return response;\n        }\n    });\n};\n","/* globals qq */\n/**\n * Common API exposed to creators of XHR handlers.  This is reused and possibly overriding in some cases by specific\n * XHR upload handlers.\n *\n * @constructor\n */\nqq.XhrUploadHandler = function(spec) {\n    \"use strict\";\n\n    var handler = this,\n        namespace = spec.options.namespace,\n        proxy = spec.proxy,\n        chunking = spec.options.chunking,\n        resume = spec.options.resume,\n        chunkFiles = chunking && spec.options.chunking.enabled && qq.supportedFeatures.chunking,\n        resumeEnabled = resume && spec.options.resume.enabled && chunkFiles && qq.supportedFeatures.resume,\n        getName = proxy.getName,\n        getSize = proxy.getSize,\n        getUuid = proxy.getUuid,\n        getEndpoint = proxy.getEndpoint,\n        getDataByUuid = proxy.getDataByUuid,\n        onUuidChanged = proxy.onUuidChanged,\n        onProgress = proxy.onProgress,\n        log = proxy.log;\n\n    function abort(id) {\n        qq.each(handler._getXhrs(id), function(xhrId, xhr) {\n            var ajaxRequester = handler._getAjaxRequester(id, xhrId);\n\n            xhr.onreadystatechange = null;\n            xhr.upload.onprogress = null;\n            xhr.abort();\n            ajaxRequester && ajaxRequester.canceled && ajaxRequester.canceled(id);\n        });\n    }\n\n    qq.extend(this, new qq.UploadHandler(spec));\n\n    qq.override(this, function(super_) {\n        return {\n            /**\n             * Adds File or Blob to the queue\n             **/\n            add: function(id, blobOrProxy) {\n                if (qq.isFile(blobOrProxy) || qq.isBlob(blobOrProxy)) {\n                    super_.add(id, {file: blobOrProxy});\n                }\n                else if (blobOrProxy instanceof qq.BlobProxy) {\n                    super_.add(id, {proxy: blobOrProxy});\n                }\n                else {\n                    throw new Error(\"Passed obj is not a File, Blob, or proxy\");\n                }\n\n                handler._initTempState(id);\n                resumeEnabled && handler._maybePrepareForResume(id);\n            },\n\n            expunge: function(id) {\n                abort(id);\n                handler._maybeDeletePersistedChunkData(id);\n                handler._clearXhrs(id);\n                super_.expunge(id);\n            }\n        };\n    });\n\n    qq.extend(this, {\n        // Clear the cached chunk `Blob` after we are done with it, just in case the `Blob` bytes are stored in memory.\n        clearCachedChunk: function(id, chunkIdx) {\n            delete handler._getFileState(id).temp.cachedChunks[chunkIdx];\n        },\n\n        clearXhr: function(id, chunkIdx) {\n            var tempState = handler._getFileState(id).temp;\n\n            if (tempState.xhrs) {\n                delete tempState.xhrs[chunkIdx];\n            }\n            if (tempState.ajaxRequesters) {\n                delete tempState.ajaxRequesters[chunkIdx];\n            }\n        },\n\n        // Called when all chunks have been successfully uploaded.  Expected promissory return type.\n        // This defines the default behavior if nothing further is required when all chunks have been uploaded.\n        finalizeChunks: function(id, responseParser) {\n            var lastChunkIdx = handler._getTotalChunks(id) - 1,\n                xhr = handler._getXhr(id, lastChunkIdx);\n\n            if (responseParser) {\n                return new qq.Promise().success(responseParser(xhr), xhr);\n            }\n\n            return new qq.Promise().success({}, xhr);\n        },\n\n        getFile: function(id) {\n            return handler.isValid(id) && handler._getFileState(id).file;\n        },\n\n        getProxy: function(id) {\n            return handler.isValid(id) && handler._getFileState(id).proxy;\n        },\n\n        /**\n         * @returns {Array} Array of objects containing properties useful to integrators\n         * when it is important to determine which files are potentially resumable.\n         */\n        getResumableFilesData: function() {\n            var resumableFilesData = [];\n\n            handler._iterateResumeRecords(function(key, uploadData) {\n                handler.moveInProgressToRemaining(null, uploadData.chunking.inProgress,  uploadData.chunking.remaining);\n\n                var data = {\n                    name: uploadData.name,\n                    remaining: uploadData.chunking.remaining,\n                    size: uploadData.size,\n                    uuid: uploadData.uuid\n                };\n\n                if (uploadData.key) {\n                    data.key = uploadData.key;\n                }\n\n                resumableFilesData.push(data);\n            });\n\n            return resumableFilesData;\n        },\n\n        isResumable: function(id) {\n            return !!chunking && handler.isValid(id) && !handler._getFileState(id).notResumable;\n        },\n\n        moveInProgressToRemaining: function(id, optInProgress, optRemaining) {\n            var inProgress = optInProgress || handler._getFileState(id).chunking.inProgress,\n                remaining = optRemaining || handler._getFileState(id).chunking.remaining;\n\n            if (inProgress) {\n                log(qq.format(\"Moving these chunks from in-progress {}, to remaining.\", JSON.stringify(inProgress)));\n                inProgress.reverse();\n                qq.each(inProgress, function(idx, chunkIdx) {\n                    remaining.unshift(chunkIdx);\n                });\n                inProgress.length = 0;\n            }\n        },\n\n        pause: function(id) {\n            if (handler.isValid(id)) {\n                log(qq.format(\"Aborting XHR upload for {} '{}' due to pause instruction.\", id, getName(id)));\n                handler._getFileState(id).paused = true;\n                abort(id);\n                return true;\n            }\n        },\n\n        reevaluateChunking: function(id) {\n            if (chunking && handler.isValid(id)) {\n                var state = handler._getFileState(id),\n                    totalChunks,\n                    i;\n\n                delete state.chunking;\n\n                state.chunking = {};\n                totalChunks = handler._getTotalChunks(id);\n                if (totalChunks > 1 || chunking.mandatory) {\n                    state.chunking.enabled = true;\n                    state.chunking.parts = totalChunks;\n                    state.chunking.remaining = [];\n\n                    for (i = 0; i < totalChunks; i++) {\n                        state.chunking.remaining.push(i);\n                    }\n\n                    handler._initTempState(id);\n                }\n                else {\n                    state.chunking.enabled = false;\n                }\n            }\n        },\n\n        updateBlob: function(id, newBlob) {\n            if (handler.isValid(id)) {\n                handler._getFileState(id).file = newBlob;\n            }\n        },\n\n        _clearXhrs: function(id) {\n            var tempState = handler._getFileState(id).temp;\n\n            qq.each(tempState.ajaxRequesters, function(chunkId) {\n                delete tempState.ajaxRequesters[chunkId];\n            });\n\n            qq.each(tempState.xhrs, function(chunkId) {\n                delete tempState.xhrs[chunkId];\n            });\n        },\n\n        /**\n         * Creates an XHR instance for this file and stores it in the fileState.\n         *\n         * @param id File ID\n         * @param optChunkIdx The chunk index associated with this XHR, if applicable\n         * @returns {XMLHttpRequest}\n         */\n        _createXhr: function(id, optChunkIdx) {\n            return handler._registerXhr(id, optChunkIdx, qq.createXhrInstance());\n        },\n\n        _getAjaxRequester: function(id, optChunkIdx) {\n            var chunkIdx = optChunkIdx == null ? -1 : optChunkIdx;\n            return handler._getFileState(id).temp.ajaxRequesters[chunkIdx];\n        },\n\n        _getChunkData: function(id, chunkIndex) {\n            var chunkSize = chunking.partSize,\n                fileSize = getSize(id),\n                fileOrBlob = handler.getFile(id),\n                startBytes = chunkSize * chunkIndex,\n                endBytes = startBytes + chunkSize >= fileSize ? fileSize : startBytes + chunkSize,\n                totalChunks = handler._getTotalChunks(id),\n                cachedChunks = this._getFileState(id).temp.cachedChunks,\n\n            // To work around a Webkit GC bug, we must keep each chunk `Blob` in scope until we are done with it.\n            // See https://github.com/Widen/fine-uploader/issues/937#issuecomment-41418760\n                blob = cachedChunks[chunkIndex] || qq.sliceBlob(fileOrBlob, startBytes, endBytes);\n\n            cachedChunks[chunkIndex] = blob;\n\n            return {\n                part: chunkIndex,\n                start: startBytes,\n                end: endBytes,\n                count: totalChunks,\n                blob: blob,\n                size: endBytes - startBytes\n            };\n        },\n\n        _getChunkDataForCallback: function(chunkData) {\n            return {\n                partIndex: chunkData.part,\n                startByte: chunkData.start + 1,\n                endByte: chunkData.end,\n                totalParts: chunkData.count\n            };\n        },\n\n        /**\n         * @param id File ID\n         * @returns {string} Identifier for this item that may appear in the browser's local storage\n         */\n        _getLocalStorageId: function(id) {\n            var formatVersion = \"5.0\",\n                name = getName(id),\n                size = getSize(id),\n                chunkSize = chunking.partSize,\n                endpoint = getEndpoint(id);\n\n            return qq.format(\"qq{}resume{}-{}-{}-{}-{}\", namespace, formatVersion, name, size, chunkSize, endpoint);\n        },\n\n        _getMimeType: function(id) {\n            return handler.getFile(id).type;\n        },\n\n        _getPersistableData: function(id) {\n            return handler._getFileState(id).chunking;\n        },\n\n        /**\n         * @param id ID of the associated file\n         * @returns {number} Number of parts this file can be divided into, or undefined if chunking is not supported in this UA\n         */\n        _getTotalChunks: function(id) {\n            if (chunking) {\n                var fileSize = getSize(id),\n                    chunkSize = chunking.partSize;\n\n                return Math.ceil(fileSize / chunkSize);\n            }\n        },\n\n        _getXhr: function(id, optChunkIdx) {\n            var chunkIdx = optChunkIdx == null ? -1 : optChunkIdx;\n            return handler._getFileState(id).temp.xhrs[chunkIdx];\n        },\n\n        _getXhrs: function(id) {\n            return handler._getFileState(id).temp.xhrs;\n        },\n\n        // Iterates through all XHR handler-created resume records (in local storage),\n        // invoking the passed callback and passing in the key and value of each local storage record.\n        _iterateResumeRecords: function(callback) {\n            if (resumeEnabled) {\n                qq.each(localStorage, function(key, item) {\n                    if (key.indexOf(qq.format(\"qq{}resume\", namespace)) === 0) {\n                        var uploadData = JSON.parse(item);\n                        callback(key, uploadData);\n                    }\n                });\n            }\n        },\n\n        _initTempState: function(id) {\n            handler._getFileState(id).temp = {\n                ajaxRequesters: {},\n                chunkProgress: {},\n                xhrs: {},\n                cachedChunks: {}\n            };\n        },\n\n        _markNotResumable: function(id) {\n            handler._getFileState(id).notResumable = true;\n        },\n\n        // Removes a chunked upload record from local storage, if possible.\n        // Returns true if the item was removed, false otherwise.\n        _maybeDeletePersistedChunkData: function(id) {\n            var localStorageId;\n\n            if (resumeEnabled && handler.isResumable(id)) {\n                localStorageId = handler._getLocalStorageId(id);\n\n                if (localStorageId && localStorage.getItem(localStorageId)) {\n                    localStorage.removeItem(localStorageId);\n                    return true;\n                }\n            }\n\n            return false;\n        },\n\n        // If this is a resumable upload, grab the relevant data from storage and items in memory that track this upload\n        // so we can pick up from where we left off.\n        _maybePrepareForResume: function(id) {\n            var state = handler._getFileState(id),\n                localStorageId, persistedData;\n\n            // Resume is enabled and possible and this is the first time we've tried to upload this file in this session,\n            // so prepare for a resume attempt.\n            if (resumeEnabled && state.key === undefined) {\n                localStorageId = handler._getLocalStorageId(id);\n                persistedData = localStorage.getItem(localStorageId);\n\n                // If we found this item in local storage, maybe we should resume it.\n                if (persistedData) {\n                    persistedData = JSON.parse(persistedData);\n\n                    // If we found a resume record but we have already handled this file in this session,\n                    // don't try to resume it & ensure we don't persist future check data\n                    if (getDataByUuid(persistedData.uuid)) {\n                        handler._markNotResumable(id);\n                    }\n                    else {\n                        log(qq.format(\"Identified file with ID {} and name of {} as resumable.\", id, getName(id)));\n\n                        onUuidChanged(id, persistedData.uuid);\n\n                        state.key = persistedData.key;\n                        state.chunking = persistedData.chunking;\n                        state.loaded = persistedData.loaded;\n                        state.attemptingResume = true;\n\n                        handler.moveInProgressToRemaining(id);\n                    }\n                }\n            }\n        },\n\n        // Persist any data needed to resume this upload in a new session.\n        _maybePersistChunkedState: function(id) {\n            var state = handler._getFileState(id),\n                localStorageId, persistedData;\n\n            // If local storage isn't supported by the browser, or if resume isn't enabled or possible, give up\n            if (resumeEnabled && handler.isResumable(id)) {\n                localStorageId = handler._getLocalStorageId(id);\n\n                persistedData = {\n                    name: getName(id),\n                    size: getSize(id),\n                    uuid: getUuid(id),\n                    key: state.key,\n                    chunking: state.chunking,\n                    loaded: state.loaded,\n                    lastUpdated: Date.now()\n                };\n\n                try {\n                    localStorage.setItem(localStorageId, JSON.stringify(persistedData));\n                }\n                catch (error) {\n                    log(qq.format(\"Unable to save resume data for '{}' due to error: '{}'.\", id, error.toString()), \"warn\");\n                }\n            }\n        },\n\n        _registerProgressHandler: function(id, chunkIdx, chunkSize) {\n            var xhr = handler._getXhr(id, chunkIdx),\n                name = getName(id),\n                progressCalculator = {\n                    simple: function(loaded, total) {\n                        var fileSize = getSize(id);\n\n                        if (loaded === total) {\n                            onProgress(id, name, fileSize, fileSize);\n                        }\n                        else {\n                            onProgress(id, name, (loaded >= fileSize ? fileSize - 1 : loaded), fileSize);\n                        }\n                    },\n\n                    chunked: function(loaded, total) {\n                        var chunkProgress = handler._getFileState(id).temp.chunkProgress,\n                            totalSuccessfullyLoadedForFile = handler._getFileState(id).loaded,\n                            loadedForRequest = loaded,\n                            totalForRequest = total,\n                            totalFileSize = getSize(id),\n                            estActualChunkLoaded = loadedForRequest - (totalForRequest - chunkSize),\n                            totalLoadedForFile = totalSuccessfullyLoadedForFile;\n\n                        chunkProgress[chunkIdx] = estActualChunkLoaded;\n\n                        qq.each(chunkProgress, function(chunkIdx, chunkLoaded) {\n                            totalLoadedForFile += chunkLoaded;\n                        });\n\n                        onProgress(id, name, totalLoadedForFile, totalFileSize);\n                    }\n                };\n\n            xhr.upload.onprogress = function(e) {\n                if (e.lengthComputable) {\n                    /* jshint eqnull: true */\n                    var type = chunkSize == null ? \"simple\" : \"chunked\";\n                    progressCalculator[type](e.loaded, e.total);\n                }\n            };\n        },\n\n        /**\n         * Registers an XHR transport instance created elsewhere.\n         *\n         * @param id ID of the associated file\n         * @param optChunkIdx The chunk index associated with this XHR, if applicable\n         * @param xhr XMLHttpRequest object instance\n         * @param optAjaxRequester `qq.AjaxRequester` associated with this request, if applicable.\n         * @returns {XMLHttpRequest}\n         */\n        _registerXhr: function(id, optChunkIdx, xhr, optAjaxRequester) {\n            var xhrsId = optChunkIdx == null ? -1 : optChunkIdx,\n                tempState = handler._getFileState(id).temp;\n\n            tempState.xhrs = tempState.xhrs || {};\n            tempState.ajaxRequesters = tempState.ajaxRequesters || {};\n\n            tempState.xhrs[xhrsId] = xhr;\n\n            if (optAjaxRequester) {\n                tempState.ajaxRequesters[xhrsId] = optAjaxRequester;\n            }\n\n            return xhr;\n        },\n\n        // Deletes any local storage records that are \"expired\".\n        _removeExpiredChunkingRecords: function() {\n            var expirationDays = resume.recordsExpireIn;\n\n            handler._iterateResumeRecords(function(key, uploadData) {\n                var expirationDate = new Date(uploadData.lastUpdated);\n\n                // transform updated date into expiration date\n                expirationDate.setDate(expirationDate.getDate() + expirationDays);\n\n                if (expirationDate.getTime() <= Date.now()) {\n                    log(\"Removing expired resume record with key \" + key);\n                    localStorage.removeItem(key);\n                }\n            });\n        },\n\n        /**\n         * Determine if the associated file should be chunked.\n         *\n         * @param id ID of the associated file\n         * @returns {*} true if chunking is enabled, possible, and the file can be split into more than 1 part\n         */\n        _shouldChunkThisFile: function(id) {\n            var state = handler._getFileState(id);\n\n            if (!state.chunking) {\n                handler.reevaluateChunking(id);\n            }\n\n            return state.chunking.enabled;\n        }\n    });\n};\n","/*globals qq, XMLHttpRequest*/\nqq.DeleteFileAjaxRequester = function(o) {\n    \"use strict\";\n\n    var requester,\n        options = {\n            method: \"DELETE\",\n            uuidParamName: \"qquuid\",\n            endpointStore: {},\n            maxConnections: 3,\n            customHeaders: function(id) {return {};},\n            paramsStore: {},\n            cors: {\n                expected: false,\n                sendCredentials: false\n            },\n            log: function(str, level) {},\n            onDelete: function(id) {},\n            onDeleteComplete: function(id, xhrOrXdr, isError) {}\n        };\n\n    qq.extend(options, o);\n\n    function getMandatedParams() {\n        if (options.method.toUpperCase() === \"POST\") {\n            return {\n                _method: \"DELETE\"\n            };\n        }\n\n        return {};\n    }\n\n    requester = qq.extend(this, new qq.AjaxRequester({\n        acceptHeader: \"application/json\",\n        validMethods: [\"POST\", \"DELETE\"],\n        method: options.method,\n        endpointStore: options.endpointStore,\n        paramsStore: options.paramsStore,\n        mandatedParams: getMandatedParams(),\n        maxConnections: options.maxConnections,\n        customHeaders: function(id) {\n            return options.customHeaders.get(id);\n        },\n        log: options.log,\n        onSend: options.onDelete,\n        onComplete: options.onDeleteComplete,\n        cors: options.cors\n    }));\n\n    qq.extend(this, {\n        sendDelete: function(id, uuid, additionalMandatedParams) {\n            var additionalOptions = additionalMandatedParams || {};\n\n            options.log(\"Submitting delete file request for \" + id);\n\n            if (options.method === \"DELETE\") {\n                requester.initTransport(id)\n                    .withPath(uuid)\n                    .withParams(additionalOptions)\n                    .send();\n            }\n            else {\n                additionalOptions[options.uuidParamName] = uuid;\n                requester.initTransport(id)\n                    .withParams(additionalOptions)\n                    .send();\n            }\n        }\n    });\n};\n","/*global qq, define */\n/*jshint strict:false,bitwise:false,nonew:false,asi:true,-W064,-W116,-W089 */\n/**\n * Mega pixel image rendering library for iOS6+\n *\n * Fixes iOS6+'s image file rendering issue for large size image (over mega-pixel),\n * which causes unexpected subsampling when drawing it in canvas.\n * By using this library, you can safely render the image with proper stretching.\n *\n * Copyright (c) 2012 Shinichi Tomita <shinichi.tomita@gmail.com>\n * Released under the MIT license\n *\n * Heavily modified by Widen for Fine Uploader\n */\n(function() {\n\n    /**\n     * Detect subsampling in loaded image.\n     * In iOS, larger images than 2M pixels may be subsampled in rendering.\n     */\n    function detectSubsampling(img) {\n        var iw = img.naturalWidth,\n            ih = img.naturalHeight,\n            canvas = document.createElement(\"canvas\"),\n            ctx;\n\n        if (iw * ih > 1024 * 1024) { // subsampling may happen over megapixel image\n            canvas.width = canvas.height = 1;\n            ctx = canvas.getContext(\"2d\");\n            ctx.drawImage(img, -iw + 1, 0);\n            // subsampled image becomes half smaller in rendering size.\n            // check alpha channel value to confirm image is covering edge pixel or not.\n            // if alpha value is 0 image is not covering, hence subsampled.\n            return ctx.getImageData(0, 0, 1, 1).data[3] === 0;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * Detecting vertical squash in loaded image.\n     * Fixes a bug which squash image vertically while drawing into canvas for some images.\n     */\n    function detectVerticalSquash(img, iw, ih) {\n        var canvas = document.createElement(\"canvas\"),\n            sy = 0,\n            ey = ih,\n            py = ih,\n            ctx, data, alpha, ratio;\n\n        canvas.width = 1;\n        canvas.height = ih;\n        ctx = canvas.getContext(\"2d\");\n        ctx.drawImage(img, 0, 0);\n        data = ctx.getImageData(0, 0, 1, ih).data;\n\n        // search image edge pixel position in case it is squashed vertically.\n        while (py > sy) {\n            alpha = data[(py - 1) * 4 + 3];\n            if (alpha === 0) {\n                ey = py;\n            } else {\n                sy = py;\n            }\n            py = (ey + sy) >> 1;\n        }\n\n        ratio = (py / ih);\n        return (ratio === 0) ? 1 : ratio;\n    }\n\n    /**\n     * Rendering image element (with resizing) and get its data URL\n     */\n    function renderImageToDataURL(img, blob, options, doSquash) {\n        var canvas = document.createElement(\"canvas\"),\n            mime = options.mime || \"image/jpeg\",\n            promise = new qq.Promise();\n\n        renderImageToCanvas(img, blob, canvas, options, doSquash)\n            .then(function() {\n                promise.success(\n                    canvas.toDataURL(mime, options.quality || 0.8)\n                );\n            });\n\n        return promise;\n    }\n\n    function maybeCalculateDownsampledDimensions(spec) {\n        var maxPixels = 5241000; //iOS specific value\n\n        if (!qq.ios()) {\n            throw new qq.Error(\"Downsampled dimensions can only be reliably calculated for iOS!\");\n        }\n\n        if (spec.origHeight * spec.origWidth > maxPixels) {\n            return {\n                newHeight: Math.round(Math.sqrt(maxPixels * (spec.origHeight / spec.origWidth))),\n                newWidth: Math.round(Math.sqrt(maxPixels * (spec.origWidth / spec.origHeight)))\n            };\n        }\n    }\n\n    /**\n     * Rendering image element (with resizing) into the canvas element\n     */\n    function renderImageToCanvas(img, blob, canvas, options, doSquash) {\n        var iw = img.naturalWidth,\n            ih = img.naturalHeight,\n            width = options.width,\n            height = options.height,\n            ctx = canvas.getContext(\"2d\"),\n            promise = new qq.Promise(),\n            modifiedDimensions;\n\n        ctx.save();\n\n        if (options.resize) {\n            return renderImageToCanvasWithCustomResizer({\n                blob: blob,\n                canvas: canvas,\n                image: img,\n                imageHeight: ih,\n                imageWidth: iw,\n                orientation: options.orientation,\n                resize: options.resize,\n                targetHeight: height,\n                targetWidth: width\n            });\n        }\n\n        if (!qq.supportedFeatures.unlimitedScaledImageSize) {\n            modifiedDimensions = maybeCalculateDownsampledDimensions({\n                origWidth: width,\n                origHeight: height\n            });\n\n            if (modifiedDimensions) {\n                qq.log(qq.format(\"Had to reduce dimensions due to device limitations from {}w / {}h to {}w / {}h\",\n                    width, height, modifiedDimensions.newWidth, modifiedDimensions.newHeight),\n                    \"warn\");\n\n                width = modifiedDimensions.newWidth;\n                height = modifiedDimensions.newHeight;\n            }\n        }\n\n        transformCoordinate(canvas, width, height, options.orientation);\n\n        // Fine Uploader specific: Save some CPU cycles if not using iOS\n        // Assumption: This logic is only needed to overcome iOS image sampling issues\n        if (qq.ios()) {\n            (function() {\n                if (detectSubsampling(img)) {\n                    iw /= 2;\n                    ih /= 2;\n                }\n\n                var d = 1024, // size of tiling canvas\n                    tmpCanvas = document.createElement(\"canvas\"),\n                    vertSquashRatio = doSquash ? detectVerticalSquash(img, iw, ih) : 1,\n                    dw = Math.ceil(d * width / iw),\n                    dh = Math.ceil(d * height / ih / vertSquashRatio),\n                    sy = 0,\n                    dy = 0,\n                    tmpCtx, sx, dx;\n\n                tmpCanvas.width = tmpCanvas.height = d;\n                tmpCtx = tmpCanvas.getContext(\"2d\");\n\n                while (sy < ih) {\n                    sx = 0;\n                    dx = 0;\n                    while (sx < iw) {\n                        tmpCtx.clearRect(0, 0, d, d);\n                        tmpCtx.drawImage(img, -sx, -sy);\n                        ctx.drawImage(tmpCanvas, 0, 0, d, d, dx, dy, dw, dh);\n                        sx += d;\n                        dx += dw;\n                    }\n                    sy += d;\n                    dy += dh;\n                }\n                ctx.restore();\n                tmpCanvas = tmpCtx = null;\n            }());\n        }\n        else {\n            ctx.drawImage(img, 0, 0, width, height);\n        }\n\n        canvas.qqImageRendered && canvas.qqImageRendered();\n        promise.success();\n\n        return promise;\n    }\n\n    function renderImageToCanvasWithCustomResizer(resizeInfo) {\n        var blob = resizeInfo.blob,\n            image = resizeInfo.image,\n            imageHeight = resizeInfo.imageHeight,\n            imageWidth = resizeInfo.imageWidth,\n            orientation = resizeInfo.orientation,\n            promise = new qq.Promise(),\n            resize = resizeInfo.resize,\n            sourceCanvas = document.createElement(\"canvas\"),\n            sourceCanvasContext = sourceCanvas.getContext(\"2d\"),\n            targetCanvas = resizeInfo.canvas,\n            targetHeight = resizeInfo.targetHeight,\n            targetWidth = resizeInfo.targetWidth;\n\n        transformCoordinate(sourceCanvas, imageWidth, imageHeight, orientation);\n\n        targetCanvas.height = targetHeight;\n        targetCanvas.width = targetWidth;\n\n        sourceCanvasContext.drawImage(image, 0, 0);\n\n        resize({\n            blob: blob,\n            height: targetHeight,\n            image: image,\n            sourceCanvas: sourceCanvas,\n            targetCanvas: targetCanvas,\n            width: targetWidth\n        })\n            .then(\n                function success() {\n                    targetCanvas.qqImageRendered && targetCanvas.qqImageRendered();\n                    promise.success();\n                },\n                promise.failure\n            );\n\n        return promise;\n    }\n\n    /**\n     * Transform canvas coordination according to specified frame size and orientation\n     * Orientation value is from EXIF tag\n     */\n    function transformCoordinate(canvas, width, height, orientation) {\n        switch (orientation) {\n            case 5:\n            case 6:\n            case 7:\n            case 8:\n                canvas.width = height;\n                canvas.height = width;\n                break;\n            default:\n                canvas.width = width;\n                canvas.height = height;\n        }\n        var ctx = canvas.getContext(\"2d\");\n        switch (orientation) {\n            case 2:\n                // horizontal flip\n                ctx.translate(width, 0);\n                ctx.scale(-1, 1);\n                break;\n            case 3:\n                // 180 rotate left\n                ctx.translate(width, height);\n                ctx.rotate(Math.PI);\n                break;\n            case 4:\n                // vertical flip\n                ctx.translate(0, height);\n                ctx.scale(1, -1);\n                break;\n            case 5:\n                // vertical flip + 90 rotate right\n                ctx.rotate(0.5 * Math.PI);\n                ctx.scale(1, -1);\n                break;\n            case 6:\n                // 90 rotate right\n                ctx.rotate(0.5 * Math.PI);\n                ctx.translate(0, -height);\n                break;\n            case 7:\n                // horizontal flip + 90 rotate right\n                ctx.rotate(0.5 * Math.PI);\n                ctx.translate(width, -height);\n                ctx.scale(-1, 1);\n                break;\n            case 8:\n                // 90 rotate left\n                ctx.rotate(-0.5 * Math.PI);\n                ctx.translate(-width, 0);\n                break;\n            default:\n                break;\n        }\n    }\n\n    /**\n     * MegaPixImage class\n     */\n    function MegaPixImage(srcImage, errorCallback) {\n        var self = this;\n\n        if (window.Blob && srcImage instanceof Blob) {\n            (function() {\n                var img = new Image(),\n                    URL = window.URL && window.URL.createObjectURL ? window.URL :\n                        window.webkitURL && window.webkitURL.createObjectURL ? window.webkitURL : null;\n                if (!URL) { throw Error(\"No createObjectURL function found to create blob url\"); }\n                img.src = URL.createObjectURL(srcImage);\n                self.blob = srcImage;\n                srcImage = img;\n            }());\n        }\n        if (!srcImage.naturalWidth && !srcImage.naturalHeight) {\n            srcImage.onload = function() {\n                var listeners = self.imageLoadListeners;\n                if (listeners) {\n                    self.imageLoadListeners = null;\n                    // IE11 doesn't reliably report actual image dimensions immediately after onload for small files,\n                    // so let's push this to the end of the UI thread queue.\n                    setTimeout(function() {\n                        for (var i = 0, len = listeners.length; i < len; i++) {\n                            listeners[i]();\n                        }\n                    }, 0);\n                }\n            };\n            srcImage.onerror = errorCallback;\n            this.imageLoadListeners = [];\n        }\n        this.srcImage = srcImage;\n    }\n\n    /**\n     * Rendering megapix image into specified target element\n     */\n    MegaPixImage.prototype.render = function(target, options) {\n        options = options || {};\n\n        var self = this,\n            imgWidth = this.srcImage.naturalWidth,\n            imgHeight = this.srcImage.naturalHeight,\n            width = options.width,\n            height = options.height,\n            maxWidth = options.maxWidth,\n            maxHeight = options.maxHeight,\n            doSquash = !this.blob || this.blob.type === \"image/jpeg\",\n            tagName = target.tagName.toLowerCase(),\n            opt;\n\n        if (this.imageLoadListeners) {\n            this.imageLoadListeners.push(function() { self.render(target, options); });\n            return;\n        }\n\n        if (width && !height) {\n            height = (imgHeight * width / imgWidth) << 0;\n        } else if (height && !width) {\n            width = (imgWidth * height / imgHeight) << 0;\n        } else {\n            width = imgWidth;\n            height = imgHeight;\n        }\n        if (maxWidth && width > maxWidth) {\n            width = maxWidth;\n            height = (imgHeight * width / imgWidth) << 0;\n        }\n        if (maxHeight && height > maxHeight) {\n            height = maxHeight;\n            width = (imgWidth * height / imgHeight) << 0;\n        }\n\n        opt = { width: width, height: height },\n        qq.each(options, function(optionsKey, optionsValue) {\n            opt[optionsKey] = optionsValue;\n        });\n\n        if (tagName === \"img\") {\n            (function() {\n                var oldTargetSrc = target.src;\n                renderImageToDataURL(self.srcImage, self.blob, opt, doSquash)\n                    .then(function(dataUri) {\n                        target.src = dataUri;\n                        oldTargetSrc === target.src && target.onload();\n                    });\n            }());\n        } else if (tagName === \"canvas\") {\n            renderImageToCanvas(this.srcImage, this.blob, target, opt, doSquash);\n        }\n        if (typeof this.onrender === \"function\") {\n            this.onrender(target);\n        }\n    };\n\n    qq.MegaPixImage = MegaPixImage;\n})();\n","/*globals qq */\n/**\n * Draws a thumbnail of a Blob/File/URL onto an <img> or <canvas>.\n *\n * @constructor\n */\nqq.ImageGenerator = function(log) {\n    \"use strict\";\n\n    function isImg(el) {\n        return el.tagName.toLowerCase() === \"img\";\n    }\n\n    function isCanvas(el) {\n        return el.tagName.toLowerCase() === \"canvas\";\n    }\n\n    function isImgCorsSupported() {\n        return new Image().crossOrigin !== undefined;\n    }\n\n    function isCanvasSupported() {\n        var canvas = document.createElement(\"canvas\");\n\n        return canvas.getContext && canvas.getContext(\"2d\");\n    }\n\n    // This is only meant to determine the MIME type of a renderable image file.\n    // It is used to ensure images drawn from a URL that have transparent backgrounds\n    // are rendered correctly, among other things.\n    function determineMimeOfFileName(nameWithPath) {\n        /*jshint -W015 */\n        var pathSegments = nameWithPath.split(\"/\"),\n            name = pathSegments[pathSegments.length - 1].split(\"?\")[0],\n            extension = qq.getExtension(name);\n\n        extension = extension && extension.toLowerCase();\n\n        switch (extension) {\n            case \"jpeg\":\n            case \"jpg\":\n                return \"image/jpeg\";\n            case \"png\":\n                return \"image/png\";\n            case \"bmp\":\n                return \"image/bmp\";\n            case \"gif\":\n                return \"image/gif\";\n            case \"tiff\":\n            case \"tif\":\n                return \"image/tiff\";\n        }\n    }\n\n    // This will likely not work correctly in IE8 and older.\n    // It's only used as part of a formula to determine\n    // if a canvas can be used to scale a server-hosted thumbnail.\n    // If canvas isn't supported by the UA (IE8 and older)\n    // this method should not even be called.\n    function isCrossOrigin(url) {\n        var targetAnchor = document.createElement(\"a\"),\n            targetProtocol, targetHostname, targetPort;\n\n        targetAnchor.href = url;\n\n        targetProtocol = targetAnchor.protocol;\n        targetPort = targetAnchor.port;\n        targetHostname = targetAnchor.hostname;\n\n        if (targetProtocol.toLowerCase() !== window.location.protocol.toLowerCase()) {\n            return true;\n        }\n\n        if (targetHostname.toLowerCase() !== window.location.hostname.toLowerCase()) {\n            return true;\n        }\n\n        // IE doesn't take ports into consideration when determining if two endpoints are same origin.\n        if (targetPort !== window.location.port && !qq.ie()) {\n            return true;\n        }\n\n        return false;\n    }\n\n    function registerImgLoadListeners(img, promise) {\n        img.onload = function() {\n            img.onload = null;\n            img.onerror = null;\n            promise.success(img);\n        };\n\n        img.onerror = function() {\n            img.onload = null;\n            img.onerror = null;\n            log(\"Problem drawing thumbnail!\", \"error\");\n            promise.failure(img, \"Problem drawing thumbnail!\");\n        };\n    }\n\n    function registerCanvasDrawImageListener(canvas, promise) {\n        // The image is drawn on the canvas by a third-party library,\n        // and we want to know when this is completed.  Since the library\n        // may invoke drawImage many times in a loop, we need to be called\n        // back when the image is fully rendered.  So, we are expecting the\n        // code that draws this image to follow a convention that involves a\n        // function attached to the canvas instance be invoked when it is done.\n        canvas.qqImageRendered = function() {\n            promise.success(canvas);\n        };\n    }\n\n    // Fulfills a `qq.Promise` when an image has been drawn onto the target,\n    // whether that is a <canvas> or an <img>.  The attempt is considered a\n    // failure if the target is not an <img> or a <canvas>, or if the drawing\n    // attempt was not successful.\n    function registerThumbnailRenderedListener(imgOrCanvas, promise) {\n        var registered = isImg(imgOrCanvas) || isCanvas(imgOrCanvas);\n\n        if (isImg(imgOrCanvas)) {\n            registerImgLoadListeners(imgOrCanvas, promise);\n        }\n        else if (isCanvas(imgOrCanvas)) {\n            registerCanvasDrawImageListener(imgOrCanvas, promise);\n        }\n        else {\n            promise.failure(imgOrCanvas);\n            log(qq.format(\"Element container of type {} is not supported!\", imgOrCanvas.tagName), \"error\");\n        }\n\n        return registered;\n    }\n\n    // Draw a preview iff the current UA can natively display it.\n    // Also rotate the image if necessary.\n    function draw(fileOrBlob, container, options) {\n        var drawPreview = new qq.Promise(),\n            identifier = new qq.Identify(fileOrBlob, log),\n            maxSize = options.maxSize,\n            // jshint eqnull:true\n            orient = options.orient == null ? true : options.orient,\n            megapixErrorHandler = function() {\n                container.onerror = null;\n                container.onload = null;\n                log(\"Could not render preview, file may be too large!\", \"error\");\n                drawPreview.failure(container, \"Browser cannot render image!\");\n            };\n\n        identifier.isPreviewable().then(\n            function(mime) {\n                // If options explicitly specify that Orientation is not desired,\n                // replace the orient task with a dummy promise that \"succeeds\" immediately.\n                var dummyExif = {\n                        parse: function() {\n                            return new qq.Promise().success();\n                        }\n                    },\n                    exif = orient ? new qq.Exif(fileOrBlob, log) : dummyExif,\n                    mpImg = new qq.MegaPixImage(fileOrBlob, megapixErrorHandler);\n\n                if (registerThumbnailRenderedListener(container, drawPreview)) {\n                    exif.parse().then(\n                        function(exif) {\n                            var orientation = exif && exif.Orientation;\n\n                            mpImg.render(container, {\n                                maxWidth: maxSize,\n                                maxHeight: maxSize,\n                                orientation: orientation,\n                                mime: mime,\n                                resize: options.customResizeFunction\n                            });\n                        },\n\n                        function(failureMsg) {\n                            log(qq.format(\"EXIF data could not be parsed ({}).  Assuming orientation = 1.\", failureMsg));\n\n                            mpImg.render(container, {\n                                maxWidth: maxSize,\n                                maxHeight: maxSize,\n                                mime: mime,\n                                resize: options.customResizeFunction\n                            });\n                        }\n                    );\n                }\n            },\n\n            function() {\n                log(\"Not previewable\");\n                drawPreview.failure(container, \"Not previewable\");\n            }\n        );\n\n        return drawPreview;\n    }\n\n    function drawOnCanvasOrImgFromUrl(url, canvasOrImg, draw, maxSize, customResizeFunction) {\n        var tempImg = new Image(),\n            tempImgRender = new qq.Promise();\n\n        registerThumbnailRenderedListener(tempImg, tempImgRender);\n\n        if (isCrossOrigin(url)) {\n            tempImg.crossOrigin = \"anonymous\";\n        }\n\n        tempImg.src = url;\n\n        tempImgRender.then(\n            function rendered() {\n                registerThumbnailRenderedListener(canvasOrImg, draw);\n\n                var mpImg = new qq.MegaPixImage(tempImg);\n                mpImg.render(canvasOrImg, {\n                    maxWidth: maxSize,\n                    maxHeight: maxSize,\n                    mime: determineMimeOfFileName(url),\n                    resize: customResizeFunction\n                });\n            },\n\n            draw.failure\n        );\n    }\n\n    function drawOnImgFromUrlWithCssScaling(url, img, draw, maxSize) {\n        registerThumbnailRenderedListener(img, draw);\n        // NOTE: The fact that maxWidth/height is set on the thumbnail for scaled images\n        // that must drop back to CSS is known and exploited by the templating module.\n        // In this module, we pre-render \"waiting\" thumbs for all files immediately after they\n        // are submitted, and we must be sure to pass any style associated with the \"waiting\" preview.\n        qq(img).css({\n            maxWidth: maxSize + \"px\",\n            maxHeight: maxSize + \"px\"\n        });\n\n        img.src = url;\n    }\n\n    // Draw a (server-hosted) thumbnail given a URL.\n    // This will optionally scale the thumbnail as well.\n    // It attempts to use <canvas> to scale, but will fall back\n    // to max-width and max-height style properties if the UA\n    // doesn't support canvas or if the images is cross-domain and\n    // the UA doesn't support the crossorigin attribute on img tags,\n    // which is required to scale a cross-origin image using <canvas> &\n    // then export it back to an <img>.\n    function drawFromUrl(url, container, options) {\n        var draw = new qq.Promise(),\n            scale = options.scale,\n            maxSize = scale ? options.maxSize : null;\n\n        // container is an img, scaling needed\n        if (scale && isImg(container)) {\n            // Iff canvas is available in this UA, try to use it for scaling.\n            // Otherwise, fall back to CSS scaling\n            if (isCanvasSupported()) {\n                // Attempt to use <canvas> for image scaling,\n                // but we must fall back to scaling via CSS/styles\n                // if this is a cross-origin image and the UA doesn't support <img> CORS.\n                if (isCrossOrigin(url) && !isImgCorsSupported()) {\n                    drawOnImgFromUrlWithCssScaling(url, container, draw, maxSize);\n                }\n                else {\n                    drawOnCanvasOrImgFromUrl(url, container, draw, maxSize);\n                }\n            }\n            else {\n                drawOnImgFromUrlWithCssScaling(url, container, draw, maxSize);\n            }\n        }\n        // container is a canvas, scaling optional\n        else if (isCanvas(container)) {\n            drawOnCanvasOrImgFromUrl(url, container, draw, maxSize);\n        }\n        // container is an img & no scaling: just set the src attr to the passed url\n        else if (registerThumbnailRenderedListener(container, draw)) {\n            container.src = url;\n        }\n\n        return draw;\n    }\n\n    qq.extend(this, {\n        /**\n         * Generate a thumbnail.  Depending on the arguments, this may either result in\n         * a client-side rendering of an image (if a `Blob` is supplied) or a server-generated\n         * image that may optionally be scaled client-side using <canvas> or CSS/styles (as a fallback).\n         *\n         * @param fileBlobOrUrl a `File`, `Blob`, or a URL pointing to the image\n         * @param container <img> or <canvas> to contain the preview\n         * @param options possible properties include `maxSize` (int), `orient` (bool - default true), resize` (bool - default true), and `customResizeFunction`.\n         * @returns qq.Promise fulfilled when the preview has been drawn, or the attempt has failed\n         */\n        generate: function(fileBlobOrUrl, container, options) {\n            if (qq.isString(fileBlobOrUrl)) {\n                log(\"Attempting to update thumbnail based on server response.\");\n                return drawFromUrl(fileBlobOrUrl, container, options || {});\n            }\n            else {\n                log(\"Attempting to draw client-side image preview.\");\n                return draw(fileBlobOrUrl, container, options || {});\n            }\n        }\n    });\n\n    /*<testing>*/\n    this._testing = {};\n    this._testing.isImg = isImg;\n    this._testing.isCanvas = isCanvas;\n    this._testing.isCrossOrigin = isCrossOrigin;\n    this._testing.determineMimeOfFileName = determineMimeOfFileName;\n    /*</testing>*/\n};\n","/*globals qq */\n/**\n * EXIF image data parser.  Currently only parses the Orientation tag value,\n * but this may be expanded to other tags in the future.\n *\n * @param fileOrBlob Attempt to parse EXIF data in this `Blob`\n * @constructor\n */\nqq.Exif = function(fileOrBlob, log) {\n    \"use strict\";\n\n    // Orientation is the only tag parsed here at this time.\n    var TAG_IDS = [274],\n        TAG_INFO = {\n            274: {\n                name: \"Orientation\",\n                bytes: 2\n            }\n        };\n\n    // Convert a little endian (hex string) to big endian (decimal).\n    function parseLittleEndian(hex) {\n        var result = 0,\n            pow = 0;\n\n        while (hex.length > 0) {\n            result += parseInt(hex.substring(0, 2), 16) * Math.pow(2, pow);\n            hex = hex.substring(2, hex.length);\n            pow += 8;\n        }\n\n        return result;\n    }\n\n    // Find the byte offset, of Application Segment 1 (EXIF).\n    // External callers need not supply any arguments.\n    function seekToApp1(offset, promise) {\n        var theOffset = offset,\n            thePromise = promise;\n        if (theOffset === undefined) {\n            theOffset = 2;\n            thePromise = new qq.Promise();\n        }\n\n        qq.readBlobToHex(fileOrBlob, theOffset, 4).then(function(hex) {\n            var match = /^ffe([0-9])/.exec(hex),\n                segmentLength;\n\n            if (match) {\n                if (match[1] !== \"1\") {\n                    segmentLength = parseInt(hex.slice(4, 8), 16);\n                    seekToApp1(theOffset + segmentLength + 2, thePromise);\n                }\n                else {\n                    thePromise.success(theOffset);\n                }\n            }\n            else {\n                thePromise.failure(\"No EXIF header to be found!\");\n            }\n        });\n\n        return thePromise;\n    }\n\n    // Find the byte offset of Application Segment 1 (EXIF) for valid JPEGs only.\n    function getApp1Offset() {\n        var promise = new qq.Promise();\n\n        qq.readBlobToHex(fileOrBlob, 0, 6).then(function(hex) {\n            if (hex.indexOf(\"ffd8\") !== 0) {\n                promise.failure(\"Not a valid JPEG!\");\n            }\n            else {\n                seekToApp1().then(function(offset) {\n                    promise.success(offset);\n                },\n                function(error) {\n                    promise.failure(error);\n                });\n            }\n        });\n\n        return promise;\n    }\n\n    // Determine the byte ordering of the EXIF header.\n    function isLittleEndian(app1Start) {\n        var promise = new qq.Promise();\n\n        qq.readBlobToHex(fileOrBlob, app1Start + 10, 2).then(function(hex) {\n            promise.success(hex === \"4949\");\n        });\n\n        return promise;\n    }\n\n    // Determine the number of directory entries in the EXIF header.\n    function getDirEntryCount(app1Start, littleEndian) {\n        var promise = new qq.Promise();\n\n        qq.readBlobToHex(fileOrBlob, app1Start + 18, 2).then(function(hex) {\n            if (littleEndian) {\n                return promise.success(parseLittleEndian(hex));\n            }\n            else {\n                promise.success(parseInt(hex, 16));\n            }\n        });\n\n        return promise;\n    }\n\n    // Get the IFD portion of the EXIF header as a hex string.\n    function getIfd(app1Start, dirEntries) {\n        var offset = app1Start + 20,\n            bytes = dirEntries * 12;\n\n        return qq.readBlobToHex(fileOrBlob, offset, bytes);\n    }\n\n    // Obtain an array of all directory entries (as hex strings) in the EXIF header.\n    function getDirEntries(ifdHex) {\n        var entries = [],\n            offset = 0;\n\n        while (offset + 24 <= ifdHex.length) {\n            entries.push(ifdHex.slice(offset, offset + 24));\n            offset += 24;\n        }\n\n        return entries;\n    }\n\n    // Obtain values for all relevant tags and return them.\n    function getTagValues(littleEndian, dirEntries) {\n        var TAG_VAL_OFFSET = 16,\n            tagsToFind = qq.extend([], TAG_IDS),\n            vals = {};\n\n        qq.each(dirEntries, function(idx, entry) {\n            var idHex = entry.slice(0, 4),\n                id = littleEndian ? parseLittleEndian(idHex) : parseInt(idHex, 16),\n                tagsToFindIdx = tagsToFind.indexOf(id),\n                tagValHex, tagName, tagValLength;\n\n            if (tagsToFindIdx >= 0) {\n                tagName = TAG_INFO[id].name;\n                tagValLength = TAG_INFO[id].bytes;\n                tagValHex = entry.slice(TAG_VAL_OFFSET, TAG_VAL_OFFSET + (tagValLength * 2));\n                vals[tagName] = littleEndian ? parseLittleEndian(tagValHex) : parseInt(tagValHex, 16);\n\n                tagsToFind.splice(tagsToFindIdx, 1);\n            }\n\n            if (tagsToFind.length === 0) {\n                return false;\n            }\n        });\n\n        return vals;\n    }\n\n    qq.extend(this, {\n        /**\n         * Attempt to parse the EXIF header for the `Blob` associated with this instance.\n         *\n         * @returns {qq.Promise} To be fulfilled when the parsing is complete.\n         * If successful, the parsed EXIF header as an object will be included.\n         */\n        parse: function() {\n            var parser = new qq.Promise(),\n                onParseFailure = function(message) {\n                    log(qq.format(\"EXIF header parse failed: '{}' \", message));\n                    parser.failure(message);\n                };\n\n            getApp1Offset().then(function(app1Offset) {\n                log(qq.format(\"Moving forward with EXIF header parsing for '{}'\", fileOrBlob.name === undefined ? \"blob\" : fileOrBlob.name));\n\n                isLittleEndian(app1Offset).then(function(littleEndian) {\n\n                    log(qq.format(\"EXIF Byte order is {} endian\", littleEndian ? \"little\" : \"big\"));\n\n                    getDirEntryCount(app1Offset, littleEndian).then(function(dirEntryCount) {\n\n                        log(qq.format(\"Found {} APP1 directory entries\", dirEntryCount));\n\n                        getIfd(app1Offset, dirEntryCount).then(function(ifdHex) {\n                            var dirEntries = getDirEntries(ifdHex),\n                                tagValues = getTagValues(littleEndian, dirEntries);\n\n                            log(\"Successfully parsed some EXIF tags\");\n\n                            parser.success(tagValues);\n                        }, onParseFailure);\n                    }, onParseFailure);\n                }, onParseFailure);\n            }, onParseFailure);\n\n            return parser;\n        }\n    });\n\n    /*<testing>*/\n    this._testing = {};\n    this._testing.parseLittleEndian = parseLittleEndian;\n    /*</testing>*/\n};\n","/*globals qq */\nqq.Identify = function(fileOrBlob, log) {\n    \"use strict\";\n\n    function isIdentifiable(magicBytes, questionableBytes) {\n        var identifiable = false,\n            magicBytesEntries = [].concat(magicBytes);\n\n        qq.each(magicBytesEntries, function(idx, magicBytesArrayEntry) {\n            if (questionableBytes.indexOf(magicBytesArrayEntry) === 0) {\n                identifiable = true;\n                return false;\n            }\n        });\n\n        return identifiable;\n    }\n\n    qq.extend(this, {\n        /**\n         * Determines if a Blob can be displayed natively in the current browser.  This is done by reading magic\n         * bytes in the beginning of the file, so this is an asynchronous operation.  Before we attempt to read the\n         * file, we will examine the blob's type attribute to save CPU cycles.\n         *\n         * @returns {qq.Promise} Promise that is fulfilled when identification is complete.\n         * If successful, the MIME string is passed to the success handler.\n         */\n        isPreviewable: function() {\n            var self = this,\n                identifier = new qq.Promise(),\n                previewable = false,\n                name = fileOrBlob.name === undefined ? \"blob\" : fileOrBlob.name;\n\n            log(qq.format(\"Attempting to determine if {} can be rendered in this browser\", name));\n\n            log(\"First pass: check type attribute of blob object.\");\n\n            if (this.isPreviewableSync()) {\n                log(\"Second pass: check for magic bytes in file header.\");\n\n                qq.readBlobToHex(fileOrBlob, 0, 4).then(function(hex) {\n                    qq.each(self.PREVIEWABLE_MIME_TYPES, function(mime, bytes) {\n                        if (isIdentifiable(bytes, hex)) {\n                            // Safari is the only supported browser that can deal with TIFFs natively,\n                            // so, if this is a TIFF and the UA isn't Safari, declare this file \"non-previewable\".\n                            if (mime !== \"image/tiff\" || qq.supportedFeatures.tiffPreviews) {\n                                previewable = true;\n                                identifier.success(mime);\n                            }\n\n                            return false;\n                        }\n                    });\n\n                    log(qq.format(\"'{}' is {} able to be rendered in this browser\", name, previewable ? \"\" : \"NOT\"));\n\n                    if (!previewable) {\n                        identifier.failure();\n                    }\n                },\n                function() {\n                    log(\"Error reading file w/ name '\" + name + \"'.  Not able to be rendered in this browser.\");\n                    identifier.failure();\n                });\n            }\n            else {\n                identifier.failure();\n            }\n\n            return identifier;\n        },\n\n        /**\n         * Determines if a Blob can be displayed natively in the current browser.  This is done by checking the\n         * blob's type attribute.  This is a synchronous operation, useful for situations where an asynchronous operation\n         * would be challenging to support.  Note that the blob's type property is not as accurate as reading the\n         * file's magic bytes.\n         *\n         * @returns {Boolean} true if the blob can be rendered in the current browser\n         */\n        isPreviewableSync: function() {\n            var fileMime = fileOrBlob.type,\n                // Assumption: This will only ever be executed in browsers that support `Object.keys`.\n                isRecognizedImage = qq.indexOf(Object.keys(this.PREVIEWABLE_MIME_TYPES), fileMime) >= 0,\n                previewable = false,\n                name = fileOrBlob.name === undefined ? \"blob\" : fileOrBlob.name;\n\n            if (isRecognizedImage) {\n                if (fileMime === \"image/tiff\") {\n                    previewable = qq.supportedFeatures.tiffPreviews;\n                }\n                else {\n                    previewable = true;\n                }\n            }\n\n            !previewable && log(name + \" is not previewable in this browser per the blob's type attr\");\n\n            return previewable;\n        }\n    });\n};\n\nqq.Identify.prototype.PREVIEWABLE_MIME_TYPES = {\n    \"image/jpeg\": \"ffd8ff\",\n    \"image/gif\": \"474946\",\n    \"image/png\": \"89504e\",\n    \"image/bmp\": \"424d\",\n    \"image/tiff\": [\"49492a00\", \"4d4d002a\"]\n};\n","/*globals qq*/\n/**\n * Attempts to validate an image, wherever possible.\n *\n * @param blob File or Blob representing a user-selecting image.\n * @param log Uses this to post log messages to the console.\n * @constructor\n */\nqq.ImageValidation = function(blob, log) {\n    \"use strict\";\n\n    /**\n     * @param limits Object with possible image-related limits to enforce.\n     * @returns {boolean} true if at least one of the limits has a non-zero value\n     */\n    function hasNonZeroLimits(limits) {\n        var atLeastOne = false;\n\n        qq.each(limits, function(limit, value) {\n            if (value > 0) {\n                atLeastOne = true;\n                return false;\n            }\n        });\n\n        return atLeastOne;\n    }\n\n    /**\n     * @returns {qq.Promise} The promise is a failure if we can't obtain the width & height.\n     * Otherwise, `success` is called on the returned promise with an object containing\n     * `width` and `height` properties.\n     */\n    function getWidthHeight() {\n        var sizeDetermination = new qq.Promise();\n\n        new qq.Identify(blob, log).isPreviewable().then(function() {\n            var image = new Image(),\n                url = window.URL && window.URL.createObjectURL ? window.URL :\n                      window.webkitURL && window.webkitURL.createObjectURL ? window.webkitURL :\n                      null;\n\n            if (url) {\n                image.onerror = function() {\n                    log(\"Cannot determine dimensions for image.  May be too large.\", \"error\");\n                    sizeDetermination.failure();\n                };\n\n                image.onload = function() {\n                    sizeDetermination.success({\n                        width: this.width,\n                        height: this.height\n                    });\n                };\n\n                image.src = url.createObjectURL(blob);\n            }\n            else {\n                log(\"No createObjectURL function available to generate image URL!\", \"error\");\n                sizeDetermination.failure();\n            }\n        }, sizeDetermination.failure);\n\n        return sizeDetermination;\n    }\n\n    /**\n     *\n     * @param limits Object with possible image-related limits to enforce.\n     * @param dimensions Object containing `width` & `height` properties for the image to test.\n     * @returns {String || undefined} The name of the failing limit.  Undefined if no failing limits.\n     */\n    function getFailingLimit(limits, dimensions) {\n        var failingLimit;\n\n        qq.each(limits, function(limitName, limitValue) {\n            if (limitValue > 0) {\n                var limitMatcher = /(max|min)(Width|Height)/.exec(limitName),\n                    dimensionPropName = limitMatcher[2].charAt(0).toLowerCase() + limitMatcher[2].slice(1),\n                    actualValue = dimensions[dimensionPropName];\n\n                /*jshint -W015*/\n                switch (limitMatcher[1]) {\n                    case \"min\":\n                        if (actualValue < limitValue) {\n                            failingLimit = limitName;\n                            return false;\n                        }\n                        break;\n                    case \"max\":\n                        if (actualValue > limitValue) {\n                            failingLimit = limitName;\n                            return false;\n                        }\n                        break;\n                }\n            }\n        });\n\n        return failingLimit;\n    }\n\n    /**\n     * Validate the associated blob.\n     *\n     * @param limits\n     * @returns {qq.Promise} `success` is called on the promise is the image is valid or\n     * if the blob is not an image, or if the image is not verifiable.\n     * Otherwise, `failure` with the name of the failing limit.\n     */\n    this.validate = function(limits) {\n        var validationEffort = new qq.Promise();\n\n        log(\"Attempting to validate image.\");\n\n        if (hasNonZeroLimits(limits)) {\n            getWidthHeight().then(function(dimensions) {\n                var failingLimit = getFailingLimit(limits, dimensions);\n\n                if (failingLimit) {\n                    validationEffort.failure(failingLimit);\n                }\n                else {\n                    validationEffort.success();\n                }\n            }, validationEffort.success);\n        }\n        else {\n            validationEffort.success();\n        }\n\n        return validationEffort;\n    };\n};\n","/* globals qq */\n/**\n * Module used to control populating the initial list of files.\n *\n * @constructor\n */\nqq.Session = function(spec) {\n    \"use strict\";\n\n    var options = {\n        endpoint: null,\n        params: {},\n        customHeaders: {},\n        cors: {},\n        addFileRecord: function(sessionData) {},\n        log: function(message, level) {}\n    };\n\n    qq.extend(options, spec, true);\n\n    function isJsonResponseValid(response) {\n        if (qq.isArray(response)) {\n            return true;\n        }\n\n        options.log(\"Session response is not an array.\", \"error\");\n    }\n\n    function handleFileItems(fileItems, success, xhrOrXdr, promise) {\n        var someItemsIgnored = false;\n\n        success = success && isJsonResponseValid(fileItems);\n\n        if (success) {\n            qq.each(fileItems, function(idx, fileItem) {\n                /* jshint eqnull:true */\n                if (fileItem.uuid == null) {\n                    someItemsIgnored = true;\n                    options.log(qq.format(\"Session response item {} did not include a valid UUID - ignoring.\", idx), \"error\");\n                }\n                else if (fileItem.name == null) {\n                    someItemsIgnored = true;\n                    options.log(qq.format(\"Session response item {} did not include a valid name - ignoring.\", idx), \"error\");\n                }\n                else {\n                    try {\n                        options.addFileRecord(fileItem);\n                        return true;\n                    }\n                    catch (err) {\n                        someItemsIgnored = true;\n                        options.log(err.message, \"error\");\n                    }\n                }\n\n                return false;\n            });\n        }\n\n        promise[success && !someItemsIgnored ? \"success\" : \"failure\"](fileItems, xhrOrXdr);\n    }\n\n    // Initiate a call to the server that will be used to populate the initial file list.\n    // Returns a `qq.Promise`.\n    this.refresh = function() {\n        /*jshint indent:false */\n        var refreshEffort = new qq.Promise(),\n            refreshCompleteCallback = function(response, success, xhrOrXdr) {\n                handleFileItems(response, success, xhrOrXdr, refreshEffort);\n            },\n            requesterOptions = qq.extend({}, options),\n            requester = new qq.SessionAjaxRequester(\n                qq.extend(requesterOptions, {onComplete: refreshCompleteCallback})\n            );\n\n        requester.queryServer();\n\n        return refreshEffort;\n    };\n};\n","/*globals qq, XMLHttpRequest*/\n/**\n * Thin module used to send GET requests to the server, expecting information about session\n * data used to initialize an uploader instance.\n *\n * @param spec Various options used to influence the associated request.\n * @constructor\n */\nqq.SessionAjaxRequester = function(spec) {\n    \"use strict\";\n\n    var requester,\n        options = {\n            endpoint: null,\n            customHeaders: {},\n            params: {},\n            cors: {\n                expected: false,\n                sendCredentials: false\n            },\n            onComplete: function(response, success, xhrOrXdr) {},\n            log: function(str, level) {}\n        };\n\n    qq.extend(options, spec);\n\n    function onComplete(id, xhrOrXdr, isError) {\n        var response = null;\n\n        /* jshint eqnull:true */\n        if (xhrOrXdr.responseText != null) {\n            try {\n                response = qq.parseJson(xhrOrXdr.responseText);\n            }\n            catch (err) {\n                options.log(\"Problem parsing session response: \" + err.message, \"error\");\n                isError = true;\n            }\n        }\n\n        options.onComplete(response, !isError, xhrOrXdr);\n    }\n\n    requester = qq.extend(this, new qq.AjaxRequester({\n        acceptHeader: \"application/json\",\n        validMethods: [\"GET\"],\n        method: \"GET\",\n        endpointStore: {\n            get: function() {\n                return options.endpoint;\n            }\n        },\n        customHeaders: options.customHeaders,\n        log: options.log,\n        onComplete: onComplete,\n        cors: options.cors\n    }));\n\n    qq.extend(this, {\n        queryServer: function() {\n            var params = qq.extend({}, options.params);\n\n            options.log(\"Session query request.\");\n\n            requester.initTransport(\"sessionRefresh\")\n                .withParams(params)\n                .withCacheBuster()\n                .send();\n        }\n    });\n};\n","/* globals qq, ExifRestorer */\n/**\n * Controls generation of scaled images based on a reference image encapsulated in a `File` or `Blob`.\n * Scaled images are generated and converted to blobs on-demand.\n * Multiple scaled images per reference image with varying sizes and other properties are supported.\n *\n * @param spec Information about the scaled images to generate.\n * @param log Logger instance\n * @constructor\n */\nqq.Scaler = function(spec, log) {\n    \"use strict\";\n\n    var self = this,\n        customResizeFunction = spec.customResizer,\n        includeOriginal = spec.sendOriginal,\n        orient = spec.orient,\n        defaultType = spec.defaultType,\n        defaultQuality = spec.defaultQuality / 100,\n        failedToScaleText = spec.failureText,\n        includeExif = spec.includeExif,\n        sizes = this._getSortedSizes(spec.sizes);\n\n    // Revealed API for instances of this module\n    qq.extend(this, {\n        // If no targeted sizes have been declared or if this browser doesn't support\n        // client-side image preview generation, there is no scaling to do.\n        enabled: qq.supportedFeatures.scaling && sizes.length > 0,\n\n        getFileRecords: function(originalFileUuid, originalFileName, originalBlobOrBlobData) {\n            var self = this,\n                records = [],\n                originalBlob = originalBlobOrBlobData.blob ? originalBlobOrBlobData.blob : originalBlobOrBlobData,\n                identifier = new qq.Identify(originalBlob, log);\n\n            // If the reference file cannot be rendered natively, we can't create scaled versions.\n            if (identifier.isPreviewableSync()) {\n                // Create records for each scaled version & add them to the records array, smallest first.\n                qq.each(sizes, function(idx, sizeRecord) {\n                    var outputType = self._determineOutputType({\n                        defaultType: defaultType,\n                        requestedType: sizeRecord.type,\n                        refType: originalBlob.type\n                    });\n\n                    records.push({\n                        uuid: qq.getUniqueId(),\n                        name: self._getName(originalFileName, {\n                            name: sizeRecord.name,\n                            type: outputType,\n                            refType: originalBlob.type\n                        }),\n                        blob: new qq.BlobProxy(originalBlob,\n                        qq.bind(self._generateScaledImage, self, {\n                            customResizeFunction: customResizeFunction,\n                            maxSize: sizeRecord.maxSize,\n                            orient: orient,\n                            type: outputType,\n                            quality: defaultQuality,\n                            failedText: failedToScaleText,\n                            includeExif: includeExif,\n                            log: log\n                        }))\n                    });\n                });\n\n                records.push({\n                    uuid: originalFileUuid,\n                    name: originalFileName,\n                    size: originalBlob.size,\n                    blob: includeOriginal ? originalBlob : null\n                });\n            }\n            else {\n                records.push({\n                    uuid: originalFileUuid,\n                    name: originalFileName,\n                    size: originalBlob.size,\n                    blob: originalBlob\n                });\n            }\n\n            return records;\n        },\n\n        handleNewFile: function(file, name, uuid, size, fileList, batchId, uuidParamName, api) {\n            var self = this,\n                buttonId = file.qqButtonId || (file.blob && file.blob.qqButtonId),\n                scaledIds = [],\n                originalId = null,\n                addFileToHandler = api.addFileToHandler,\n                uploadData = api.uploadData,\n                paramsStore = api.paramsStore,\n                proxyGroupId = qq.getUniqueId();\n\n            qq.each(self.getFileRecords(uuid, name, file), function(idx, record) {\n                var blobSize = record.size,\n                    id;\n\n                if (record.blob instanceof qq.BlobProxy) {\n                    blobSize = -1;\n                }\n\n                id = uploadData.addFile({\n                    uuid: record.uuid,\n                    name: record.name,\n                    size: blobSize,\n                    batchId: batchId,\n                    proxyGroupId: proxyGroupId\n                });\n\n                if (record.blob instanceof qq.BlobProxy) {\n                    scaledIds.push(id);\n                }\n                else {\n                    originalId = id;\n                }\n\n                if (record.blob) {\n                    addFileToHandler(id, record.blob);\n                    fileList.push({id: id, file: record.blob});\n                }\n                else {\n                    uploadData.setStatus(id, qq.status.REJECTED);\n                }\n            });\n\n            // If we are potentially uploading an original file and some scaled versions,\n            // ensure the scaled versions include reference's to the parent's UUID and size\n            // in their associated upload requests.\n            if (originalId !== null) {\n                qq.each(scaledIds, function(idx, scaledId) {\n                    var params = {\n                        qqparentuuid: uploadData.retrieve({id: originalId}).uuid,\n                        qqparentsize: uploadData.retrieve({id: originalId}).size\n                    };\n\n                    // Make sure the UUID for each scaled image is sent with the upload request,\n                    // to be consistent (since we may need to ensure it is sent for the original file as well).\n                    params[uuidParamName] = uploadData.retrieve({id: scaledId}).uuid;\n\n                    uploadData.setParentId(scaledId, originalId);\n                    paramsStore.addReadOnly(scaledId, params);\n                });\n\n                // If any scaled images are tied to this parent image, be SURE we send its UUID as an upload request\n                // parameter as well.\n                if (scaledIds.length) {\n                    (function() {\n                        var param = {};\n                        param[uuidParamName] = uploadData.retrieve({id: originalId}).uuid;\n                        paramsStore.addReadOnly(originalId, param);\n                    }());\n                }\n            }\n        }\n    });\n};\n\nqq.extend(qq.Scaler.prototype, {\n    scaleImage: function(id, specs, api) {\n        \"use strict\";\n\n        if (!qq.supportedFeatures.scaling) {\n            throw new qq.Error(\"Scaling is not supported in this browser!\");\n        }\n\n        var scalingEffort = new qq.Promise(),\n            log = api.log,\n            file = api.getFile(id),\n            uploadData = api.uploadData.retrieve({id: id}),\n            name = uploadData && uploadData.name,\n            uuid = uploadData && uploadData.uuid,\n            scalingOptions = {\n                customResizer: specs.customResizer,\n                sendOriginal: false,\n                orient: specs.orient,\n                defaultType: specs.type || null,\n                defaultQuality: specs.quality,\n                failedToScaleText: \"Unable to scale\",\n                sizes: [{name: \"\", maxSize: specs.maxSize}]\n            },\n            scaler = new qq.Scaler(scalingOptions, log);\n\n        if (!qq.Scaler || !qq.supportedFeatures.imagePreviews || !file) {\n            scalingEffort.failure();\n\n            log(\"Could not generate requested scaled image for \" + id + \".  \" +\n                \"Scaling is either not possible in this browser, or the file could not be located.\", \"error\");\n        }\n        else {\n            (qq.bind(function() {\n                // Assumption: There will never be more than one record\n                var record = scaler.getFileRecords(uuid, name, file)[0];\n\n                if (record && record.blob instanceof qq.BlobProxy) {\n                    record.blob.create().then(scalingEffort.success, scalingEffort.failure);\n                }\n                else {\n                    log(id + \" is not a scalable image!\", \"error\");\n                    scalingEffort.failure();\n                }\n            }, this)());\n        }\n\n        return scalingEffort;\n    },\n\n    // NOTE: We cannot reliably determine at this time if the UA supports a specific MIME type for the target format.\n    // image/jpeg and image/png are the only safe choices at this time.\n    _determineOutputType: function(spec) {\n        \"use strict\";\n\n        var requestedType = spec.requestedType,\n            defaultType = spec.defaultType,\n            referenceType = spec.refType;\n\n        // If a default type and requested type have not been specified, this should be a\n        // JPEG if the original type is a JPEG, otherwise, a PNG.\n        if (!defaultType && !requestedType) {\n            if (referenceType !== \"image/jpeg\") {\n                return \"image/png\";\n            }\n            return referenceType;\n        }\n\n        // A specified default type is used when a requested type is not specified.\n        if (!requestedType) {\n            return defaultType;\n        }\n\n        // If requested type is specified, use it, as long as this recognized type is supported by the current UA\n        if (qq.indexOf(Object.keys(qq.Identify.prototype.PREVIEWABLE_MIME_TYPES), requestedType) >= 0) {\n            if (requestedType === \"image/tiff\") {\n                return qq.supportedFeatures.tiffPreviews ? requestedType : defaultType;\n            }\n\n            return requestedType;\n        }\n\n        return defaultType;\n    },\n\n    // Get a file name for a generated scaled file record, based on the provided scaled image description\n    _getName: function(originalName, scaledVersionProperties) {\n        \"use strict\";\n\n        var startOfExt = originalName.lastIndexOf(\".\"),\n            versionType = scaledVersionProperties.type || \"image/png\",\n            referenceType = scaledVersionProperties.refType,\n            scaledName = \"\",\n            scaledExt = qq.getExtension(originalName),\n            nameAppendage = \"\";\n\n        if (scaledVersionProperties.name && scaledVersionProperties.name.trim().length) {\n            nameAppendage = \" (\" + scaledVersionProperties.name + \")\";\n        }\n\n        if (startOfExt >= 0) {\n            scaledName = originalName.substr(0, startOfExt);\n\n            if (referenceType !== versionType) {\n                scaledExt = versionType.split(\"/\")[1];\n            }\n\n            scaledName += nameAppendage + \".\" + scaledExt;\n        }\n        else {\n            scaledName = originalName + nameAppendage;\n        }\n\n        return scaledName;\n    },\n\n    // We want the smallest scaled file to be uploaded first\n    _getSortedSizes: function(sizes) {\n        \"use strict\";\n\n        sizes = qq.extend([], sizes);\n\n        return sizes.sort(function(a, b) {\n            if (a.maxSize > b.maxSize) {\n                return 1;\n            }\n            if (a.maxSize < b.maxSize) {\n                return -1;\n            }\n            return 0;\n        });\n    },\n\n    _generateScaledImage: function(spec, sourceFile) {\n        \"use strict\";\n\n        var self = this,\n            customResizeFunction = spec.customResizeFunction,\n            log = spec.log,\n            maxSize = spec.maxSize,\n            orient = spec.orient,\n            type = spec.type,\n            quality = spec.quality,\n            failedText = spec.failedText,\n            includeExif = spec.includeExif && sourceFile.type === \"image/jpeg\" && type === \"image/jpeg\",\n            scalingEffort = new qq.Promise(),\n            imageGenerator = new qq.ImageGenerator(log),\n            canvas = document.createElement(\"canvas\");\n\n        log(\"Attempting to generate scaled version for \" + sourceFile.name);\n\n        imageGenerator.generate(sourceFile, canvas, {maxSize: maxSize, orient: orient, customResizeFunction: customResizeFunction}).then(function() {\n            var scaledImageDataUri = canvas.toDataURL(type, quality),\n                signalSuccess = function() {\n                    log(\"Success generating scaled version for \" + sourceFile.name);\n                    var blob = qq.dataUriToBlob(scaledImageDataUri);\n                    scalingEffort.success(blob);\n                };\n\n            if (includeExif) {\n                self._insertExifHeader(sourceFile, scaledImageDataUri, log).then(function(scaledImageDataUriWithExif) {\n                    scaledImageDataUri = scaledImageDataUriWithExif;\n                    signalSuccess();\n                },\n                function() {\n                    log(\"Problem inserting EXIF header into scaled image.  Using scaled image w/out EXIF data.\", \"error\");\n                    signalSuccess();\n                });\n            }\n            else {\n                signalSuccess();\n            }\n        }, function() {\n            log(\"Failed attempt to generate scaled version for \" + sourceFile.name, \"error\");\n            scalingEffort.failure(failedText);\n        });\n\n        return scalingEffort;\n    },\n\n    // Attempt to insert the original image's EXIF header into a scaled version.\n    _insertExifHeader: function(originalImage, scaledImageDataUri, log) {\n        \"use strict\";\n\n        var reader = new FileReader(),\n            insertionEffort = new qq.Promise(),\n            originalImageDataUri = \"\";\n\n        reader.onload = function() {\n            originalImageDataUri = reader.result;\n            insertionEffort.success(qq.ExifRestorer.restore(originalImageDataUri, scaledImageDataUri));\n        };\n\n        reader.onerror = function() {\n            log(\"Problem reading \" + originalImage.name + \" during attempt to transfer EXIF data to scaled version.\", \"error\");\n            insertionEffort.failure();\n        };\n\n        reader.readAsDataURL(originalImage);\n\n        return insertionEffort;\n    },\n\n    _dataUriToBlob: function(dataUri) {\n        \"use strict\";\n\n        var byteString, mimeString, arrayBuffer, intArray;\n\n        // convert base64 to raw binary data held in a string\n        if (dataUri.split(\",\")[0].indexOf(\"base64\") >= 0) {\n            byteString = atob(dataUri.split(\",\")[1]);\n        }\n        else {\n            byteString = decodeURI(dataUri.split(\",\")[1]);\n        }\n\n        // extract the MIME\n        mimeString = dataUri.split(\",\")[0]\n            .split(\":\")[1]\n            .split(\";\")[0];\n\n        // write the bytes of the binary string to an ArrayBuffer\n        arrayBuffer = new ArrayBuffer(byteString.length);\n        intArray = new Uint8Array(arrayBuffer);\n        qq.each(byteString, function(idx, character) {\n            intArray[idx] = character.charCodeAt(0);\n        });\n\n        return this._createBlob(arrayBuffer, mimeString);\n    },\n\n    _createBlob: function(data, mime) {\n        \"use strict\";\n\n        var BlobBuilder = window.BlobBuilder ||\n                window.WebKitBlobBuilder ||\n                window.MozBlobBuilder ||\n                window.MSBlobBuilder,\n            blobBuilder = BlobBuilder && new BlobBuilder();\n\n        if (blobBuilder) {\n            blobBuilder.append(data);\n            return blobBuilder.getBlob(mime);\n        }\n        else {\n            return new Blob([data], {type: mime});\n        }\n    }\n});\n","//Based on MinifyJpeg\n//http://elicon.blog57.fc2.com/blog-entry-206.html\n\nqq.ExifRestorer = (function()\n{\n   \n\tvar ExifRestorer = {};\n\t \n    ExifRestorer.KEY_STR = \"ABCDEFGHIJKLMNOP\" +\n                         \"QRSTUVWXYZabcdef\" +\n                         \"ghijklmnopqrstuv\" +\n                         \"wxyz0123456789+/\" +\n                         \"=\";\n\n    ExifRestorer.encode64 = function(input)\n    {\n        var output = \"\",\n            chr1, chr2, chr3 = \"\",\n            enc1, enc2, enc3, enc4 = \"\",\n            i = 0;\n\n        do {\n            chr1 = input[i++];\n            chr2 = input[i++];\n            chr3 = input[i++];\n\n            enc1 = chr1 >> 2;\n            enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);\n            enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);\n            enc4 = chr3 & 63;\n\n            if (isNaN(chr2)) {\n               enc3 = enc4 = 64;\n            } else if (isNaN(chr3)) {\n               enc4 = 64;\n            }\n\n            output = output +\n               this.KEY_STR.charAt(enc1) +\n               this.KEY_STR.charAt(enc2) +\n               this.KEY_STR.charAt(enc3) +\n               this.KEY_STR.charAt(enc4);\n            chr1 = chr2 = chr3 = \"\";\n            enc1 = enc2 = enc3 = enc4 = \"\";\n        } while (i < input.length);\n\n        return output;\n    };\n    \n    ExifRestorer.restore = function(origFileBase64, resizedFileBase64)\n    {\n        var expectedBase64Header = \"data:image/jpeg;base64,\";\n\n        if (!origFileBase64.match(expectedBase64Header))\n        {\n        \treturn resizedFileBase64;\n        }       \n        \n        var rawImage = this.decode64(origFileBase64.replace(expectedBase64Header, \"\"));\n        var segments = this.slice2Segments(rawImage);\n                \n        var image = this.exifManipulation(resizedFileBase64, segments);\n        \n        return expectedBase64Header + this.encode64(image);\n        \n    };\n\n\n    ExifRestorer.exifManipulation = function(resizedFileBase64, segments)\n    {\n            var exifArray = this.getExifArray(segments),\n                newImageArray = this.insertExif(resizedFileBase64, exifArray),\n                aBuffer = new Uint8Array(newImageArray);\n\n            return aBuffer;\n    };\n\n\n    ExifRestorer.getExifArray = function(segments)\n    {\n            var seg;\n            for (var x = 0; x < segments.length; x++)\n            {\n                seg = segments[x];\n                if (seg[0] == 255 & seg[1] == 225) //(ff e1)\n                {\n                    return seg;\n                }\n            }\n            return [];\n    };\n\n\n    ExifRestorer.insertExif = function(resizedFileBase64, exifArray)\n    {\n            var imageData = resizedFileBase64.replace(\"data:image/jpeg;base64,\", \"\"),\n                buf = this.decode64(imageData),\n                separatePoint = buf.indexOf(255,3),\n                mae = buf.slice(0, separatePoint),\n                ato = buf.slice(separatePoint),\n                array = mae;\n\n            array = array.concat(exifArray);\n            array = array.concat(ato);\n           return array;\n    };\n\n\n    \n    ExifRestorer.slice2Segments = function(rawImageArray)\n    {\n        var head = 0,\n            segments = [];\n\n        while (1)\n        {\n            if (rawImageArray[head] == 255 & rawImageArray[head + 1] == 218){break;}\n            if (rawImageArray[head] == 255 & rawImageArray[head + 1] == 216)\n            {\n                head += 2;\n            }\n            else\n            {\n                var length = rawImageArray[head + 2] * 256 + rawImageArray[head + 3],\n                    endPoint = head + length + 2,\n                    seg = rawImageArray.slice(head, endPoint);\n                segments.push(seg);\n                head = endPoint;\n            }\n            if (head > rawImageArray.length){break;}\n        }\n\n        return segments;\n    };\n\n\n    \n    ExifRestorer.decode64 = function(input) \n    {\n        var output = \"\",\n            chr1, chr2, chr3 = \"\",\n            enc1, enc2, enc3, enc4 = \"\",\n            i = 0,\n            buf = [];\n\n        // remove all characters that are not A-Z, a-z, 0-9, +, /, or =\n        var base64test = /[^A-Za-z0-9\\+\\/\\=]/g;\n        if (base64test.exec(input)) {\n            throw new Error(\"There were invalid base64 characters in the input text.  \" +\n                \"Valid base64 characters are A-Z, a-z, 0-9, '+', '/',and '='\");\n        }\n        input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, \"\");\n\n        do {\n            enc1 = this.KEY_STR.indexOf(input.charAt(i++));\n            enc2 = this.KEY_STR.indexOf(input.charAt(i++));\n            enc3 = this.KEY_STR.indexOf(input.charAt(i++));\n            enc4 = this.KEY_STR.indexOf(input.charAt(i++));\n\n            chr1 = (enc1 << 2) | (enc2 >> 4);\n            chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\n            chr3 = ((enc3 & 3) << 6) | enc4;\n\n            buf.push(chr1);\n\n            if (enc3 != 64) {\n               buf.push(chr2);\n            }\n            if (enc4 != 64) {\n               buf.push(chr3);\n            }\n\n            chr1 = chr2 = chr3 = \"\";\n            enc1 = enc2 = enc3 = enc4 = \"\";\n\n        } while (i < input.length);\n\n        return buf;\n    };\n\n    \n    return ExifRestorer;\n})();\n","/* globals qq */\n/**\n * Keeps a running tally of total upload progress for a batch of files.\n *\n * @param callback Invoked when total progress changes, passing calculated total loaded & total size values.\n * @param getSize Function that returns the size of a file given its ID\n * @constructor\n */\nqq.TotalProgress = function(callback, getSize) {\n    \"use strict\";\n\n    var perFileProgress = {},\n        totalLoaded = 0,\n        totalSize = 0,\n\n        lastLoadedSent = -1,\n        lastTotalSent = -1,\n        callbackProxy = function(loaded, total) {\n            if (loaded !== lastLoadedSent || total !== lastTotalSent) {\n                callback(loaded, total);\n            }\n\n            lastLoadedSent = loaded;\n            lastTotalSent = total;\n        },\n\n        /**\n         * @param failed Array of file IDs that have failed\n         * @param retryable Array of file IDs that are retryable\n         * @returns true if none of the failed files are eligible for retry\n         */\n        noRetryableFiles = function(failed, retryable) {\n            var none = true;\n\n            qq.each(failed, function(idx, failedId) {\n                if (qq.indexOf(retryable, failedId) >= 0) {\n                    none = false;\n                    return false;\n                }\n            });\n\n            return none;\n        },\n\n        onCancel = function(id) {\n            updateTotalProgress(id, -1, -1);\n            delete perFileProgress[id];\n        },\n\n        onAllComplete = function(successful, failed, retryable) {\n            if (failed.length === 0 || noRetryableFiles(failed, retryable)) {\n                callbackProxy(totalSize, totalSize);\n                this.reset();\n            }\n        },\n\n        onNew = function(id) {\n            var size = getSize(id);\n\n            // We might not know the size yet, such as for blob proxies\n            if (size > 0) {\n                updateTotalProgress(id, 0, size);\n                perFileProgress[id] = {loaded: 0, total: size};\n            }\n        },\n\n        /**\n         * Invokes the callback with the current total progress of all files in the batch.  Called whenever it may\n         * be appropriate to re-calculate and disseminate this data.\n         *\n         * @param id ID of a file that has changed in some important way\n         * @param newLoaded New loaded value for this file.  -1 if this value should no longer be part of calculations\n         * @param newTotal New total size of the file.  -1 if this value should no longer be part of calculations\n         */\n        updateTotalProgress = function(id, newLoaded, newTotal) {\n            var oldLoaded = perFileProgress[id] ? perFileProgress[id].loaded : 0,\n                oldTotal = perFileProgress[id] ? perFileProgress[id].total : 0;\n\n            if (newLoaded === -1 && newTotal === -1) {\n                totalLoaded -= oldLoaded;\n                totalSize -= oldTotal;\n            }\n            else {\n                if (newLoaded) {\n                    totalLoaded += newLoaded - oldLoaded;\n                }\n                if (newTotal) {\n                    totalSize += newTotal - oldTotal;\n                }\n            }\n\n            callbackProxy(totalLoaded, totalSize);\n        };\n\n    qq.extend(this, {\n        // Called when a batch of files has completed uploading.\n        onAllComplete: onAllComplete,\n\n        // Called when the status of a file has changed.\n        onStatusChange: function(id, oldStatus, newStatus) {\n            if (newStatus === qq.status.CANCELED || newStatus === qq.status.REJECTED) {\n                onCancel(id);\n            }\n            else if (newStatus === qq.status.SUBMITTING) {\n                onNew(id);\n            }\n        },\n\n        // Called whenever the upload progress of an individual file has changed.\n        onIndividualProgress: function(id, loaded, total) {\n            updateTotalProgress(id, loaded, total);\n            perFileProgress[id] = {loaded: loaded, total: total};\n        },\n\n        // Called whenever the total size of a file has changed, such as when the size of a generated blob is known.\n        onNewSize: function(id) {\n            onNew(id);\n        },\n\n        reset: function() {\n            perFileProgress = {};\n            totalLoaded = 0;\n            totalSize = 0;\n        }\n    });\n};\n","/*globals qq*/\nqq.PasteSupport = function(o) {\n    \"use strict\";\n\n    var options, detachPasteHandler;\n\n    options = {\n        targetElement: null,\n        callbacks: {\n            log: function(message, level) {},\n            pasteReceived: function(blob) {}\n        }\n    };\n\n    function isImage(item) {\n        return item.type &&\n            item.type.indexOf(\"image/\") === 0;\n    }\n\n    function registerPasteHandler() {\n        detachPasteHandler = qq(options.targetElement).attach(\"paste\", function(event) {\n            var clipboardData = event.clipboardData;\n\n            if (clipboardData) {\n                qq.each(clipboardData.items, function(idx, item) {\n                    if (isImage(item)) {\n                        var blob = item.getAsFile();\n                        options.callbacks.pasteReceived(blob);\n                    }\n                });\n            }\n        });\n    }\n\n    function unregisterPasteHandler() {\n        if (detachPasteHandler) {\n            detachPasteHandler();\n        }\n    }\n\n    qq.extend(options, o);\n    registerPasteHandler();\n\n    qq.extend(this, {\n        reset: function() {\n            unregisterPasteHandler();\n        }\n    });\n};\n","/* globals qq */\n/**\n * Module that handles support for existing forms.\n *\n * @param options Options passed from the integrator-supplied options related to form support.\n * @param startUpload Callback to invoke when files \"stored\" should be uploaded.\n * @param log Proxy for the logger\n * @constructor\n */\nqq.FormSupport = function(options, startUpload, log) {\n    \"use strict\";\n    var self  = this,\n        interceptSubmit = options.interceptSubmit,\n        formEl = options.element,\n        autoUpload = options.autoUpload;\n\n    // Available on the public API associated with this module.\n    qq.extend(this, {\n        // To be used by the caller to determine if the endpoint will be determined by some processing\n        // that occurs in this module, such as if the form has an action attribute.\n        // Ignore if `attachToForm === false`.\n        newEndpoint: null,\n\n        // To be used by the caller to determine if auto uploading should be allowed.\n        // Ignore if `attachToForm === false`.\n        newAutoUpload: autoUpload,\n\n        // true if a form was detected and is being tracked by this module\n        attachedToForm: false,\n\n        // Returns an object with names and values for all valid form elements associated with the attached form.\n        getFormInputsAsObject: function() {\n            /* jshint eqnull:true */\n            if (formEl == null) {\n                return null;\n            }\n\n            return self._form2Obj(formEl);\n        }\n    });\n\n    // If the form contains an action attribute, this should be the new upload endpoint.\n    function determineNewEndpoint(formEl) {\n        if (formEl.getAttribute(\"action\")) {\n            self.newEndpoint = formEl.getAttribute(\"action\");\n        }\n    }\n\n    // Return true only if the form is valid, or if we cannot make this determination.\n    // If the form is invalid, ensure invalid field(s) are highlighted in the UI.\n    function validateForm(formEl, nativeSubmit) {\n        if (formEl.checkValidity && !formEl.checkValidity()) {\n            log(\"Form did not pass validation checks - will not upload.\", \"error\");\n            nativeSubmit();\n        }\n        else {\n            return true;\n        }\n    }\n\n    // Intercept form submit attempts, unless the integrator has told us not to do this.\n    function maybeUploadOnSubmit(formEl) {\n        var nativeSubmit = formEl.submit;\n\n        // Intercept and squelch submit events.\n        qq(formEl).attach(\"submit\", function(event) {\n            event = event || window.event;\n\n            if (event.preventDefault) {\n                event.preventDefault();\n            }\n            else {\n                event.returnValue = false;\n            }\n\n            validateForm(formEl, nativeSubmit) && startUpload();\n        });\n\n        // The form's `submit()` function may be called instead (i.e. via jQuery.submit()).\n        // Intercept that too.\n        formEl.submit = function() {\n            validateForm(formEl, nativeSubmit) && startUpload();\n        };\n    }\n\n    // If the element value passed from the uploader is a string, assume it is an element ID - select it.\n    // The rest of the code in this module depends on this being an HTMLElement.\n    function determineFormEl(formEl) {\n        if (formEl) {\n            if (qq.isString(formEl)) {\n                formEl = document.getElementById(formEl);\n            }\n\n            if (formEl) {\n                log(\"Attaching to form element.\");\n                determineNewEndpoint(formEl);\n                interceptSubmit && maybeUploadOnSubmit(formEl);\n            }\n        }\n\n        return formEl;\n    }\n\n    formEl = determineFormEl(formEl);\n    this.attachedToForm = !!formEl;\n};\n\nqq.extend(qq.FormSupport.prototype, {\n    // Converts all relevant form fields to key/value pairs.  This is meant to mimic the data a browser will\n    // construct from a given form when the form is submitted.\n    _form2Obj: function(form) {\n        \"use strict\";\n        var obj = {},\n            notIrrelevantType = function(type) {\n                var irrelevantTypes = [\n                    \"button\",\n                    \"image\",\n                    \"reset\",\n                    \"submit\"\n                ];\n\n                return qq.indexOf(irrelevantTypes, type.toLowerCase()) < 0;\n            },\n            radioOrCheckbox = function(type) {\n                return qq.indexOf([\"checkbox\", \"radio\"], type.toLowerCase()) >= 0;\n            },\n            ignoreValue = function(el) {\n                if (radioOrCheckbox(el.type) && !el.checked) {\n                    return true;\n                }\n\n                return el.disabled && el.type.toLowerCase() !== \"hidden\";\n            },\n            selectValue = function(select) {\n                var value = null;\n\n                qq.each(qq(select).children(), function(idx, child) {\n                    if (child.tagName.toLowerCase() === \"option\" && child.selected) {\n                        value = child.value;\n                        return false;\n                    }\n                });\n\n                return value;\n            };\n\n        qq.each(form.elements, function(idx, el) {\n            if ((qq.isInput(el, true) || el.tagName.toLowerCase() === \"textarea\") &&\n                notIrrelevantType(el.type) &&\n                !ignoreValue(el)) {\n\n                obj[el.name] = el.value;\n            }\n            else if (el.tagName.toLowerCase() === \"select\" && !ignoreValue(el)) {\n                var value = selectValue(el);\n\n                if (value !== null) {\n                    obj[el.name] = value;\n                }\n            }\n        });\n\n        return obj;\n    }\n});\n","/*globals qq*/\n/**\n * Upload handler used that assumes the current user agent does not have any support for the\n * File API, and, therefore, makes use of iframes and forms to submit the files directly to\n * a generic server.\n *\n * @param options Options passed from the base handler\n * @param proxy Callbacks & methods used to query for or push out data/changes\n */\nqq.traditional = qq.traditional || {};\nqq.traditional.FormUploadHandler = function(options, proxy) {\n    \"use strict\";\n\n    var handler = this,\n        getName = proxy.getName,\n        getUuid = proxy.getUuid,\n        log = proxy.log;\n\n    /**\n     * Returns json object received by iframe from server.\n     */\n    function getIframeContentJson(id, iframe) {\n        /*jshint evil: true*/\n\n        var response, doc, innerHtml;\n\n        //IE may throw an \"access is denied\" error when attempting to access contentDocument on the iframe in some cases\n        try {\n            // iframe.contentWindow.document - for IE<7\n            doc = iframe.contentDocument || iframe.contentWindow.document;\n            innerHtml = doc.body.innerHTML;\n\n            log(\"converting iframe's innerHTML to JSON\");\n            log(\"innerHTML = \" + innerHtml);\n            //plain text response may be wrapped in <pre> tag\n            if (innerHtml && innerHtml.match(/^<pre/i)) {\n                innerHtml = doc.body.firstChild.firstChild.nodeValue;\n            }\n\n            response = handler._parseJsonResponse(innerHtml);\n        }\n        catch (error) {\n            log(\"Error when attempting to parse form upload response (\" + error.message + \")\", \"error\");\n            response = {success: false};\n        }\n\n        return response;\n    }\n\n    /**\n     * Creates form, that will be submitted to iframe\n     */\n    function createForm(id, iframe) {\n        var params = options.paramsStore.get(id),\n            method = options.method.toLowerCase() === \"get\" ? \"GET\" : \"POST\",\n            endpoint = options.endpointStore.get(id),\n            name = getName(id);\n\n        params[options.uuidName] = getUuid(id);\n        params[options.filenameParam] = name;\n\n        return handler._initFormForUpload({\n            method: method,\n            endpoint: endpoint,\n            params: params,\n            paramsInBody: options.paramsInBody,\n            targetName: iframe.name\n        });\n    }\n\n    this.uploadFile = function(id) {\n        var input = handler.getInput(id),\n            iframe = handler._createIframe(id),\n            promise = new qq.Promise(),\n            form;\n\n        form = createForm(id, iframe);\n        form.appendChild(input);\n\n        handler._attachLoadEvent(iframe, function(responseFromMessage) {\n            log(\"iframe loaded\");\n\n            var response = responseFromMessage ? responseFromMessage : getIframeContentJson(id, iframe);\n\n            handler._detachLoadEvent(id);\n\n            //we can't remove an iframe if the iframe doesn't belong to the same domain\n            if (!options.cors.expected) {\n                qq(iframe).remove();\n            }\n\n            if (response.success) {\n                promise.success(response);\n            }\n            else {\n                promise.failure(response);\n            }\n        });\n\n        log(\"Sending upload request for \" + id);\n        form.submit();\n        qq(form).remove();\n\n        return promise;\n    };\n\n    qq.extend(this, new qq.FormUploadHandler({\n        options: {\n            isCors: options.cors.expected,\n            inputName: options.inputName\n        },\n\n        proxy: {\n            onCancel: options.onCancel,\n            getName: getName,\n            getUuid: getUuid,\n            log: log\n        }\n    }));\n};\n","/*globals qq*/\n/**\n * Upload handler used to upload to traditional endpoints.  It depends on File API support, and, therefore,\n * makes use of `XMLHttpRequest` level 2 to upload `File`s and `Blob`s to a generic server.\n *\n * @param spec Options passed from the base handler\n * @param proxy Callbacks & methods used to query for or push out data/changes\n */\nqq.traditional = qq.traditional || {};\nqq.traditional.XhrUploadHandler = function(spec, proxy) {\n    \"use strict\";\n\n    var handler = this,\n        getName = proxy.getName,\n        getSize = proxy.getSize,\n        getUuid = proxy.getUuid,\n        log = proxy.log,\n        multipart = spec.forceMultipart || spec.paramsInBody,\n\n        addChunkingSpecificParams = function(id, params, chunkData) {\n            var size = getSize(id),\n                name = getName(id);\n\n            params[spec.chunking.paramNames.partIndex] = chunkData.part;\n            params[spec.chunking.paramNames.partByteOffset] = chunkData.start;\n            params[spec.chunking.paramNames.chunkSize] = chunkData.size;\n            params[spec.chunking.paramNames.totalParts] = chunkData.count;\n            params[spec.totalFileSizeName] = size;\n\n            /**\n             * When a Blob is sent in a multipart request, the filename value in the content-disposition header is either \"blob\"\n             * or an empty string.  So, we will need to include the actual file name as a param in this case.\n             */\n            if (multipart) {\n                params[spec.filenameParam] = name;\n            }\n        },\n\n        allChunksDoneRequester = new qq.traditional.AllChunksDoneAjaxRequester({\n            cors: spec.cors,\n            endpoint: spec.chunking.success.endpoint,\n            log: log\n        }),\n\n        createReadyStateChangedHandler = function(id, xhr) {\n            var promise = new qq.Promise();\n\n            xhr.onreadystatechange = function() {\n                if (xhr.readyState === 4) {\n                    var result = onUploadOrChunkComplete(id, xhr);\n\n                    if (result.success) {\n                        promise.success(result.response, xhr);\n                    }\n                    else {\n                        promise.failure(result.response, xhr);\n                    }\n                }\n            };\n\n            return promise;\n        },\n\n        getChunksCompleteParams = function(id) {\n            var params = spec.paramsStore.get(id),\n                name = getName(id),\n                size = getSize(id);\n\n            params[spec.uuidName] = getUuid(id);\n            params[spec.filenameParam] = name;\n            params[spec.totalFileSizeName] = size;\n            params[spec.chunking.paramNames.totalParts] = handler._getTotalChunks(id);\n\n            return params;\n        },\n\n        isErrorUploadResponse = function(xhr, response) {\n            return qq.indexOf([200, 201, 202, 203, 204], xhr.status) < 0 ||\n                !response.success ||\n                response.reset;\n        },\n\n        onUploadOrChunkComplete = function(id, xhr) {\n            var response;\n\n            log(\"xhr - server response received for \" + id);\n            log(\"responseText = \" + xhr.responseText);\n\n            response = parseResponse(true, xhr);\n\n            return {\n                success: !isErrorUploadResponse(xhr, response),\n                response: response\n            };\n        },\n\n        // If this is an upload response, we require a JSON payload, otherwise, it is optional.\n        parseResponse = function(upload, xhr) {\n            var response = {};\n\n            try {\n                log(qq.format(\"Received response status {} with body: {}\", xhr.status, xhr.responseText));\n                response = qq.parseJson(xhr.responseText);\n            }\n            catch (error) {\n                upload && log(\"Error when attempting to parse xhr response text (\" + error.message + \")\", \"error\");\n            }\n\n            return response;\n        },\n\n        sendChunksCompleteRequest = function(id) {\n            var promise = new qq.Promise();\n\n            allChunksDoneRequester.complete(\n                    id,\n                    handler._createXhr(id),\n                    getChunksCompleteParams(id),\n                    spec.customHeaders.get(id)\n                )\n                .then(function(xhr) {\n                    promise.success(parseResponse(false, xhr), xhr);\n                }, function(xhr) {\n                    promise.failure(parseResponse(false, xhr), xhr);\n                });\n\n            return promise;\n        },\n\n        setParamsAndGetEntityToSend = function(params, xhr, fileOrBlob, id) {\n            var formData = new FormData(),\n                method = spec.method,\n                endpoint = spec.endpointStore.get(id),\n                name = getName(id),\n                size = getSize(id);\n\n            params[spec.uuidName] = getUuid(id);\n            params[spec.filenameParam] = name;\n\n            if (multipart) {\n                params[spec.totalFileSizeName] = size;\n            }\n\n            //build query string\n            if (!spec.paramsInBody) {\n                if (!multipart) {\n                    params[spec.inputName] = name;\n                }\n                endpoint = qq.obj2url(params, endpoint);\n            }\n\n            xhr.open(method, endpoint, true);\n\n            if (spec.cors.expected && spec.cors.sendCredentials) {\n                xhr.withCredentials = true;\n            }\n\n            if (multipart) {\n                if (spec.paramsInBody) {\n                    qq.obj2FormData(params, formData);\n                }\n\n                formData.append(spec.inputName, fileOrBlob);\n                return formData;\n            }\n\n            return fileOrBlob;\n        },\n\n        setUploadHeaders = function(id, xhr) {\n            var extraHeaders = spec.customHeaders.get(id),\n                fileOrBlob = handler.getFile(id);\n\n            xhr.setRequestHeader(\"Accept\", \"application/json\");\n            xhr.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\n            xhr.setRequestHeader(\"Cache-Control\", \"no-cache\");\n\n            if (!multipart) {\n                xhr.setRequestHeader(\"Content-Type\", \"application/octet-stream\");\n                //NOTE: return mime type in xhr works on chrome 16.0.9 firefox 11.0a2\n                xhr.setRequestHeader(\"X-Mime-Type\", fileOrBlob.type);\n            }\n\n            qq.each(extraHeaders, function(name, val) {\n                xhr.setRequestHeader(name, val);\n            });\n        };\n\n    qq.extend(this, {\n        uploadChunk: function(id, chunkIdx, resuming) {\n            var chunkData = handler._getChunkData(id, chunkIdx),\n                xhr = handler._createXhr(id, chunkIdx),\n                size = getSize(id),\n                promise, toSend, params;\n\n            promise = createReadyStateChangedHandler(id, xhr);\n            handler._registerProgressHandler(id, chunkIdx, chunkData.size);\n            params = spec.paramsStore.get(id);\n            addChunkingSpecificParams(id, params, chunkData);\n\n            if (resuming) {\n                params[spec.resume.paramNames.resuming] = true;\n            }\n\n            toSend = setParamsAndGetEntityToSend(params, xhr, chunkData.blob, id);\n            setUploadHeaders(id, xhr);\n            xhr.send(toSend);\n\n            return promise;\n        },\n\n        uploadFile: function(id) {\n            var fileOrBlob = handler.getFile(id),\n                promise, xhr, params, toSend;\n\n            xhr = handler._createXhr(id);\n            handler._registerProgressHandler(id);\n            promise = createReadyStateChangedHandler(id, xhr);\n            params = spec.paramsStore.get(id);\n            toSend = setParamsAndGetEntityToSend(params, xhr, fileOrBlob, id);\n            setUploadHeaders(id, xhr);\n            xhr.send(toSend);\n\n            return promise;\n        }\n    });\n\n    qq.extend(this, new qq.XhrUploadHandler({\n        options: qq.extend({namespace: \"traditional\"}, spec),\n        proxy: qq.extend({getEndpoint: spec.endpointStore.get}, proxy)\n    }));\n\n    qq.override(this, function(super_) {\n        return {\n            finalizeChunks: function(id) {\n                if (spec.chunking.success.endpoint) {\n                    return sendChunksCompleteRequest(id);\n                }\n                else {\n                    return super_.finalizeChunks(id, qq.bind(parseResponse, this, true));\n                }\n            }\n        };\n    });\n};\n","/*globals qq*/\n/**\n * Ajax requester used to send a POST to a traditional endpoint once all chunks for a specific file have uploaded\n * successfully.\n *\n * @param o Options from the caller - will override the defaults.\n * @constructor\n */\nqq.traditional.AllChunksDoneAjaxRequester = function(o) {\n    \"use strict\";\n\n    var requester,\n        method = \"POST\",\n        options = {\n            cors: {\n                allowXdr: false,\n                expected: false,\n                sendCredentials: false\n            },\n            endpoint: null,\n            log: function(str, level) {}\n        },\n        promises = {},\n        endpointHandler = {\n            get: function(id) {\n                return options.endpoint;\n            }\n        };\n\n    qq.extend(options, o);\n\n    requester = qq.extend(this, new qq.AjaxRequester({\n        acceptHeader: \"application/json\",\n        validMethods: [method],\n        method: method,\n        endpointStore: endpointHandler,\n        allowXRequestedWithAndCacheControl: false,\n        cors: options.cors,\n        log: options.log,\n        onComplete: function(id, xhr, isError) {\n            var promise = promises[id];\n\n            delete promises[id];\n\n            if (isError) {\n                promise.failure(xhr);\n            }\n            else {\n                promise.success(xhr);\n            }\n        }\n    }));\n\n    qq.extend(this, {\n        complete: function(id, xhr, params, headers) {\n            var promise = new qq.Promise();\n\n            options.log(\"Submitting All Chunks Done request for \" + id);\n\n            promises[id] = promise;\n\n            requester.initTransport(id)\n                .withParams(params)\n                .withHeaders(headers)\n                .send(xhr);\n\n            return promise;\n        }\n    });\n};\n","/*globals qq, document, CustomEvent*/\nqq.DragAndDrop = function(o) {\n    \"use strict\";\n\n    var options,\n        HIDE_ZONES_EVENT_NAME = \"qq-hidezones\",\n        HIDE_BEFORE_ENTER_ATTR = \"qq-hide-dropzone\",\n        uploadDropZones = [],\n        droppedFiles = [],\n        disposeSupport = new qq.DisposeSupport();\n\n    options = {\n        dropZoneElements: [],\n        allowMultipleItems: true,\n        classes: {\n            dropActive: null\n        },\n        callbacks: new qq.DragAndDrop.callbacks()\n    };\n\n    qq.extend(options, o, true);\n\n    function uploadDroppedFiles(files, uploadDropZone) {\n        // We need to convert the `FileList` to an actual `Array` to avoid iteration issues\n        var filesAsArray = Array.prototype.slice.call(files);\n\n        options.callbacks.dropLog(\"Grabbed \" + files.length + \" dropped files.\");\n        uploadDropZone.dropDisabled(false);\n        options.callbacks.processingDroppedFilesComplete(filesAsArray, uploadDropZone.getElement());\n    }\n\n    function traverseFileTree(entry) {\n        var parseEntryPromise = new qq.Promise();\n\n        if (entry.isFile) {\n            entry.file(function(file) {\n                var name = entry.name,\n                    fullPath = entry.fullPath,\n                    indexOfNameInFullPath = fullPath.indexOf(name);\n\n                // remove file name from full path string\n                fullPath = fullPath.substr(0, indexOfNameInFullPath);\n\n                // remove leading slash in full path string\n                if (fullPath.charAt(0) === \"/\") {\n                    fullPath = fullPath.substr(1);\n                }\n\n                file.qqPath = fullPath;\n                droppedFiles.push(file);\n                parseEntryPromise.success();\n            },\n            function(fileError) {\n                options.callbacks.dropLog(\"Problem parsing '\" + entry.fullPath + \"'.  FileError code \" + fileError.code + \".\", \"error\");\n                parseEntryPromise.failure();\n            });\n        }\n        else if (entry.isDirectory) {\n            getFilesInDirectory(entry).then(\n                function allEntriesRead(entries) {\n                    var entriesLeft = entries.length;\n\n                    qq.each(entries, function(idx, entry) {\n                        traverseFileTree(entry).done(function() {\n                            entriesLeft -= 1;\n\n                            if (entriesLeft === 0) {\n                                parseEntryPromise.success();\n                            }\n                        });\n                    });\n\n                    if (!entries.length) {\n                        parseEntryPromise.success();\n                    }\n                },\n\n                function readFailure(fileError) {\n                    options.callbacks.dropLog(\"Problem parsing '\" + entry.fullPath + \"'.  FileError code \" + fileError.code + \".\", \"error\");\n                    parseEntryPromise.failure();\n                }\n            );\n        }\n\n        return parseEntryPromise;\n    }\n\n    // Promissory.  Guaranteed to read all files in the root of the passed directory.\n    function getFilesInDirectory(entry, reader, accumEntries, existingPromise) {\n        var promise = existingPromise || new qq.Promise(),\n            dirReader = reader || entry.createReader();\n\n        dirReader.readEntries(\n            function readSuccess(entries) {\n                var newEntries = accumEntries ? accumEntries.concat(entries) : entries;\n\n                if (entries.length) {\n                    setTimeout(function() { // prevent stack overflow, however unlikely\n                        getFilesInDirectory(entry, dirReader, newEntries, promise);\n                    }, 0);\n                }\n                else {\n                    promise.success(newEntries);\n                }\n            },\n\n            promise.failure\n        );\n\n        return promise;\n    }\n\n    function handleDataTransfer(dataTransfer, uploadDropZone) {\n        var pendingFolderPromises = [],\n            handleDataTransferPromise = new qq.Promise();\n\n        options.callbacks.processingDroppedFiles();\n        uploadDropZone.dropDisabled(true);\n\n        if (dataTransfer.files.length > 1 && !options.allowMultipleItems) {\n            options.callbacks.processingDroppedFilesComplete([]);\n            options.callbacks.dropError(\"tooManyFilesError\", \"\");\n            uploadDropZone.dropDisabled(false);\n            handleDataTransferPromise.failure();\n        }\n        else {\n            droppedFiles = [];\n\n            if (qq.isFolderDropSupported(dataTransfer)) {\n                qq.each(dataTransfer.items, function(idx, item) {\n                    var entry = item.webkitGetAsEntry();\n\n                    if (entry) {\n                        //due to a bug in Chrome's File System API impl - #149735\n                        if (entry.isFile) {\n                            droppedFiles.push(item.getAsFile());\n                        }\n\n                        else {\n                            pendingFolderPromises.push(traverseFileTree(entry).done(function() {\n                                pendingFolderPromises.pop();\n                                if (pendingFolderPromises.length === 0) {\n                                    handleDataTransferPromise.success();\n                                }\n                            }));\n                        }\n                    }\n                });\n            }\n            else {\n                droppedFiles = dataTransfer.files;\n            }\n\n            if (pendingFolderPromises.length === 0) {\n                handleDataTransferPromise.success();\n            }\n        }\n\n        return handleDataTransferPromise;\n    }\n\n    function setupDropzone(dropArea) {\n        var dropZone = new qq.UploadDropZone({\n            HIDE_ZONES_EVENT_NAME: HIDE_ZONES_EVENT_NAME,\n            element: dropArea,\n            onEnter: function(e) {\n                qq(dropArea).addClass(options.classes.dropActive);\n                e.stopPropagation();\n            },\n            onLeaveNotDescendants: function(e) {\n                qq(dropArea).removeClass(options.classes.dropActive);\n            },\n            onDrop: function(e) {\n                handleDataTransfer(e.dataTransfer, dropZone).then(\n                    function() {\n                        uploadDroppedFiles(droppedFiles, dropZone);\n                    },\n                    function() {\n                        options.callbacks.dropLog(\"Drop event DataTransfer parsing failed.  No files will be uploaded.\", \"error\");\n                    }\n                );\n            }\n        });\n\n        disposeSupport.addDisposer(function() {\n            dropZone.dispose();\n        });\n\n        qq(dropArea).hasAttribute(HIDE_BEFORE_ENTER_ATTR) && qq(dropArea).hide();\n\n        uploadDropZones.push(dropZone);\n\n        return dropZone;\n    }\n\n    function isFileDrag(dragEvent) {\n        var fileDrag;\n\n        qq.each(dragEvent.dataTransfer.types, function(key, val) {\n            if (val === \"Files\") {\n                fileDrag = true;\n                return false;\n            }\n        });\n\n        return fileDrag;\n    }\n\n    // Attempt to determine when the file has left the document.  It is not always possible to detect this\n    // in all cases, but it is generally possible in all browsers, with a few exceptions.\n    //\n    // Exceptions:\n    // * IE10+ & Safari: We can't detect a file leaving the document if the Explorer window housing the file\n    //                   overlays the browser window.\n    // * IE10+: If the file is dragged out of the window too quickly, IE does not set the expected values of the\n    //          event's X & Y properties.\n    function leavingDocumentOut(e) {\n        if (qq.firefox()) {\n            return !e.relatedTarget;\n        }\n\n        if (qq.safari()) {\n            return e.x < 0 || e.y < 0;\n        }\n\n        return e.x === 0 && e.y === 0;\n    }\n\n    function setupDragDrop() {\n        var dropZones = options.dropZoneElements,\n\n            maybeHideDropZones = function() {\n                setTimeout(function() {\n                    qq.each(dropZones, function(idx, dropZone) {\n                        qq(dropZone).hasAttribute(HIDE_BEFORE_ENTER_ATTR) && qq(dropZone).hide();\n                        qq(dropZone).removeClass(options.classes.dropActive);\n                    });\n                }, 10);\n            };\n\n        qq.each(dropZones, function(idx, dropZone) {\n            var uploadDropZone = setupDropzone(dropZone);\n\n            // IE <= 9 does not support the File API used for drag+drop uploads\n            if (dropZones.length && qq.supportedFeatures.fileDrop) {\n                disposeSupport.attach(document, \"dragenter\", function(e) {\n                    if (!uploadDropZone.dropDisabled() && isFileDrag(e)) {\n                        qq.each(dropZones, function(idx, dropZone) {\n                            // We can't apply styles to non-HTMLElements, since they lack the `style` property.\n                            // Also, if the drop zone isn't initially hidden, let's not mess with `style.display`.\n                            if (dropZone instanceof HTMLElement &&\n                                qq(dropZone).hasAttribute(HIDE_BEFORE_ENTER_ATTR)) {\n\n                                qq(dropZone).css({display: \"block\"});\n                            }\n                        });\n                    }\n                });\n            }\n        });\n\n        disposeSupport.attach(document, \"dragleave\", function(e) {\n            if (leavingDocumentOut(e)) {\n                maybeHideDropZones();\n            }\n        });\n\n        // Just in case we were not able to detect when a dragged file has left the document,\n        // hide all relevant drop zones the next time the mouse enters the document.\n        // Note that mouse events such as this one are not fired during drag operations.\n        disposeSupport.attach(qq(document).children()[0], \"mouseenter\", function(e) {\n            maybeHideDropZones();\n        });\n\n        disposeSupport.attach(document, \"drop\", function(e) {\n            e.preventDefault();\n            maybeHideDropZones();\n        });\n\n        disposeSupport.attach(document, HIDE_ZONES_EVENT_NAME, maybeHideDropZones);\n    }\n\n    setupDragDrop();\n\n    qq.extend(this, {\n        setupExtraDropzone: function(element) {\n            options.dropZoneElements.push(element);\n            setupDropzone(element);\n        },\n\n        removeDropzone: function(element) {\n            var i,\n                dzs = options.dropZoneElements;\n\n            for (i in dzs) {\n                if (dzs[i] === element) {\n                    return dzs.splice(i, 1);\n                }\n            }\n        },\n\n        dispose: function() {\n            disposeSupport.dispose();\n            qq.each(uploadDropZones, function(idx, dropZone) {\n                dropZone.dispose();\n            });\n        }\n    });\n};\n\nqq.DragAndDrop.callbacks = function() {\n    \"use strict\";\n\n    return {\n        processingDroppedFiles: function() {},\n        processingDroppedFilesComplete: function(files, targetEl) {},\n        dropError: function(code, errorSpecifics) {\n            qq.log(\"Drag & drop error code '\" + code + \" with these specifics: '\" + errorSpecifics + \"'\", \"error\");\n        },\n        dropLog: function(message, level) {\n            qq.log(message, level);\n        }\n    };\n};\n\nqq.UploadDropZone = function(o) {\n    \"use strict\";\n\n    var disposeSupport = new qq.DisposeSupport(),\n        options, element, preventDrop, dropOutsideDisabled;\n\n    options = {\n        element: null,\n        onEnter: function(e) {},\n        onLeave: function(e) {},\n        // is not fired when leaving element by hovering descendants\n        onLeaveNotDescendants: function(e) {},\n        onDrop: function(e) {}\n    };\n\n    qq.extend(options, o);\n    element = options.element;\n\n    function dragoverShouldBeCanceled() {\n        return qq.safari() || (qq.firefox() && qq.windows());\n    }\n\n    function disableDropOutside(e) {\n        // run only once for all instances\n        if (!dropOutsideDisabled) {\n\n            // for these cases we need to catch onDrop to reset dropArea\n            if (dragoverShouldBeCanceled) {\n                disposeSupport.attach(document, \"dragover\", function(e) {\n                    e.preventDefault();\n                });\n            } else {\n                disposeSupport.attach(document, \"dragover\", function(e) {\n                    if (e.dataTransfer) {\n                        e.dataTransfer.dropEffect = \"none\";\n                        e.preventDefault();\n                    }\n                });\n            }\n\n            dropOutsideDisabled = true;\n        }\n    }\n\n    function isValidFileDrag(e) {\n        // e.dataTransfer currently causing IE errors\n        // IE9 does NOT support file API, so drag-and-drop is not possible\n        if (!qq.supportedFeatures.fileDrop) {\n            return false;\n        }\n\n        var effectTest, dt = e.dataTransfer,\n        // do not check dt.types.contains in webkit, because it crashes safari 4\n        isSafari = qq.safari();\n\n        // dt.effectAllowed is none in Safari 5\n        // dt.types.contains check is for firefox\n\n        // dt.effectAllowed crashes IE 11 & 10 when files have been dragged from\n        // the filesystem\n        effectTest = qq.ie() && qq.supportedFeatures.fileDrop ? true : dt.effectAllowed !== \"none\";\n        return dt && effectTest && (dt.files || (!isSafari && dt.types.contains && dt.types.contains(\"Files\")));\n    }\n\n    function isOrSetDropDisabled(isDisabled) {\n        if (isDisabled !== undefined) {\n            preventDrop = isDisabled;\n        }\n        return preventDrop;\n    }\n\n    function triggerHidezonesEvent() {\n        var hideZonesEvent;\n\n        function triggerUsingOldApi() {\n            hideZonesEvent = document.createEvent(\"Event\");\n            hideZonesEvent.initEvent(options.HIDE_ZONES_EVENT_NAME, true, true);\n        }\n\n        if (window.CustomEvent) {\n            try {\n                hideZonesEvent = new CustomEvent(options.HIDE_ZONES_EVENT_NAME);\n            }\n            catch (err) {\n                triggerUsingOldApi();\n            }\n        }\n        else {\n            triggerUsingOldApi();\n        }\n\n        document.dispatchEvent(hideZonesEvent);\n    }\n\n    function attachEvents() {\n        disposeSupport.attach(element, \"dragover\", function(e) {\n            if (!isValidFileDrag(e)) {\n                return;\n            }\n\n            // dt.effectAllowed crashes IE 11 & 10 when files have been dragged from\n            // the filesystem\n            var effect = qq.ie() && qq.supportedFeatures.fileDrop ? null : e.dataTransfer.effectAllowed;\n            if (effect === \"move\" || effect === \"linkMove\") {\n                e.dataTransfer.dropEffect = \"move\"; // for FF (only move allowed)\n            } else {\n                e.dataTransfer.dropEffect = \"copy\"; // for Chrome\n            }\n\n            e.stopPropagation();\n            e.preventDefault();\n        });\n\n        disposeSupport.attach(element, \"dragenter\", function(e) {\n            if (!isOrSetDropDisabled()) {\n                if (!isValidFileDrag(e)) {\n                    return;\n                }\n                options.onEnter(e);\n            }\n        });\n\n        disposeSupport.attach(element, \"dragleave\", function(e) {\n            if (!isValidFileDrag(e)) {\n                return;\n            }\n\n            options.onLeave(e);\n\n            var relatedTarget = document.elementFromPoint(e.clientX, e.clientY);\n            // do not fire when moving a mouse over a descendant\n            if (qq(this).contains(relatedTarget)) {\n                return;\n            }\n\n            options.onLeaveNotDescendants(e);\n        });\n\n        disposeSupport.attach(element, \"drop\", function(e) {\n            if (!isOrSetDropDisabled()) {\n                if (!isValidFileDrag(e)) {\n                    return;\n                }\n\n                e.preventDefault();\n                e.stopPropagation();\n                options.onDrop(e);\n\n                triggerHidezonesEvent();\n            }\n        });\n    }\n\n    disableDropOutside();\n    attachEvents();\n\n    qq.extend(this, {\n        dropDisabled: function(isDisabled) {\n            return isOrSetDropDisabled(isDisabled);\n        },\n\n        dispose: function() {\n            disposeSupport.dispose();\n        },\n\n        getElement: function() {\n            return element;\n        }\n    });\n};\n","/*globals qq */\n/**\n * Defines the public API for FineUploader mode.\n */\n(function() {\n    \"use strict\";\n\n    qq.uiPublicApi = {\n        addInitialFiles: function(cannedFileList) {\n            this._parent.prototype.addInitialFiles.apply(this, arguments);\n            this._templating.addCacheToDom();\n        },\n\n        clearStoredFiles: function() {\n            this._parent.prototype.clearStoredFiles.apply(this, arguments);\n            this._templating.clearFiles();\n        },\n\n        addExtraDropzone: function(element) {\n            this._dnd && this._dnd.setupExtraDropzone(element);\n        },\n\n        removeExtraDropzone: function(element) {\n            if (this._dnd) {\n                return this._dnd.removeDropzone(element);\n            }\n        },\n\n        getItemByFileId: function(id) {\n            if (!this._templating.isHiddenForever(id)) {\n                return this._templating.getFileContainer(id);\n            }\n        },\n\n        reset: function() {\n            this._parent.prototype.reset.apply(this, arguments);\n            this._templating.reset();\n\n            if (!this._options.button && this._templating.getButton()) {\n                this._defaultButtonId = this._createUploadButton({\n                    element: this._templating.getButton(),\n                    title: this._options.text.fileInputTitle\n                }).getButtonId();\n            }\n\n            if (this._dnd) {\n                this._dnd.dispose();\n                this._dnd = this._setupDragAndDrop();\n            }\n\n            this._totalFilesInBatch = 0;\n            this._filesInBatchAddedToUi = 0;\n\n            this._setupClickAndEditEventHandlers();\n        },\n\n        setName: function(id, newName) {\n            var formattedFilename = this._options.formatFileName(newName);\n\n            this._parent.prototype.setName.apply(this, arguments);\n            this._templating.updateFilename(id, formattedFilename);\n        },\n\n        pauseUpload: function(id) {\n            var paused = this._parent.prototype.pauseUpload.apply(this, arguments);\n\n            paused && this._templating.uploadPaused(id);\n            return paused;\n        },\n\n        continueUpload: function(id) {\n            var continued = this._parent.prototype.continueUpload.apply(this, arguments);\n\n            continued && this._templating.uploadContinued(id);\n            return continued;\n        },\n\n        getId: function(fileContainerOrChildEl) {\n            return this._templating.getFileId(fileContainerOrChildEl);\n        },\n\n        getDropTarget: function(fileId) {\n            var file = this.getFile(fileId);\n\n            return file.qqDropTarget;\n        }\n    };\n\n    /**\n     * Defines the private (internal) API for FineUploader mode.\n     */\n    qq.uiPrivateApi = {\n        _getButton: function(buttonId) {\n            var button = this._parent.prototype._getButton.apply(this, arguments);\n\n            if (!button) {\n                if (buttonId === this._defaultButtonId) {\n                    button = this._templating.getButton();\n                }\n            }\n\n            return button;\n        },\n\n        _removeFileItem: function(fileId) {\n            this._templating.removeFile(fileId);\n        },\n\n        _setupClickAndEditEventHandlers: function() {\n            this._fileButtonsClickHandler = qq.FileButtonsClickHandler && this._bindFileButtonsClickEvent();\n\n            // A better approach would be to check specifically for focusin event support by querying the DOM API,\n            // but the DOMFocusIn event is not exposed as a property, so we have to resort to UA string sniffing.\n            this._focusinEventSupported = !qq.firefox();\n\n            if (this._isEditFilenameEnabled())\n            {\n                this._filenameClickHandler = this._bindFilenameClickEvent();\n                this._filenameInputFocusInHandler = this._bindFilenameInputFocusInEvent();\n                this._filenameInputFocusHandler = this._bindFilenameInputFocusEvent();\n            }\n        },\n\n        _setupDragAndDrop: function() {\n            var self = this,\n                dropZoneElements = this._options.dragAndDrop.extraDropzones,\n                templating = this._templating,\n                defaultDropZone = templating.getDropZone();\n\n            defaultDropZone && dropZoneElements.push(defaultDropZone);\n\n            return new qq.DragAndDrop({\n                dropZoneElements: dropZoneElements,\n                allowMultipleItems: this._options.multiple,\n                classes: {\n                    dropActive: this._options.classes.dropActive\n                },\n                callbacks: {\n                    processingDroppedFiles: function() {\n                        templating.showDropProcessing();\n                    },\n                    processingDroppedFilesComplete: function(files, targetEl) {\n                        templating.hideDropProcessing();\n\n                        qq.each(files, function(idx, file) {\n                            file.qqDropTarget = targetEl;\n                        });\n\n                        if (files.length) {\n                            self.addFiles(files, null, null);\n                        }\n                    },\n                    dropError: function(code, errorData) {\n                        self._itemError(code, errorData);\n                    },\n                    dropLog: function(message, level) {\n                        self.log(message, level);\n                    }\n                }\n            });\n        },\n\n        _bindFileButtonsClickEvent: function() {\n            var self = this;\n\n            return new qq.FileButtonsClickHandler({\n                templating: this._templating,\n\n                log: function(message, lvl) {\n                    self.log(message, lvl);\n                },\n\n                onDeleteFile: function(fileId) {\n                    self.deleteFile(fileId);\n                },\n\n                onCancel: function(fileId) {\n                    self.cancel(fileId);\n                },\n\n                onRetry: function(fileId) {\n                    self.retry(fileId);\n                },\n\n                onPause: function(fileId) {\n                    self.pauseUpload(fileId);\n                },\n\n                onContinue: function(fileId) {\n                    self.continueUpload(fileId);\n                },\n\n                onGetName: function(fileId) {\n                    return self.getName(fileId);\n                }\n            });\n        },\n\n        _isEditFilenameEnabled: function() {\n            /*jshint -W014 */\n            return this._templating.isEditFilenamePossible()\n                && !this._options.autoUpload\n                && qq.FilenameClickHandler\n                && qq.FilenameInputFocusHandler\n                && qq.FilenameInputFocusHandler;\n        },\n\n        _filenameEditHandler: function() {\n            var self = this,\n                templating = this._templating;\n\n            return {\n                templating: templating,\n                log: function(message, lvl) {\n                    self.log(message, lvl);\n                },\n                onGetUploadStatus: function(fileId) {\n                    return self.getUploads({id: fileId}).status;\n                },\n                onGetName: function(fileId) {\n                    return self.getName(fileId);\n                },\n                onSetName: function(id, newName) {\n                    self.setName(id, newName);\n                },\n                onEditingStatusChange: function(id, isEditing) {\n                    var qqInput = qq(templating.getEditInput(id)),\n                        qqFileContainer = qq(templating.getFileContainer(id));\n\n                    if (isEditing) {\n                        qqInput.addClass(\"qq-editing\");\n                        templating.hideFilename(id);\n                        templating.hideEditIcon(id);\n                    }\n                    else {\n                        qqInput.removeClass(\"qq-editing\");\n                        templating.showFilename(id);\n                        templating.showEditIcon(id);\n                    }\n\n                    // Force IE8 and older to repaint\n                    qqFileContainer.addClass(\"qq-temp\").removeClass(\"qq-temp\");\n                }\n            };\n        },\n\n        _onUploadStatusChange: function(id, oldStatus, newStatus) {\n            this._parent.prototype._onUploadStatusChange.apply(this, arguments);\n\n            if (this._isEditFilenameEnabled()) {\n                // Status for a file exists before it has been added to the DOM, so we must be careful here.\n                if (this._templating.getFileContainer(id) && newStatus !== qq.status.SUBMITTED) {\n                    this._templating.markFilenameEditable(id);\n                    this._templating.hideEditIcon(id);\n                }\n            }\n\n            if (oldStatus === qq.status.UPLOAD_RETRYING && newStatus === qq.status.UPLOADING) {\n                this._templating.hideRetry(id);\n                this._templating.setStatusText(id);\n                qq(this._templating.getFileContainer(id)).removeClass(this._classes.retrying);\n            }\n            else if (newStatus === qq.status.UPLOAD_FAILED) {\n                this._templating.hidePause(id);\n            }\n        },\n\n        _bindFilenameInputFocusInEvent: function() {\n            var spec = qq.extend({}, this._filenameEditHandler());\n\n            return new qq.FilenameInputFocusInHandler(spec);\n        },\n\n        _bindFilenameInputFocusEvent: function() {\n            var spec = qq.extend({}, this._filenameEditHandler());\n\n            return new qq.FilenameInputFocusHandler(spec);\n        },\n\n        _bindFilenameClickEvent: function() {\n            var spec = qq.extend({}, this._filenameEditHandler());\n\n            return new qq.FilenameClickHandler(spec);\n        },\n\n        _storeForLater: function(id) {\n            this._parent.prototype._storeForLater.apply(this, arguments);\n            this._templating.hideSpinner(id);\n        },\n\n        _onAllComplete: function(successful, failed) {\n            this._parent.prototype._onAllComplete.apply(this, arguments);\n            this._templating.resetTotalProgress();\n        },\n\n        _onSubmit: function(id, name) {\n            var file = this.getFile(id);\n\n            if (file && file.qqPath && this._options.dragAndDrop.reportDirectoryPaths) {\n                this._paramsStore.addReadOnly(id, {\n                    qqpath: file.qqPath\n                });\n            }\n\n            this._parent.prototype._onSubmit.apply(this, arguments);\n            this._addToList(id, name);\n        },\n\n        // The file item has been added to the DOM.\n        _onSubmitted: function(id) {\n            // If the edit filename feature is enabled, mark the filename element as \"editable\" and the associated edit icon\n            if (this._isEditFilenameEnabled()) {\n                this._templating.markFilenameEditable(id);\n                this._templating.showEditIcon(id);\n\n                // If the focusin event is not supported, we must add a focus handler to the newly create edit filename text input\n                if (!this._focusinEventSupported) {\n                    this._filenameInputFocusHandler.addHandler(this._templating.getEditInput(id));\n                }\n            }\n        },\n\n        // Update the progress bar & percentage as the file is uploaded\n        _onProgress: function(id, name, loaded, total) {\n            this._parent.prototype._onProgress.apply(this, arguments);\n\n            this._templating.updateProgress(id, loaded, total);\n\n            if (total === 0 || Math.round(loaded / total * 100) === 100) {\n                this._templating.hideCancel(id);\n                this._templating.hidePause(id);\n                this._templating.hideProgress(id);\n                this._templating.setStatusText(id, this._options.text.waitingForResponse);\n\n                // If ~last byte was sent, display total file size\n                this._displayFileSize(id);\n            }\n            else {\n                // If still uploading, display percentage - total size is actually the total request(s) size\n                this._displayFileSize(id, loaded, total);\n            }\n        },\n\n        _onTotalProgress: function(loaded, total) {\n            this._parent.prototype._onTotalProgress.apply(this, arguments);\n            this._templating.updateTotalProgress(loaded, total);\n        },\n\n        _onComplete: function(id, name, result, xhr) {\n            var parentRetVal = this._parent.prototype._onComplete.apply(this, arguments),\n                templating = this._templating,\n                fileContainer = templating.getFileContainer(id),\n                self = this;\n\n            function completeUpload(result) {\n                // If this file is not represented in the templating module, perhaps it was hidden intentionally.\n                // If so, don't perform any UI-related tasks related to this file.\n                if (!fileContainer) {\n                    return;\n                }\n\n                templating.setStatusText(id);\n\n                qq(fileContainer).removeClass(self._classes.retrying);\n                templating.hideProgress(id);\n\n                if (self.getUploads({id: id}).status !== qq.status.UPLOAD_FAILED) {\n                    templating.hideCancel(id);\n                }\n                templating.hideSpinner(id);\n\n                if (result.success) {\n                    self._markFileAsSuccessful(id);\n                }\n                else {\n                    qq(fileContainer).addClass(self._classes.fail);\n                    templating.showCancel(id);\n\n                    if (templating.isRetryPossible() && !self._preventRetries[id]) {\n                        qq(fileContainer).addClass(self._classes.retryable);\n                        templating.showRetry(id);\n                    }\n                    self._controlFailureTextDisplay(id, result);\n                }\n            }\n\n            // The parent may need to perform some async operation before we can accurately determine the status of the upload.\n            if (parentRetVal instanceof qq.Promise) {\n                parentRetVal.done(function(newResult) {\n                    completeUpload(newResult);\n                });\n\n            }\n            else {\n                completeUpload(result);\n            }\n\n            return parentRetVal;\n        },\n\n        _markFileAsSuccessful: function(id) {\n            var templating = this._templating;\n\n            if (this._isDeletePossible()) {\n                templating.showDeleteButton(id);\n            }\n\n            qq(templating.getFileContainer(id)).addClass(this._classes.success);\n\n            this._maybeUpdateThumbnail(id);\n        },\n\n        _onUploadPrep: function(id) {\n            this._parent.prototype._onUploadPrep.apply(this, arguments);\n            this._templating.showSpinner(id);\n        },\n\n        _onUpload: function(id, name) {\n            var parentRetVal = this._parent.prototype._onUpload.apply(this, arguments);\n\n            this._templating.showSpinner(id);\n\n            return parentRetVal;\n        },\n\n        _onUploadChunk: function(id, chunkData) {\n            this._parent.prototype._onUploadChunk.apply(this, arguments);\n\n            // Only display the pause button if we have finished uploading at least one chunk\n            // & this file can be resumed\n            if (chunkData.partIndex > 0 && this._handler.isResumable(id)) {\n                this._templating.allowPause(id);\n            }\n        },\n\n        _onCancel: function(id, name) {\n            this._parent.prototype._onCancel.apply(this, arguments);\n            this._removeFileItem(id);\n\n            if (this._getNotFinished() === 0) {\n                this._templating.resetTotalProgress();\n            }\n        },\n\n        _onBeforeAutoRetry: function(id) {\n            var retryNumForDisplay, maxAuto, retryNote;\n\n            this._parent.prototype._onBeforeAutoRetry.apply(this, arguments);\n\n            this._showCancelLink(id);\n\n            if (this._options.retry.showAutoRetryNote) {\n                retryNumForDisplay = this._autoRetries[id];\n                maxAuto = this._options.retry.maxAutoAttempts;\n\n                retryNote = this._options.retry.autoRetryNote.replace(/\\{retryNum\\}/g, retryNumForDisplay);\n                retryNote = retryNote.replace(/\\{maxAuto\\}/g, maxAuto);\n\n                this._templating.setStatusText(id, retryNote);\n                qq(this._templating.getFileContainer(id)).addClass(this._classes.retrying);\n            }\n        },\n\n        //return false if we should not attempt the requested retry\n        _onBeforeManualRetry: function(id) {\n            if (this._parent.prototype._onBeforeManualRetry.apply(this, arguments)) {\n                this._templating.resetProgress(id);\n                qq(this._templating.getFileContainer(id)).removeClass(this._classes.fail);\n                this._templating.setStatusText(id);\n                this._templating.showSpinner(id);\n                this._showCancelLink(id);\n                return true;\n            }\n            else {\n                qq(this._templating.getFileContainer(id)).addClass(this._classes.retryable);\n                this._templating.showRetry(id);\n                return false;\n            }\n        },\n\n        _onSubmitDelete: function(id) {\n            var onSuccessCallback = qq.bind(this._onSubmitDeleteSuccess, this);\n\n            this._parent.prototype._onSubmitDelete.call(this, id, onSuccessCallback);\n        },\n\n        _onSubmitDeleteSuccess: function(id, uuid, additionalMandatedParams) {\n            if (this._options.deleteFile.forceConfirm) {\n                this._showDeleteConfirm.apply(this, arguments);\n            }\n            else {\n                this._sendDeleteRequest.apply(this, arguments);\n            }\n        },\n\n        _onDeleteComplete: function(id, xhr, isError) {\n            this._parent.prototype._onDeleteComplete.apply(this, arguments);\n\n            this._templating.hideSpinner(id);\n\n            if (isError) {\n                this._templating.setStatusText(id, this._options.deleteFile.deletingFailedText);\n                this._templating.showDeleteButton(id);\n            }\n            else {\n                this._removeFileItem(id);\n            }\n        },\n\n        _sendDeleteRequest: function(id, uuid, additionalMandatedParams) {\n            this._templating.hideDeleteButton(id);\n            this._templating.showSpinner(id);\n            this._templating.setStatusText(id, this._options.deleteFile.deletingStatusText);\n            this._deleteHandler.sendDelete.apply(this, arguments);\n        },\n\n        _showDeleteConfirm: function(id, uuid, mandatedParams) {\n            /*jshint -W004 */\n            var fileName = this.getName(id),\n                confirmMessage = this._options.deleteFile.confirmMessage.replace(/\\{filename\\}/g, fileName),\n                uuid = this.getUuid(id),\n                deleteRequestArgs = arguments,\n                self = this,\n                retVal;\n\n            retVal = this._options.showConfirm(confirmMessage);\n\n            if (qq.isGenericPromise(retVal)) {\n                retVal.then(function() {\n                    self._sendDeleteRequest.apply(self, deleteRequestArgs);\n                });\n            }\n            else if (retVal !== false) {\n                self._sendDeleteRequest.apply(self, deleteRequestArgs);\n            }\n        },\n\n        _addToList: function(id, name, canned) {\n            var prependData,\n                prependIndex = 0,\n                dontDisplay = this._handler.isProxied(id) && this._options.scaling.hideScaled,\n                record;\n\n            if (this._options.display.prependFiles) {\n                if (this._totalFilesInBatch > 1 && this._filesInBatchAddedToUi > 0) {\n                    prependIndex = this._filesInBatchAddedToUi - 1;\n                }\n\n                prependData = {\n                    index: prependIndex\n                };\n            }\n\n            if (!canned) {\n                if (this._options.disableCancelForFormUploads && !qq.supportedFeatures.ajaxUploading) {\n                    this._templating.disableCancel();\n                }\n\n                // Cancel all existing (previous) files and clear the list if this file is not part of\n                // a scaled file group that has already been accepted, or if this file is not part of\n                // a scaled file group at all.\n                if (!this._options.multiple) {\n                    record = this.getUploads({id: id});\n\n                    this._handledProxyGroup = this._handledProxyGroup || record.proxyGroupId;\n\n                    if (record.proxyGroupId !== this._handledProxyGroup || !record.proxyGroupId) {\n                        this._handler.cancelAll();\n                        this._clearList();\n                        this._handledProxyGroup = null;\n                    }\n                }\n            }\n\n            if (canned) {\n                this._templating.addFileToCache(id, this._options.formatFileName(name), prependData, dontDisplay);\n                this._templating.updateThumbnail(id, this._thumbnailUrls[id], true, this._options.thumbnails.customResizer);\n            }\n            else {\n                this._templating.addFile(id, this._options.formatFileName(name), prependData, dontDisplay);\n                this._templating.generatePreview(id, this.getFile(id), this._options.thumbnails.customResizer);\n            }\n\n            this._filesInBatchAddedToUi += 1;\n\n            if (canned ||\n                (this._options.display.fileSizeOnSubmit && qq.supportedFeatures.ajaxUploading)) {\n\n                this._displayFileSize(id);\n            }\n        },\n\n        _clearList: function() {\n            this._templating.clearFiles();\n            this.clearStoredFiles();\n        },\n\n        _displayFileSize: function(id, loadedSize, totalSize) {\n            var size = this.getSize(id),\n                sizeForDisplay = this._formatSize(size);\n\n            if (size >= 0) {\n                if (loadedSize !== undefined && totalSize !== undefined) {\n                    sizeForDisplay = this._formatProgress(loadedSize, totalSize);\n                }\n\n                this._templating.updateSize(id, sizeForDisplay);\n            }\n        },\n\n        _formatProgress: function(uploadedSize, totalSize) {\n            var message = this._options.text.formatProgress;\n            function r(name, replacement) { message = message.replace(name, replacement); }\n\n            r(\"{percent}\", Math.round(uploadedSize / totalSize * 100));\n            r(\"{total_size}\", this._formatSize(totalSize));\n            return message;\n        },\n\n        _controlFailureTextDisplay: function(id, response) {\n            var mode, responseProperty, failureReason;\n\n            mode = this._options.failedUploadTextDisplay.mode;\n            responseProperty = this._options.failedUploadTextDisplay.responseProperty;\n\n            if (mode === \"custom\") {\n                failureReason = response[responseProperty];\n                if (!failureReason) {\n                    failureReason = this._options.text.failUpload;\n                }\n\n                this._templating.setStatusText(id, failureReason);\n\n                if (this._options.failedUploadTextDisplay.enableTooltip) {\n                    this._showTooltip(id, failureReason);\n                }\n            }\n            else if (mode === \"default\") {\n                this._templating.setStatusText(id, this._options.text.failUpload);\n            }\n            else if (mode !== \"none\") {\n                this.log(\"failedUploadTextDisplay.mode value of '\" + mode + \"' is not valid\", \"warn\");\n            }\n        },\n\n        _showTooltip: function(id, text) {\n            this._templating.getFileContainer(id).title = text;\n        },\n\n        _showCancelLink: function(id) {\n            if (!this._options.disableCancelForFormUploads || qq.supportedFeatures.ajaxUploading) {\n                this._templating.showCancel(id);\n            }\n        },\n\n        _itemError: function(code, name, item) {\n            var message = this._parent.prototype._itemError.apply(this, arguments);\n            this._options.showMessage(message);\n        },\n\n        _batchError: function(message) {\n            this._parent.prototype._batchError.apply(this, arguments);\n            this._options.showMessage(message);\n        },\n\n        _setupPastePrompt: function() {\n            var self = this;\n\n            this._options.callbacks.onPasteReceived = function() {\n                var message = self._options.paste.namePromptMessage,\n                    defaultVal = self._options.paste.defaultName;\n\n                return self._options.showPrompt(message, defaultVal);\n            };\n        },\n\n        _fileOrBlobRejected: function(id, name) {\n            this._totalFilesInBatch -= 1;\n            this._parent.prototype._fileOrBlobRejected.apply(this, arguments);\n        },\n\n        _prepareItemsForUpload: function(items, params, endpoint) {\n            this._totalFilesInBatch = items.length;\n            this._filesInBatchAddedToUi = 0;\n            this._parent.prototype._prepareItemsForUpload.apply(this, arguments);\n        },\n\n        _maybeUpdateThumbnail: function(fileId) {\n            var thumbnailUrl = this._thumbnailUrls[fileId],\n                fileStatus = this.getUploads({id: fileId}).status;\n\n            if (fileStatus !== qq.status.DELETED &&\n                (thumbnailUrl ||\n                this._options.thumbnails.placeholders.waitUntilResponse ||\n                !qq.supportedFeatures.imagePreviews)) {\n\n                // This will replace the \"waiting\" placeholder with a \"preview not available\" placeholder\n                // if called with a null thumbnailUrl.\n                this._templating.updateThumbnail(fileId, thumbnailUrl, this._options.thumbnails.customResizer);\n            }\n        },\n\n        _addCannedFile: function(sessionData) {\n            var id = this._parent.prototype._addCannedFile.apply(this, arguments);\n\n            this._addToList(id, this.getName(id), true);\n            this._templating.hideSpinner(id);\n            this._templating.hideCancel(id);\n            this._markFileAsSuccessful(id);\n\n            return id;\n        },\n\n        _setSize: function(id, newSize) {\n            this._parent.prototype._setSize.apply(this, arguments);\n\n            this._templating.updateSize(id, this._formatSize(newSize));\n        },\n\n        _sessionRequestComplete: function() {\n            this._templating.addCacheToDom();\n            this._parent.prototype._sessionRequestComplete.apply(this, arguments);\n        }\n    };\n}());\n","/*globals qq */\n/**\n * This defines FineUploader mode, which is a default UI w/ drag & drop uploading.\n */\nqq.FineUploader = function(o, namespace) {\n    \"use strict\";\n\n    var self = this;\n\n    // By default this should inherit instance data from FineUploaderBasic, but this can be overridden\n    // if the (internal) caller defines a different parent.  The parent is also used by\n    // the private and public API functions that need to delegate to a parent function.\n    this._parent = namespace ? qq[namespace].FineUploaderBasic : qq.FineUploaderBasic;\n    this._parent.apply(this, arguments);\n\n    // Options provided by FineUploader mode\n    qq.extend(this._options, {\n        element: null,\n\n        button: null,\n\n        listElement: null,\n\n        dragAndDrop: {\n            extraDropzones: [],\n            reportDirectoryPaths: false\n        },\n\n        text: {\n            formatProgress: \"{percent}% of {total_size}\",\n            failUpload: \"Upload failed\",\n            waitingForResponse: \"Processing...\",\n            paused: \"Paused\"\n        },\n\n        template: \"qq-template\",\n\n        classes: {\n            retrying: \"qq-upload-retrying\",\n            retryable: \"qq-upload-retryable\",\n            success: \"qq-upload-success\",\n            fail: \"qq-upload-fail\",\n            editable: \"qq-editable\",\n            hide: \"qq-hide\",\n            dropActive: \"qq-upload-drop-area-active\"\n        },\n\n        failedUploadTextDisplay: {\n            mode: \"default\", //default, custom, or none\n            responseProperty: \"error\",\n            enableTooltip: true\n        },\n\n        messages: {\n            tooManyFilesError: \"You may only drop one file\",\n            unsupportedBrowser: \"Unrecoverable error - this browser does not permit file uploading of any kind.\"\n        },\n\n        retry: {\n            showAutoRetryNote: true,\n            autoRetryNote: \"Retrying {retryNum}/{maxAuto}...\"\n        },\n\n        deleteFile: {\n            forceConfirm: false,\n            confirmMessage: \"Are you sure you want to delete {filename}?\",\n            deletingStatusText: \"Deleting...\",\n            deletingFailedText: \"Delete failed\"\n\n        },\n\n        display: {\n            fileSizeOnSubmit: false,\n            prependFiles: false\n        },\n\n        paste: {\n            promptForName: false,\n            namePromptMessage: \"Please name this image\"\n        },\n\n        thumbnails: {\n            customResizer: null,\n            maxCount: 0,\n            placeholders: {\n                waitUntilResponse: false,\n                notAvailablePath: null,\n                waitingPath: null\n            },\n            timeBetweenThumbs: 750\n        },\n\n        scaling: {\n            hideScaled: false\n        },\n\n        showMessage: function(message) {\n            if (self._templating.hasDialog(\"alert\")) {\n                return self._templating.showDialog(\"alert\", message);\n            }\n            else {\n                setTimeout(function() {\n                    window.alert(message);\n                }, 0);\n            }\n        },\n\n        showConfirm: function(message) {\n            if (self._templating.hasDialog(\"confirm\")) {\n                return self._templating.showDialog(\"confirm\", message);\n            }\n            else {\n                return window.confirm(message);\n            }\n        },\n\n        showPrompt: function(message, defaultValue) {\n            if (self._templating.hasDialog(\"prompt\")) {\n                return self._templating.showDialog(\"prompt\", message, defaultValue);\n            }\n            else {\n                return window.prompt(message, defaultValue);\n            }\n        }\n    }, true);\n\n    // Replace any default options with user defined ones\n    qq.extend(this._options, o, true);\n\n    this._templating = new qq.Templating({\n        log: qq.bind(this.log, this),\n        templateIdOrEl: this._options.template,\n        containerEl: this._options.element,\n        fileContainerEl: this._options.listElement,\n        button: this._options.button,\n        imageGenerator: this._imageGenerator,\n        classes: {\n            hide: this._options.classes.hide,\n            editable: this._options.classes.editable\n        },\n        limits: {\n            maxThumbs: this._options.thumbnails.maxCount,\n            timeBetweenThumbs: this._options.thumbnails.timeBetweenThumbs\n        },\n        placeholders: {\n            waitUntilUpdate: this._options.thumbnails.placeholders.waitUntilResponse,\n            thumbnailNotAvailable: this._options.thumbnails.placeholders.notAvailablePath,\n            waitingForThumbnail: this._options.thumbnails.placeholders.waitingPath\n        },\n        text: this._options.text\n    });\n\n    if (this._options.workarounds.ios8SafariUploads && qq.ios800() && qq.iosSafari()) {\n        this._templating.renderFailure(this._options.messages.unsupportedBrowserIos8Safari);\n    }\n    else if (!qq.supportedFeatures.uploading || (this._options.cors.expected && !qq.supportedFeatures.uploadCors)) {\n        this._templating.renderFailure(this._options.messages.unsupportedBrowser);\n    }\n    else {\n        this._wrapCallbacks();\n\n        this._templating.render();\n\n        this._classes = this._options.classes;\n\n        if (!this._options.button && this._templating.getButton()) {\n            this._defaultButtonId = this._createUploadButton({\n                element: this._templating.getButton(),\n                title: this._options.text.fileInputTitle\n            }).getButtonId();\n        }\n\n        this._setupClickAndEditEventHandlers();\n\n        if (qq.DragAndDrop && qq.supportedFeatures.fileDrop) {\n            this._dnd = this._setupDragAndDrop();\n        }\n\n        if (this._options.paste.targetElement && this._options.paste.promptForName) {\n            if (qq.PasteSupport) {\n                this._setupPastePrompt();\n            }\n            else {\n                this.log(\"Paste support module not found.\", \"error\");\n            }\n        }\n\n        this._totalFilesInBatch = 0;\n        this._filesInBatchAddedToUi = 0;\n    }\n};\n\n// Inherit the base public & private API methods\nqq.extend(qq.FineUploader.prototype, qq.basePublicApi);\nqq.extend(qq.FineUploader.prototype, qq.basePrivateApi);\n\n// Add the FineUploader/default UI public & private UI methods, which may override some base methods.\nqq.extend(qq.FineUploader.prototype, qq.uiPublicApi);\nqq.extend(qq.FineUploader.prototype, qq.uiPrivateApi);\n","/* globals qq */\n/* jshint -W065 */\n/**\n * Module responsible for rendering all Fine Uploader UI templates.  This module also asserts at least\n * a limited amount of control over the template elements after they are added to the DOM.\n * Wherever possible, this module asserts total control over template elements present in the DOM.\n *\n * @param spec Specification object used to control various templating behaviors\n * @constructor\n */\nqq.Templating = function(spec) {\n    \"use strict\";\n\n    var FILE_ID_ATTR = \"qq-file-id\",\n        FILE_CLASS_PREFIX = \"qq-file-id-\",\n        THUMBNAIL_MAX_SIZE_ATTR = \"qq-max-size\",\n        THUMBNAIL_SERVER_SCALE_ATTR = \"qq-server-scale\",\n        // This variable is duplicated in the DnD module since it can function as a standalone as well\n        HIDE_DROPZONE_ATTR = \"qq-hide-dropzone\",\n        DROPZPONE_TEXT_ATTR = \"qq-drop-area-text\",\n        IN_PROGRESS_CLASS = \"qq-in-progress\",\n        HIDDEN_FOREVER_CLASS = \"qq-hidden-forever\",\n        fileBatch = {\n            content: document.createDocumentFragment(),\n            map: {}\n        },\n        isCancelDisabled = false,\n        generatedThumbnails = 0,\n        thumbnailQueueMonitorRunning = false,\n        thumbGenerationQueue = [],\n        thumbnailMaxSize = -1,\n        options = {\n            log: null,\n            limits: {\n                maxThumbs: 0,\n                timeBetweenThumbs: 750\n            },\n            templateIdOrEl: \"qq-template\",\n            containerEl: null,\n            fileContainerEl: null,\n            button: null,\n            imageGenerator: null,\n            classes: {\n                hide: \"qq-hide\",\n                editable: \"qq-editable\"\n            },\n            placeholders: {\n                waitUntilUpdate: false,\n                thumbnailNotAvailable: null,\n                waitingForThumbnail: null\n            },\n            text: {\n                paused: \"Paused\"\n            }\n        },\n        selectorClasses = {\n            button: \"qq-upload-button-selector\",\n            alertDialog: \"qq-alert-dialog-selector\",\n            dialogCancelButton: \"qq-cancel-button-selector\",\n            confirmDialog: \"qq-confirm-dialog-selector\",\n            dialogMessage: \"qq-dialog-message-selector\",\n            dialogOkButton: \"qq-ok-button-selector\",\n            promptDialog: \"qq-prompt-dialog-selector\",\n            uploader: \"qq-uploader-selector\",\n            drop: \"qq-upload-drop-area-selector\",\n            list: \"qq-upload-list-selector\",\n            progressBarContainer: \"qq-progress-bar-container-selector\",\n            progressBar: \"qq-progress-bar-selector\",\n            totalProgressBarContainer: \"qq-total-progress-bar-container-selector\",\n            totalProgressBar: \"qq-total-progress-bar-selector\",\n            file: \"qq-upload-file-selector\",\n            spinner: \"qq-upload-spinner-selector\",\n            size: \"qq-upload-size-selector\",\n            cancel: \"qq-upload-cancel-selector\",\n            pause: \"qq-upload-pause-selector\",\n            continueButton: \"qq-upload-continue-selector\",\n            deleteButton: \"qq-upload-delete-selector\",\n            retry: \"qq-upload-retry-selector\",\n            statusText: \"qq-upload-status-text-selector\",\n            editFilenameInput: \"qq-edit-filename-selector\",\n            editNameIcon: \"qq-edit-filename-icon-selector\",\n            dropText: \"qq-upload-drop-area-text-selector\",\n            dropProcessing: \"qq-drop-processing-selector\",\n            dropProcessingSpinner: \"qq-drop-processing-spinner-selector\",\n            thumbnail: \"qq-thumbnail-selector\"\n        },\n        previewGeneration = {},\n        cachedThumbnailNotAvailableImg = new qq.Promise(),\n        cachedWaitingForThumbnailImg = new qq.Promise(),\n        log,\n        isEditElementsExist,\n        isRetryElementExist,\n        templateHtml,\n        container,\n        fileList,\n        showThumbnails,\n        serverScale,\n\n        // During initialization of the templating module we should cache any\n        // placeholder images so we can quickly swap them into the file list on demand.\n        // Any placeholder images that cannot be loaded/found are simply ignored.\n        cacheThumbnailPlaceholders = function() {\n            var notAvailableUrl =  options.placeholders.thumbnailNotAvailable,\n                waitingUrl = options.placeholders.waitingForThumbnail,\n                spec = {\n                    maxSize: thumbnailMaxSize,\n                    scale: serverScale\n                };\n\n            if (showThumbnails) {\n                if (notAvailableUrl) {\n                    options.imageGenerator.generate(notAvailableUrl, new Image(), spec).then(\n                        function(updatedImg) {\n                            cachedThumbnailNotAvailableImg.success(updatedImg);\n                        },\n                        function() {\n                            cachedThumbnailNotAvailableImg.failure();\n                            log(\"Problem loading 'not available' placeholder image at \" + notAvailableUrl, \"error\");\n                        }\n                    );\n                }\n                else {\n                    cachedThumbnailNotAvailableImg.failure();\n                }\n\n                if (waitingUrl) {\n                    options.imageGenerator.generate(waitingUrl, new Image(), spec).then(\n                        function(updatedImg) {\n                            cachedWaitingForThumbnailImg.success(updatedImg);\n                        },\n                        function() {\n                            cachedWaitingForThumbnailImg.failure();\n                            log(\"Problem loading 'waiting for thumbnail' placeholder image at \" + waitingUrl, \"error\");\n                        }\n                    );\n                }\n                else {\n                    cachedWaitingForThumbnailImg.failure();\n                }\n            }\n        },\n\n        // Displays a \"waiting for thumbnail\" type placeholder image\n        // iff we were able to load it during initialization of the templating module.\n        displayWaitingImg = function(thumbnail) {\n            var waitingImgPlacement = new qq.Promise();\n\n            cachedWaitingForThumbnailImg.then(function(img) {\n                maybeScalePlaceholderViaCss(img, thumbnail);\n                /* jshint eqnull:true */\n                if (!thumbnail.src) {\n                    thumbnail.src = img.src;\n                    thumbnail.onload = function() {\n                        thumbnail.onload = null;\n                        show(thumbnail);\n                        waitingImgPlacement.success();\n                    };\n                }\n                else {\n                    waitingImgPlacement.success();\n                }\n            }, function() {\n                // In some browsers (such as IE9 and older) an img w/out a src attribute\n                // are displayed as \"broken\" images, so we should just hide the img tag\n                // if we aren't going to display the \"waiting\" placeholder.\n                hide(thumbnail);\n                waitingImgPlacement.success();\n            });\n\n            return waitingImgPlacement;\n        },\n\n        generateNewPreview = function(id, blob, spec) {\n            var thumbnail = getThumbnail(id);\n\n            log(\"Generating new thumbnail for \" + id);\n            blob.qqThumbnailId = id;\n\n            return options.imageGenerator.generate(blob, thumbnail, spec).then(\n                function() {\n                    generatedThumbnails++;\n                    show(thumbnail);\n                    previewGeneration[id].success();\n                },\n                function() {\n                    previewGeneration[id].failure();\n\n                    // Display the \"not available\" placeholder img only if we are\n                    // not expecting a thumbnail at a later point, such as in a server response.\n                    if (!options.placeholders.waitUntilUpdate) {\n                        maybeSetDisplayNotAvailableImg(id, thumbnail);\n                    }\n                });\n        },\n\n        generateNextQueuedPreview = function() {\n            if (thumbGenerationQueue.length) {\n                thumbnailQueueMonitorRunning = true;\n\n                var queuedThumbRequest = thumbGenerationQueue.shift();\n\n                if (queuedThumbRequest.update) {\n                    processUpdateQueuedPreviewRequest(queuedThumbRequest);\n                }\n                else {\n                    processNewQueuedPreviewRequest(queuedThumbRequest);\n                }\n            }\n            else {\n                thumbnailQueueMonitorRunning = false;\n            }\n        },\n\n        getCancel = function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.cancel);\n        },\n\n        getContinue = function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.continueButton);\n        },\n\n        getDialog = function(type) {\n            return getTemplateEl(container, selectorClasses[type + \"Dialog\"]);\n        },\n\n        getDelete = function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.deleteButton);\n        },\n\n        getDropProcessing = function() {\n            return getTemplateEl(container, selectorClasses.dropProcessing);\n        },\n\n        getEditIcon = function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.editNameIcon);\n        },\n\n        getFile = function(id) {\n            return fileBatch.map[id] || qq(fileList).getFirstByClass(FILE_CLASS_PREFIX + id);\n        },\n\n        getFilename = function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.file);\n        },\n\n        getPause = function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.pause);\n        },\n\n        getProgress = function(id) {\n            /* jshint eqnull:true */\n            // Total progress bar\n            if (id == null) {\n                return getTemplateEl(container, selectorClasses.totalProgressBarContainer) ||\n                    getTemplateEl(container, selectorClasses.totalProgressBar);\n            }\n\n            // Per-file progress bar\n            return getTemplateEl(getFile(id), selectorClasses.progressBarContainer) ||\n                getTemplateEl(getFile(id), selectorClasses.progressBar);\n        },\n\n        getRetry = function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.retry);\n        },\n\n        getSize = function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.size);\n        },\n\n        getSpinner = function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.spinner);\n        },\n\n        getTemplateEl = function(context, cssClass) {\n            return context && qq(context).getFirstByClass(cssClass);\n        },\n\n        getThumbnail = function(id) {\n            return showThumbnails && getTemplateEl(getFile(id), selectorClasses.thumbnail);\n        },\n\n        hide = function(el) {\n            el && qq(el).addClass(options.classes.hide);\n        },\n\n        // Ensures a placeholder image does not exceed any max size specified\n        // via `style` attribute properties iff <canvas> was not used to scale\n        // the placeholder AND the target <img> doesn't already have these `style` attribute properties set.\n        maybeScalePlaceholderViaCss = function(placeholder, thumbnail) {\n            var maxWidth = placeholder.style.maxWidth,\n                maxHeight = placeholder.style.maxHeight;\n\n            if (maxHeight && maxWidth && !thumbnail.style.maxWidth && !thumbnail.style.maxHeight) {\n                qq(thumbnail).css({\n                    maxWidth: maxWidth,\n                    maxHeight: maxHeight\n                });\n            }\n        },\n\n        // Displays a \"thumbnail not available\" type placeholder image\n        // iff we were able to load this placeholder during initialization\n        // of the templating module or after preview generation has failed.\n        maybeSetDisplayNotAvailableImg = function(id, thumbnail) {\n            var previewing = previewGeneration[id] || new qq.Promise().failure(),\n                notAvailableImgPlacement = new qq.Promise();\n\n            cachedThumbnailNotAvailableImg.then(function(img) {\n                previewing.then(\n                    function() {\n                        notAvailableImgPlacement.success();\n                    },\n                    function() {\n                        maybeScalePlaceholderViaCss(img, thumbnail);\n\n                        thumbnail.onload = function() {\n                            thumbnail.onload = null;\n                            notAvailableImgPlacement.success();\n                        };\n\n                        thumbnail.src = img.src;\n                        show(thumbnail);\n                    }\n                );\n            });\n\n            return notAvailableImgPlacement;\n        },\n\n        /**\n         * Grabs the HTML from the script tag holding the template markup.  This function will also adjust\n         * some internally-tracked state variables based on the contents of the template.\n         * The template is filtered so that irrelevant elements (such as the drop zone if DnD is not supported)\n         * are omitted from the DOM.  Useful errors will be thrown if the template cannot be parsed.\n         *\n         * @returns {{template: *, fileTemplate: *}} HTML for the top-level file items templates\n         */\n        parseAndGetTemplate = function() {\n            var scriptEl,\n                scriptHtml,\n                fileListNode,\n                tempTemplateEl,\n                fileListHtml,\n                defaultButton,\n                dropArea,\n                thumbnail,\n                dropProcessing,\n                dropTextEl,\n                uploaderEl;\n\n            log(\"Parsing template\");\n\n            /*jshint -W116*/\n            if (options.templateIdOrEl == null) {\n                throw new Error(\"You MUST specify either a template element or ID!\");\n            }\n\n            // Grab the contents of the script tag holding the template.\n            if (qq.isString(options.templateIdOrEl)) {\n                scriptEl = document.getElementById(options.templateIdOrEl);\n\n                if (scriptEl === null) {\n                    throw new Error(qq.format(\"Cannot find template script at ID '{}'!\", options.templateIdOrEl));\n                }\n\n                scriptHtml = scriptEl.innerHTML;\n            }\n            else {\n                if (options.templateIdOrEl.innerHTML === undefined) {\n                    throw new Error(\"You have specified an invalid value for the template option!  \" +\n                        \"It must be an ID or an Element.\");\n                }\n\n                scriptHtml = options.templateIdOrEl.innerHTML;\n            }\n\n            scriptHtml = qq.trimStr(scriptHtml);\n            tempTemplateEl = document.createElement(\"div\");\n            tempTemplateEl.appendChild(qq.toElement(scriptHtml));\n            uploaderEl = qq(tempTemplateEl).getFirstByClass(selectorClasses.uploader);\n\n            // Don't include the default template button in the DOM\n            // if an alternate button container has been specified.\n            if (options.button) {\n                defaultButton = qq(tempTemplateEl).getFirstByClass(selectorClasses.button);\n                if (defaultButton) {\n                    qq(defaultButton).remove();\n                }\n            }\n\n            // Omit the drop processing element from the DOM if DnD is not supported by the UA,\n            // or the drag and drop module is not found.\n            // NOTE: We are consciously not removing the drop zone if the UA doesn't support DnD\n            // to support layouts where the drop zone is also a container for visible elements,\n            // such as the file list.\n            if (!qq.DragAndDrop || !qq.supportedFeatures.fileDrop) {\n                dropProcessing = qq(tempTemplateEl).getFirstByClass(selectorClasses.dropProcessing);\n                if (dropProcessing) {\n                    qq(dropProcessing).remove();\n                }\n            }\n\n            dropArea = qq(tempTemplateEl).getFirstByClass(selectorClasses.drop);\n\n            // If DnD is not available then remove\n            // it from the DOM as well.\n            if (dropArea && !qq.DragAndDrop) {\n                log(\"DnD module unavailable.\", \"info\");\n                qq(dropArea).remove();\n            }\n\n            if (!qq.supportedFeatures.fileDrop) {\n                // don't display any \"drop files to upload\" background text\n                uploaderEl.removeAttribute(DROPZPONE_TEXT_ATTR);\n\n                if (dropArea && qq(dropArea).hasAttribute(HIDE_DROPZONE_ATTR)) {\n                    // If there is a drop area defined in the template, and the current UA doesn't support DnD,\n                    // and the drop area is marked as \"hide before enter\", ensure it is hidden as the DnD module\n                    // will not do this (since we will not be loading the DnD module)\n                    qq(dropArea).css({\n                        display: \"none\"\n                    });\n                }\n            }\n            else if (qq(uploaderEl).hasAttribute(DROPZPONE_TEXT_ATTR) && dropArea) {\n                dropTextEl = qq(dropArea).getFirstByClass(selectorClasses.dropText);\n                dropTextEl && qq(dropTextEl).remove();\n            }\n\n            // Ensure the `showThumbnails` flag is only set if the thumbnail element\n            // is present in the template AND the current UA is capable of generating client-side previews.\n            thumbnail = qq(tempTemplateEl).getFirstByClass(selectorClasses.thumbnail);\n            if (!showThumbnails) {\n                thumbnail && qq(thumbnail).remove();\n            }\n            else if (thumbnail) {\n                thumbnailMaxSize = parseInt(thumbnail.getAttribute(THUMBNAIL_MAX_SIZE_ATTR));\n                // Only enforce max size if the attr value is non-zero\n                thumbnailMaxSize = thumbnailMaxSize > 0 ? thumbnailMaxSize : null;\n\n                serverScale = qq(thumbnail).hasAttribute(THUMBNAIL_SERVER_SCALE_ATTR);\n            }\n            showThumbnails = showThumbnails && thumbnail;\n\n            isEditElementsExist = qq(tempTemplateEl).getByClass(selectorClasses.editFilenameInput).length > 0;\n            isRetryElementExist = qq(tempTemplateEl).getByClass(selectorClasses.retry).length > 0;\n\n            fileListNode = qq(tempTemplateEl).getFirstByClass(selectorClasses.list);\n            /*jshint -W116*/\n            if (fileListNode == null) {\n                throw new Error(\"Could not find the file list container in the template!\");\n            }\n\n            fileListHtml = fileListNode.innerHTML;\n            fileListNode.innerHTML = \"\";\n\n            // We must call `createElement` in IE8 in order to target and hide any <dialog> via CSS\n            if (tempTemplateEl.getElementsByTagName(\"DIALOG\").length) {\n                document.createElement(\"dialog\");\n            }\n\n            log(\"Template parsing complete\");\n\n            return {\n                template: qq.trimStr(tempTemplateEl.innerHTML),\n                fileTemplate: qq.trimStr(fileListHtml)\n            };\n        },\n\n        prependFile = function(el, index, fileList) {\n            var parentEl = fileList,\n                beforeEl = parentEl.firstChild;\n\n            if (index > 0) {\n                beforeEl = qq(parentEl).children()[index].nextSibling;\n\n            }\n\n            parentEl.insertBefore(el, beforeEl);\n        },\n\n        processNewQueuedPreviewRequest = function(queuedThumbRequest) {\n            var id = queuedThumbRequest.id,\n                optFileOrBlob = queuedThumbRequest.optFileOrBlob,\n                relatedThumbnailId = optFileOrBlob && optFileOrBlob.qqThumbnailId,\n                thumbnail = getThumbnail(id),\n                spec = {\n                    customResizeFunction: queuedThumbRequest.customResizeFunction,\n                    maxSize: thumbnailMaxSize,\n                    orient: true,\n                    scale: true\n                };\n\n            if (qq.supportedFeatures.imagePreviews) {\n                if (thumbnail) {\n                    if (options.limits.maxThumbs && options.limits.maxThumbs <= generatedThumbnails) {\n                        maybeSetDisplayNotAvailableImg(id, thumbnail);\n                        generateNextQueuedPreview();\n                    }\n                    else {\n                        displayWaitingImg(thumbnail).done(function() {\n                            previewGeneration[id] = new qq.Promise();\n\n                            previewGeneration[id].done(function() {\n                                setTimeout(generateNextQueuedPreview, options.limits.timeBetweenThumbs);\n                            });\n\n                            /* jshint eqnull: true */\n                            // If we've already generated an <img> for this file, use the one that exists,\n                            // don't waste resources generating a new one.\n                            if (relatedThumbnailId != null) {\n                                useCachedPreview(id, relatedThumbnailId);\n                            }\n                            else {\n                                generateNewPreview(id, optFileOrBlob, spec);\n                            }\n                        });\n                    }\n                }\n                // File element in template may have been removed, so move on to next item in queue\n                else {\n                    generateNextQueuedPreview();\n                }\n            }\n            else if (thumbnail) {\n                displayWaitingImg(thumbnail);\n                generateNextQueuedPreview();\n            }\n        },\n\n        processUpdateQueuedPreviewRequest = function(queuedThumbRequest) {\n            var id = queuedThumbRequest.id,\n                thumbnailUrl = queuedThumbRequest.thumbnailUrl,\n                showWaitingImg = queuedThumbRequest.showWaitingImg,\n                thumbnail = getThumbnail(id),\n                spec = {\n                    customResizeFunction: queuedThumbRequest.customResizeFunction,\n                    scale: serverScale,\n                    maxSize: thumbnailMaxSize\n                };\n\n            if (thumbnail) {\n                if (thumbnailUrl) {\n                    if (options.limits.maxThumbs && options.limits.maxThumbs <= generatedThumbnails) {\n                        maybeSetDisplayNotAvailableImg(id, thumbnail);\n                        generateNextQueuedPreview();\n                    }\n                    else {\n                        if (showWaitingImg) {\n                            displayWaitingImg(thumbnail);\n                        }\n\n                        return options.imageGenerator.generate(thumbnailUrl, thumbnail, spec).then(\n                            function() {\n                                show(thumbnail);\n                                generatedThumbnails++;\n                                setTimeout(generateNextQueuedPreview, options.limits.timeBetweenThumbs);\n                            },\n\n                            function() {\n                                maybeSetDisplayNotAvailableImg(id, thumbnail);\n                                setTimeout(generateNextQueuedPreview, options.limits.timeBetweenThumbs);\n                            }\n                        );\n                    }\n                }\n                else {\n                    maybeSetDisplayNotAvailableImg(id, thumbnail);\n                    generateNextQueuedPreview();\n                }\n            }\n        },\n\n        setProgressBarWidth = function(id, percent) {\n            var bar = getProgress(id),\n                /* jshint eqnull:true */\n                progressBarSelector = id == null ? selectorClasses.totalProgressBar : selectorClasses.progressBar;\n\n            if (bar && !qq(bar).hasClass(progressBarSelector)) {\n                bar = qq(bar).getFirstByClass(progressBarSelector);\n            }\n\n            if (bar) {\n                qq(bar).css({width: percent + \"%\"});\n                bar.setAttribute(\"aria-valuenow\", percent);\n            }\n        },\n\n        show = function(el) {\n            el && qq(el).removeClass(options.classes.hide);\n        },\n\n        useCachedPreview = function(targetThumbnailId, cachedThumbnailId) {\n            var targetThumbnail = getThumbnail(targetThumbnailId),\n                cachedThumbnail = getThumbnail(cachedThumbnailId);\n\n            log(qq.format(\"ID {} is the same file as ID {}.  Will use generated thumbnail from ID {} instead.\", targetThumbnailId, cachedThumbnailId, cachedThumbnailId));\n\n            // Generation of the related thumbnail may still be in progress, so, wait until it is done.\n            previewGeneration[cachedThumbnailId].then(function() {\n                generatedThumbnails++;\n                previewGeneration[targetThumbnailId].success();\n                log(qq.format(\"Now using previously generated thumbnail created for ID {} on ID {}.\", cachedThumbnailId, targetThumbnailId));\n                targetThumbnail.src = cachedThumbnail.src;\n                show(targetThumbnail);\n            },\n            function() {\n                previewGeneration[targetThumbnailId].failure();\n                if (!options.placeholders.waitUntilUpdate) {\n                    maybeSetDisplayNotAvailableImg(targetThumbnailId, targetThumbnail);\n                }\n            });\n        };\n\n    qq.extend(options, spec);\n    log = options.log;\n\n    // No need to worry about conserving CPU or memory on older browsers,\n    // since there is no ability to preview, and thumbnail display is primitive and quick.\n    if (!qq.supportedFeatures.imagePreviews) {\n        options.limits.timeBetweenThumbs = 0;\n        options.limits.maxThumbs = 0;\n    }\n\n    container = options.containerEl;\n    showThumbnails = options.imageGenerator !== undefined;\n    templateHtml = parseAndGetTemplate();\n\n    cacheThumbnailPlaceholders();\n\n    qq.extend(this, {\n        render: function() {\n            log(\"Rendering template in DOM.\");\n\n            generatedThumbnails = 0;\n\n            container.innerHTML = templateHtml.template;\n            hide(getDropProcessing());\n            this.hideTotalProgress();\n            fileList = options.fileContainerEl || getTemplateEl(container, selectorClasses.list);\n\n            log(\"Template rendering complete\");\n        },\n\n        renderFailure: function(message) {\n            var cantRenderEl = qq.toElement(message);\n            container.innerHTML = \"\";\n            container.appendChild(cantRenderEl);\n        },\n\n        reset: function() {\n            this.render();\n        },\n\n        clearFiles: function() {\n            fileList.innerHTML = \"\";\n        },\n\n        disableCancel: function() {\n            isCancelDisabled = true;\n        },\n\n        addFile: function(id, name, prependInfo, hideForever, batch) {\n            var fileEl = qq.toElement(templateHtml.fileTemplate),\n                fileNameEl = getTemplateEl(fileEl, selectorClasses.file),\n                uploaderEl = getTemplateEl(container, selectorClasses.uploader),\n                fileContainer = batch ? fileBatch.content : fileList,\n                thumb;\n\n            if (batch) {\n                fileBatch.map[id] = fileEl;\n            }\n\n            qq(fileEl).addClass(FILE_CLASS_PREFIX + id);\n            uploaderEl.removeAttribute(DROPZPONE_TEXT_ATTR);\n\n            if (fileNameEl) {\n                qq(fileNameEl).setText(name);\n                fileNameEl.setAttribute(\"title\", name);\n            }\n\n            fileEl.setAttribute(FILE_ID_ATTR, id);\n\n            if (prependInfo) {\n                prependFile(fileEl, prependInfo.index, fileContainer);\n            }\n            else {\n                fileContainer.appendChild(fileEl);\n            }\n\n            if (hideForever) {\n                fileEl.style.display = \"none\";\n                qq(fileEl).addClass(HIDDEN_FOREVER_CLASS);\n            }\n            else {\n                hide(getProgress(id));\n                hide(getSize(id));\n                hide(getDelete(id));\n                hide(getRetry(id));\n                hide(getPause(id));\n                hide(getContinue(id));\n\n                if (isCancelDisabled) {\n                    this.hideCancel(id);\n                }\n\n                thumb = getThumbnail(id);\n                if (thumb && !thumb.src) {\n                    cachedWaitingForThumbnailImg.then(function(waitingImg) {\n                        thumb.src = waitingImg.src;\n                        if (waitingImg.style.maxHeight && waitingImg.style.maxWidth) {\n                            qq(thumb).css({\n                                maxHeight: waitingImg.style.maxHeight,\n                                maxWidth: waitingImg.style.maxWidth\n                            });\n                        }\n\n                        show(thumb);\n                    });\n                }\n            }\n        },\n\n        addFileToCache: function(id, name, prependInfo, hideForever) {\n            this.addFile(id, name, prependInfo, hideForever, true);\n        },\n\n        addCacheToDom: function() {\n            fileList.appendChild(fileBatch.content);\n            fileBatch.content = document.createDocumentFragment();\n            fileBatch.map = {};\n        },\n\n        removeFile: function(id) {\n            qq(getFile(id)).remove();\n        },\n\n        getFileId: function(el) {\n            var currentNode = el;\n\n            if (currentNode) {\n                /*jshint -W116*/\n                while (currentNode.getAttribute(FILE_ID_ATTR) == null) {\n                    currentNode = currentNode.parentNode;\n                }\n\n                return parseInt(currentNode.getAttribute(FILE_ID_ATTR));\n            }\n        },\n\n        getFileList: function() {\n            return fileList;\n        },\n\n        markFilenameEditable: function(id) {\n            var filename = getFilename(id);\n\n            filename && qq(filename).addClass(options.classes.editable);\n        },\n\n        updateFilename: function(id, name) {\n            var filenameEl = getFilename(id);\n\n            if (filenameEl) {\n                qq(filenameEl).setText(name);\n                filenameEl.setAttribute(\"title\", name);\n            }\n        },\n\n        hideFilename: function(id) {\n            hide(getFilename(id));\n        },\n\n        showFilename: function(id) {\n            show(getFilename(id));\n        },\n\n        isFileName: function(el) {\n            return qq(el).hasClass(selectorClasses.file);\n        },\n\n        getButton: function() {\n            return options.button || getTemplateEl(container, selectorClasses.button);\n        },\n\n        hideDropProcessing: function() {\n            hide(getDropProcessing());\n        },\n\n        showDropProcessing: function() {\n            show(getDropProcessing());\n        },\n\n        getDropZone: function() {\n            return getTemplateEl(container, selectorClasses.drop);\n        },\n\n        isEditFilenamePossible: function() {\n            return isEditElementsExist;\n        },\n\n        hideRetry: function(id) {\n            hide(getRetry(id));\n        },\n\n        isRetryPossible: function() {\n            return isRetryElementExist;\n        },\n\n        showRetry: function(id) {\n            show(getRetry(id));\n        },\n\n        getFileContainer: function(id) {\n            return getFile(id);\n        },\n\n        showEditIcon: function(id) {\n            var icon = getEditIcon(id);\n\n            icon && qq(icon).addClass(options.classes.editable);\n        },\n\n        isHiddenForever: function(id) {\n            return qq(getFile(id)).hasClass(HIDDEN_FOREVER_CLASS);\n        },\n\n        hideEditIcon: function(id) {\n            var icon = getEditIcon(id);\n\n            icon && qq(icon).removeClass(options.classes.editable);\n        },\n\n        isEditIcon: function(el) {\n            return qq(el).hasClass(selectorClasses.editNameIcon, true);\n        },\n\n        getEditInput: function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.editFilenameInput);\n        },\n\n        isEditInput: function(el) {\n            return qq(el).hasClass(selectorClasses.editFilenameInput, true);\n        },\n\n        updateProgress: function(id, loaded, total) {\n            var bar = getProgress(id),\n                percent;\n\n            if (bar && total > 0) {\n                percent = Math.round(loaded / total * 100);\n\n                if (percent === 100) {\n                    hide(bar);\n                }\n                else {\n                    show(bar);\n                }\n\n                setProgressBarWidth(id, percent);\n            }\n        },\n\n        updateTotalProgress: function(loaded, total) {\n            this.updateProgress(null, loaded, total);\n        },\n\n        hideProgress: function(id) {\n            var bar = getProgress(id);\n\n            bar && hide(bar);\n        },\n\n        hideTotalProgress: function() {\n            this.hideProgress();\n        },\n\n        resetProgress: function(id) {\n            setProgressBarWidth(id, 0);\n            this.hideTotalProgress(id);\n        },\n\n        resetTotalProgress: function() {\n            this.resetProgress();\n        },\n\n        showCancel: function(id) {\n            if (!isCancelDisabled) {\n                var cancel = getCancel(id);\n\n                cancel && qq(cancel).removeClass(options.classes.hide);\n            }\n        },\n\n        hideCancel: function(id) {\n            hide(getCancel(id));\n        },\n\n        isCancel: function(el)  {\n            return qq(el).hasClass(selectorClasses.cancel, true);\n        },\n\n        allowPause: function(id) {\n            show(getPause(id));\n            hide(getContinue(id));\n        },\n\n        uploadPaused: function(id) {\n            this.setStatusText(id, options.text.paused);\n            this.allowContinueButton(id);\n            hide(getSpinner(id));\n        },\n\n        hidePause: function(id) {\n            hide(getPause(id));\n        },\n\n        isPause: function(el) {\n            return qq(el).hasClass(selectorClasses.pause, true);\n        },\n\n        isContinueButton: function(el) {\n            return qq(el).hasClass(selectorClasses.continueButton, true);\n        },\n\n        allowContinueButton: function(id) {\n            show(getContinue(id));\n            hide(getPause(id));\n        },\n\n        uploadContinued: function(id) {\n            this.setStatusText(id, \"\");\n            this.allowPause(id);\n            show(getSpinner(id));\n        },\n\n        showDeleteButton: function(id) {\n            show(getDelete(id));\n        },\n\n        hideDeleteButton: function(id) {\n            hide(getDelete(id));\n        },\n\n        isDeleteButton: function(el) {\n            return qq(el).hasClass(selectorClasses.deleteButton, true);\n        },\n\n        isRetry: function(el) {\n            return qq(el).hasClass(selectorClasses.retry, true);\n        },\n\n        updateSize: function(id, text) {\n            var size = getSize(id);\n\n            if (size) {\n                show(size);\n                qq(size).setText(text);\n            }\n        },\n\n        setStatusText: function(id, text) {\n            var textEl = getTemplateEl(getFile(id), selectorClasses.statusText);\n\n            if (textEl) {\n                /*jshint -W116*/\n                if (text == null) {\n                    qq(textEl).clearText();\n                }\n                else {\n                    qq(textEl).setText(text);\n                }\n            }\n        },\n\n        hideSpinner: function(id) {\n            qq(getFile(id)).removeClass(IN_PROGRESS_CLASS);\n            hide(getSpinner(id));\n        },\n\n        showSpinner: function(id) {\n            qq(getFile(id)).addClass(IN_PROGRESS_CLASS);\n            show(getSpinner(id));\n        },\n\n        generatePreview: function(id, optFileOrBlob, customResizeFunction) {\n            if (!this.isHiddenForever(id)) {\n                thumbGenerationQueue.push({id: id, customResizeFunction: customResizeFunction, optFileOrBlob: optFileOrBlob});\n                !thumbnailQueueMonitorRunning && generateNextQueuedPreview();\n            }\n        },\n\n        updateThumbnail: function(id, thumbnailUrl, showWaitingImg, customResizeFunction) {\n            if (!this.isHiddenForever(id)) {\n                thumbGenerationQueue.push({customResizeFunction: customResizeFunction, update: true, id: id, thumbnailUrl: thumbnailUrl, showWaitingImg: showWaitingImg});\n                !thumbnailQueueMonitorRunning && generateNextQueuedPreview();\n            }\n        },\n\n        hasDialog: function(type) {\n            return qq.supportedFeatures.dialogElement && !!getDialog(type);\n        },\n\n        showDialog: function(type, message, defaultValue) {\n            var dialog = getDialog(type),\n                messageEl = getTemplateEl(dialog, selectorClasses.dialogMessage),\n                inputEl = dialog.getElementsByTagName(\"INPUT\")[0],\n                cancelBtn = getTemplateEl(dialog, selectorClasses.dialogCancelButton),\n                okBtn = getTemplateEl(dialog, selectorClasses.dialogOkButton),\n                promise = new qq.Promise(),\n\n                closeHandler = function() {\n                    cancelBtn.removeEventListener(\"click\", cancelClickHandler);\n                    okBtn && okBtn.removeEventListener(\"click\", okClickHandler);\n                    promise.failure();\n                },\n\n                cancelClickHandler = function() {\n                    cancelBtn.removeEventListener(\"click\", cancelClickHandler);\n                    dialog.close();\n                },\n\n                okClickHandler = function() {\n                    dialog.removeEventListener(\"close\", closeHandler);\n                    okBtn.removeEventListener(\"click\", okClickHandler);\n                    dialog.close();\n\n                    promise.success(inputEl && inputEl.value);\n                };\n\n            dialog.addEventListener(\"close\", closeHandler);\n            cancelBtn.addEventListener(\"click\", cancelClickHandler);\n            okBtn && okBtn.addEventListener(\"click\", okClickHandler);\n\n            if (inputEl) {\n                inputEl.value = defaultValue;\n            }\n            messageEl.textContent = message;\n\n            dialog.showModal();\n\n            return promise;\n        }\n    });\n};\n","/*globals qq */\n// Base handler for UI (FineUploader mode) events.\n// Some more specific handlers inherit from this one.\nqq.UiEventHandler = function(s, protectedApi) {\n    \"use strict\";\n\n    var disposer = new qq.DisposeSupport(),\n        spec = {\n            eventType: \"click\",\n            attachTo: null,\n            onHandled: function(target, event) {}\n        };\n\n    // This makes up the \"public\" API methods that will be accessible\n    // to instances constructing a base or child handler\n    qq.extend(this, {\n        addHandler: function(element) {\n            addHandler(element);\n        },\n\n        dispose: function() {\n            disposer.dispose();\n        }\n    });\n\n    function addHandler(element) {\n        disposer.attach(element, spec.eventType, function(event) {\n            // Only in IE: the `event` is a property of the `window`.\n            event = event || window.event;\n\n            // On older browsers, we must check the `srcElement` instead of the `target`.\n            var target = event.target || event.srcElement;\n\n            spec.onHandled(target, event);\n        });\n    }\n\n    // These make up the \"protected\" API methods that children of this base handler will utilize.\n    qq.extend(protectedApi, {\n        getFileIdFromItem: function(item) {\n            return item.qqFileId;\n        },\n\n        getDisposeSupport: function() {\n            return disposer;\n        }\n    });\n\n    qq.extend(spec, s);\n\n    if (spec.attachTo) {\n        addHandler(spec.attachTo);\n    }\n};\n","/* global qq */\nqq.FileButtonsClickHandler = function(s) {\n    \"use strict\";\n\n    var inheritedInternalApi = {},\n        spec = {\n            templating: null,\n            log: function(message, lvl) {},\n            onDeleteFile: function(fileId) {},\n            onCancel: function(fileId) {},\n            onRetry: function(fileId) {},\n            onPause: function(fileId) {},\n            onContinue: function(fileId) {},\n            onGetName: function(fileId) {}\n        },\n        buttonHandlers = {\n            cancel: function(id) { spec.onCancel(id); },\n            retry:  function(id) { spec.onRetry(id); },\n            deleteButton: function(id) { spec.onDeleteFile(id); },\n            pause: function(id) { spec.onPause(id); },\n            continueButton: function(id) { spec.onContinue(id); }\n        };\n\n    function examineEvent(target, event) {\n        qq.each(buttonHandlers, function(buttonType, handler) {\n            var firstLetterCapButtonType = buttonType.charAt(0).toUpperCase() + buttonType.slice(1),\n                fileId;\n\n            if (spec.templating[\"is\" + firstLetterCapButtonType](target)) {\n                fileId = spec.templating.getFileId(target);\n                qq.preventDefault(event);\n                spec.log(qq.format(\"Detected valid file button click event on file '{}', ID: {}.\", spec.onGetName(fileId), fileId));\n                handler(fileId);\n                return false;\n            }\n        });\n    }\n\n    qq.extend(spec, s);\n\n    spec.eventType = \"click\";\n    spec.onHandled = examineEvent;\n    spec.attachTo = spec.templating.getFileList();\n\n    qq.extend(this, new qq.UiEventHandler(spec, inheritedInternalApi));\n};\n","/*globals qq */\n// Child of FilenameEditHandler.  Used to detect click events on filename display elements.\nqq.FilenameClickHandler = function(s) {\n    \"use strict\";\n\n    var inheritedInternalApi = {},\n        spec = {\n            templating: null,\n            log: function(message, lvl) {},\n            classes: {\n                file: \"qq-upload-file\",\n                editNameIcon: \"qq-edit-filename-icon\"\n            },\n            onGetUploadStatus: function(fileId) {},\n            onGetName: function(fileId) {}\n        };\n\n    qq.extend(spec, s);\n\n    // This will be called by the parent handler when a `click` event is received on the list element.\n    function examineEvent(target, event) {\n        if (spec.templating.isFileName(target) || spec.templating.isEditIcon(target)) {\n            var fileId = spec.templating.getFileId(target),\n                status = spec.onGetUploadStatus(fileId);\n\n            // We only allow users to change filenames of files that have been submitted but not yet uploaded.\n            if (status === qq.status.SUBMITTED) {\n                spec.log(qq.format(\"Detected valid filename click event on file '{}', ID: {}.\", spec.onGetName(fileId), fileId));\n                qq.preventDefault(event);\n\n                inheritedInternalApi.handleFilenameEdit(fileId, target, true);\n            }\n        }\n    }\n\n    spec.eventType = \"click\";\n    spec.onHandled = examineEvent;\n\n    qq.extend(this, new qq.FilenameEditHandler(spec, inheritedInternalApi));\n};\n","/*globals qq */\n// Child of FilenameEditHandler.  Used to detect focusin events on file edit input elements.\nqq.FilenameInputFocusInHandler = function(s, inheritedInternalApi) {\n    \"use strict\";\n\n    var spec = {\n            templating: null,\n            onGetUploadStatus: function(fileId) {},\n            log: function(message, lvl) {}\n        };\n\n    if (!inheritedInternalApi) {\n        inheritedInternalApi = {};\n    }\n\n    // This will be called by the parent handler when a `focusin` event is received on the list element.\n    function handleInputFocus(target, event) {\n        if (spec.templating.isEditInput(target)) {\n            var fileId = spec.templating.getFileId(target),\n                status = spec.onGetUploadStatus(fileId);\n\n            if (status === qq.status.SUBMITTED) {\n                spec.log(qq.format(\"Detected valid filename input focus event on file '{}', ID: {}.\", spec.onGetName(fileId), fileId));\n                inheritedInternalApi.handleFilenameEdit(fileId, target);\n            }\n        }\n    }\n\n    spec.eventType = \"focusin\";\n    spec.onHandled = handleInputFocus;\n\n    qq.extend(spec, s);\n    qq.extend(this, new qq.FilenameEditHandler(spec, inheritedInternalApi));\n};\n","/*globals qq */\n/**\n * Child of FilenameInputFocusInHandler.  Used to detect focus events on file edit input elements.  This child module is only\n * needed for UAs that do not support the focusin event.  Currently, only Firefox lacks this event.\n *\n * @param spec Overrides for default specifications\n */\nqq.FilenameInputFocusHandler = function(spec) {\n    \"use strict\";\n\n    spec.eventType = \"focus\";\n    spec.attachTo = null;\n\n    qq.extend(this, new qq.FilenameInputFocusInHandler(spec, {}));\n};\n","/*globals qq */\n// Handles edit-related events on a file item (FineUploader mode).  This is meant to be a parent handler.\n// Children will delegate to this handler when specific edit-related actions are detected.\nqq.FilenameEditHandler = function(s, inheritedInternalApi) {\n    \"use strict\";\n\n    var spec = {\n            templating: null,\n            log: function(message, lvl) {},\n            onGetUploadStatus: function(fileId) {},\n            onGetName: function(fileId) {},\n            onSetName: function(fileId, newName) {},\n            onEditingStatusChange: function(fileId, isEditing) {}\n        };\n\n    function getFilenameSansExtension(fileId) {\n        var filenameSansExt = spec.onGetName(fileId),\n            extIdx = filenameSansExt.lastIndexOf(\".\");\n\n        if (extIdx > 0) {\n            filenameSansExt = filenameSansExt.substr(0, extIdx);\n        }\n\n        return filenameSansExt;\n    }\n\n    function getOriginalExtension(fileId) {\n        var origName = spec.onGetName(fileId);\n        return qq.getExtension(origName);\n    }\n\n    // Callback iff the name has been changed\n    function handleNameUpdate(newFilenameInputEl, fileId) {\n        var newName = newFilenameInputEl.value,\n            origExtension;\n\n        if (newName !== undefined && qq.trimStr(newName).length > 0) {\n            origExtension = getOriginalExtension(fileId);\n\n            if (origExtension !== undefined) {\n                newName = newName + \".\" + origExtension;\n            }\n\n            spec.onSetName(fileId, newName);\n        }\n\n        spec.onEditingStatusChange(fileId, false);\n    }\n\n    // The name has been updated if the filename edit input loses focus.\n    function registerInputBlurHandler(inputEl, fileId) {\n        inheritedInternalApi.getDisposeSupport().attach(inputEl, \"blur\", function() {\n            handleNameUpdate(inputEl, fileId);\n        });\n    }\n\n    // The name has been updated if the user presses enter.\n    function registerInputEnterKeyHandler(inputEl, fileId) {\n        inheritedInternalApi.getDisposeSupport().attach(inputEl, \"keyup\", function(event) {\n\n            var code = event.keyCode || event.which;\n\n            if (code === 13) {\n                handleNameUpdate(inputEl, fileId);\n            }\n        });\n    }\n\n    qq.extend(spec, s);\n\n    spec.attachTo = spec.templating.getFileList();\n\n    qq.extend(this, new qq.UiEventHandler(spec, inheritedInternalApi));\n\n    qq.extend(inheritedInternalApi, {\n        handleFilenameEdit: function(id, target, focusInput) {\n            var newFilenameInputEl = spec.templating.getEditInput(id);\n\n            spec.onEditingStatusChange(id, true);\n\n            newFilenameInputEl.value = getFilenameSansExtension(id);\n\n            if (focusInput) {\n                newFilenameInputEl.focus();\n            }\n\n            registerInputBlurHandler(newFilenameInputEl, id);\n            registerInputEnterKeyHandler(newFilenameInputEl, id);\n        }\n    });\n};\n"]}