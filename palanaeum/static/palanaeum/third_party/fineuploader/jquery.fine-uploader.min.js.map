{
  "version": 3,
  "sources": [
    "?",
    "../client/js/jquery-plugin.js",
    "../client/js/jquery-dnd.js",
    "../client/js/util.js",
    "../client/js/export.js",
    "../client/js/error/error.js",
    "../client/js/version.js",
    "../client/js/features.js",
    "../client/js/promise.js",
    "../client/js/blob-proxy.js",
    "../client/js/button.js",
    "../client/js/upload-data.js",
    "../client/js/uploader.basic.api.js",
    "../client/js/uploader.basic.js",
    "../client/js/ajax.requester.js",
    "../client/js/upload-handler/upload.handler.js",
    "../client/js/upload-handler/upload.handler.controller.js",
    "../client/js/window.receive.message.js",
    "../client/js/upload-handler/form.upload.handler.js",
    "../client/js/upload-handler/xhr.upload.handler.js",
    "../client/js/deletefile.ajax.requester.js",
    "../client/js/image-support/megapix-image.js",
    "../client/js/image-support/image.js",
    "../client/js/image-support/exif.js",
    "../client/js/identify.js",
    "../client/js/image-support/validation.image.js",
    "../client/js/session.js",
    "../client/js/session.ajax.requester.js",
    "../client/js/image-support/scaler.js",
    "../client/js/third-party/ExifRestorer.js",
    "../client/js/total-progress.js",
    "../client/js/paste.js",
    "../client/js/form-support.js",
    "../client/js/traditional/traditional.form.upload.handler.js",
    "../client/js/traditional/traditional.xhr.upload.handler.js",
    "../client/js/traditional/all-chunks-done.ajax.requester.js",
    "../client/js/dnd.js",
    "../client/js/uploader.api.js",
    "../client/js/uploader.js",
    "../client/js/templating.js",
    "../client/js/ui.handler.events.js",
    "../client/js/ui.handler.click.filebuttons.js",
    "../client/js/ui.handler.click.filename.js",
    "../client/js/ui.handler.focusin.filenameinput.js",
    "../client/js/ui.handler.focus.filenameinput.js",
    "../client/js/ui.handler.edit.filename.js"
  ],
  "names": [
    "global",
    "$",
    "init",
    "options",
    "xformedOpts",
    "transformVariables",
    "newUploaderInstance",
    "getNewUploaderInstance",
    "uploader",
    "addCallbacks",
    "$el",
    "params",
    "uploaderType",
    "pluginOption",
    "namespace",
    "charAt",
    "toUpperCase",
    "slice",
    "toLowerCase",
    "qq",
    "FineUploader",
    "dataStore",
    "key",
    "val",
    "data",
    "undefined",
    "instanceToStore",
    "option",
    "optionVal",
    "transformedOpts",
    "callbacks",
    "each",
    "_options",
    "prop",
    "nonJqueryCallback",
    "name",
    "callbackEventTarget",
    "exec",
    "substring",
    "nonJqueryCallbackRetVal",
    "jqueryEventCallbackRetVal",
    "originalArgs",
    "Array",
    "prototype",
    "call",
    "arguments",
    "transformedArgs",
    "idx",
    "arg",
    "push",
    "maybeWrapInJquery",
    "apply",
    "this",
    "triggerHandler",
    "error",
    "log",
    "message",
    "source",
    "dest",
    "xformed",
    "arrayVals",
    "element",
    "inArray",
    "pluginOptions",
    "isPlainObject",
    "isArray",
    "arrayVal",
    "arrayObjDest",
    "merge",
    "isValidCommand",
    "command",
    "type",
    "match",
    "delegateCommand",
    "retVal",
    "xformedArgs",
    "origArgs",
    "transformedVal",
    "nodeType",
    "cloneNode",
    "fn",
    "fineUploader",
    "optionsOrCommand",
    "self",
    "selfArgs",
    "retVals",
    "index",
    "el",
    "length",
    "jQuery",
    "dropZoneElements",
    "dnd",
    "DragAndDrop",
    "rootDataKey",
    "func",
    "$callbackEl",
    "args",
    "jqueryHandlerResult",
    "fineUploaderDnd",
    "hide",
    "style",
    "display",
    "attach",
    "addEventListener",
    "attachEvent",
    "detach",
    "removeEventListener",
    "detachEvent",
    "contains",
    "descendant",
    "compareDocumentPosition",
    "insertBefore",
    "elementB",
    "parentNode",
    "remove",
    "removeChild",
    "css",
    "styles",
    "Error",
    "opacity",
    "filter",
    "Math",
    "round",
    "extend",
    "hasClass",
    "considerParent",
    "re",
    "RegExp",
    "test",
    "className",
    "addClass",
    "removeClass",
    "replace",
    "getByClass",
    "first",
    "candidates",
    "result",
    "querySelector",
    "querySelectorAll",
    "getElementsByTagName",
    "getFirstByClass",
    "children",
    "child",
    "firstChild",
    "nextSibling",
    "setText",
    "text",
    "innerText",
    "textContent",
    "clearText",
    "hasAttribute",
    "attrName",
    "attrVal",
    "getAttribute",
    "canvasToBlob",
    "canvas",
    "mime",
    "quality",
    "dataUriToBlob",
    "toDataURL",
    "dataUri",
    "arrayBuffer",
    "byteString",
    "intArray",
    "mimeString",
    "createBlob",
    "BlobBuilder",
    "window",
    "WebKitBlobBuilder",
    "MozBlobBuilder",
    "MSBlobBuilder",
    "blobBuilder",
    "append",
    "getBlob",
    "Blob",
    "split",
    "indexOf",
    "atob",
    "decodeURI",
    "ArrayBuffer",
    "Uint8Array",
    "character",
    "charCodeAt",
    "level",
    "console",
    "isObject",
    "variable",
    "Object",
    "toString",
    "isFunction",
    "value",
    "buffer",
    "constructor",
    "isItemList",
    "maybeItemList",
    "isNodeList",
    "maybeNodeList",
    "item",
    "namedItem",
    "isString",
    "maybeString",
    "trimStr",
    "string",
    "String",
    "trim",
    "format",
    "str",
    "newStr",
    "nextIdxToReplace",
    "strBefore",
    "strAfter",
    "isFile",
    "maybeFile",
    "File",
    "isFileList",
    "maybeFileList",
    "FileList",
    "isFileOrInput",
    "maybeFileOrInput",
    "isInput",
    "maybeInput",
    "notFile",
    "evaluateType",
    "normalizedType",
    "HTMLInputElement",
    "tagName",
    "isBlob",
    "maybeBlob",
    "isXhrUploadSupported",
    "input",
    "document",
    "createElement",
    "multiple",
    "FormData",
    "createXhrInstance",
    "upload",
    "XMLHttpRequest",
    "ActiveXObject",
    "isFolderDropSupported",
    "dataTransfer",
    "items",
    "webkitGetAsEntry",
    "isFileChunkingSupported",
    "androidStock",
    "webkitSlice",
    "mozSlice",
    "sliceBlob",
    "fileOrBlob",
    "start",
    "end",
    "slicer",
    "arrayBufferToHex",
    "bytesAsHex",
    "bytes",
    "byt",
    "byteAsHexStr",
    "readBlobToHex",
    "blob",
    "startOffset",
    "initialBlob",
    "fileReader",
    "FileReader",
    "promise",
    "Promise",
    "onload",
    "success",
    "onerror",
    "failure",
    "readAsArrayBuffer",
    "second",
    "extendNested",
    "override",
    "target",
    "sourceFn",
    "super_",
    "srcPropName",
    "srcPropVal",
    "arr",
    "elt",
    "from",
    "len",
    "hasOwnProperty",
    "getUniqueId",
    "c",
    "r",
    "random",
    "v",
    "ie",
    "navigator",
    "userAgent",
    "ie7",
    "ie8",
    "ie10",
    "ie11",
    "edge",
    "safari",
    "vendor",
    "chrome",
    "opera",
    "firefox",
    "windows",
    "platform",
    "android",
    "ios6",
    "ios",
    "ios7",
    "ios8",
    "ios800",
    "iosChrome",
    "iosSafari",
    "iosSafariWebView",
    "preventDefault",
    "e",
    "returnValue",
    "toElement",
    "div",
    "html",
    "innerHTML",
    "iterableItem",
    "callback",
    "keyOrIndex",
    "Storage",
    "getItem",
    "bind",
    "oldFunc",
    "context",
    "newArgs",
    "concat",
    "obj2url",
    "obj",
    "temp",
    "prefixDone",
    "uristrings",
    "prefix",
    "add",
    "nextObj",
    "i",
    "nextTemp",
    "encodeURIComponent",
    "join",
    "obj2FormData",
    "formData",
    "arrayKeyName",
    "obj2Inputs",
    "form",
    "setAttribute",
    "appendChild",
    "parseJson",
    "json",
    "JSON",
    "parse",
    "eval",
    "getExtension",
    "filename",
    "extIdx",
    "lastIndexOf",
    "substr",
    "getFilename",
    "blobOrFileInput",
    "fileName",
    "DisposeSupport",
    "disposers",
    "dispose",
    "disposer",
    "shift",
    "addDisposer",
    "disposeFunction",
    "define",
    "amd",
    "module",
    "exports",
    "version",
    "supportedFeatures",
    "testSupportsFileInputElement",
    "tempInput",
    "supported",
    "disabled",
    "ex",
    "isChrome21OrHigher",
    "isChrome14OrHigher",
    "isCrossOriginXhrSupported",
    "xhr",
    "withCredentials",
    "isXdrSupported",
    "XDomainRequest",
    "isCrossOriginAjaxSupported",
    "isFolderSelectionSupported",
    "webkitdirectory",
    "isLocalStorageSupported",
    "localStorage",
    "setItem",
    "isDragAndDropSupported",
    "span",
    "supportsUploading",
    "supportsUploadingBlobs",
    "supportsFileDrop",
    "supportsAjaxFileUploading",
    "supportsFolderDrop",
    "supportsChunking",
    "supportsResume",
    "supportsUploadViaPaste",
    "supportsUploadCors",
    "supportsDeleteFileXdr",
    "supportsDeleteFileCorsXhr",
    "supportsDeleteFileCors",
    "supportsFolderSelection",
    "supportsImagePreviews",
    "supportsUploadProgress",
    "postMessage",
    "ajaxUploading",
    "blobUploading",
    "canDetermineSize",
    "chunking",
    "deleteFileCors",
    "deleteFileCorsXdr",
    "deleteFileCorsXhr",
    "dialogElement",
    "HTMLDialogElement",
    "fileDrop",
    "folderDrop",
    "folderSelection",
    "imagePreviews",
    "imageValidation",
    "itemSizeValidation",
    "pause",
    "progressBar",
    "resume",
    "scaling",
    "tiffPreviews",
    "unlimitedScaledImageSize",
    "uploading",
    "uploadCors",
    "uploadCustomHeaders",
    "uploadNonMultipart",
    "uploadViaPaste",
    "isGenericPromise",
    "maybePromise",
    "then",
    "successArgs",
    "failureArgs",
    "successCallbacks",
    "failureCallbacks",
    "doneCallbacks",
    "state",
    "onSuccess",
    "onFailure",
    "done",
    "BlobProxy",
    "referenceBlob",
    "onCreate",
    "create",
    "UploadButton",
    "o",
    "createInput",
    "BUTTON_ID_ATTR_NAME",
    "buttonId",
    "title",
    "setMultiple",
    "folders",
    "acceptFiles",
    "position",
    "right",
    "top",
    "fontFamily",
    "fontSize",
    "margin",
    "padding",
    "cursor",
    "height",
    "disposeSupport",
    "onChange",
    "hoverClass",
    "focusClass",
    "ios8BrowserCrashWorkaround",
    "overflow",
    "direction",
    "getInput",
    "getButtonId",
    "isMultiple",
    "optInput",
    "removeAttribute",
    "setAcceptFiles",
    "reset",
    "UploadData",
    "uploaderProxy",
    "getDataByIds",
    "idOrIds",
    "entries",
    "id",
    "getDataByUuids",
    "uuids",
    "uuid",
    "byUuid",
    "getDataByStatus",
    "status",
    "statusResults",
    "statuses",
    "statusEnum",
    "statusResultIndexes",
    "byStatus",
    "dataIndex",
    "byProxyGroupId",
    "byBatchId",
    "addFile",
    "spec",
    "SUBMITTING",
    "originalName",
    "size",
    "batchId",
    "proxyGroupId",
    "onStatusChange",
    "retrieve",
    "optionalFilter",
    "setStatus",
    "newStatus",
    "oldStatus",
    "byStatusOldStatusIndex",
    "splice",
    "uuidChanged",
    "newUuid",
    "oldUuid",
    "updateName",
    "newName",
    "updateSize",
    "newSize",
    "setParentId",
    "targetId",
    "parentId",
    "getIdsInProxyGroup",
    "getIdsInBatch",
    "SUBMITTED",
    "REJECTED",
    "QUEUED",
    "CANCELED",
    "PAUSED",
    "UPLOADING",
    "UPLOAD_RETRYING",
    "UPLOAD_SUCCESSFUL",
    "UPLOAD_FAILED",
    "DELETE_FAILED",
    "DELETING",
    "DELETED",
    "basePublicApi",
    "addBlobs",
    "blobDataOrArray",
    "endpoint",
    "addFiles",
    "addInitialFiles",
    "cannedFileList",
    "cannedFile",
    "_addCannedFile",
    "_maybeHandleIos8SafariWorkaround",
    "_storedIds",
    "_currentBatchId",
    "processBlob",
    "_handleNewFile",
    "blobs",
    "defaultName",
    "verifiedFiles",
    "processBlobData",
    "blobData",
    "processCanvas",
    "processCanvasData",
    "canvasData",
    "normalizedQuality",
    "processFileOrInput",
    "fileOrInput",
    "files",
    "file",
    "normalizeData",
    "fileContainer",
    "_prepareItemsForUpload",
    "cancel",
    "_handler",
    "cancelAll",
    "storedIdsCopy",
    "storedFileId",
    "clearStoredFiles",
    "continueUpload",
    "uploadData",
    "_uploadData",
    "enabled",
    "getName",
    "_uploadFile",
    "deleteFile",
    "_onSubmitDelete",
    "doesExist",
    "fileOrBlobId",
    "isValid",
    "drawThumbnail",
    "fileId",
    "imgOrCanvas",
    "maxSize",
    "fromServer",
    "customResizeFunction",
    "fileOrUrl",
    "promiseToReturn",
    "_imageGenerator",
    "_thumbnailUrls",
    "scale",
    "getFile",
    "container",
    "generate",
    "modifiedContainer",
    "reason",
    "getButton",
    "_getButton",
    "_buttonIdsForFileIds",
    "getEndpoint",
    "_endpointStore",
    "get",
    "getInProgress",
    "getParentId",
    "uploadDataEntry",
    "getUploads",
    "getResumableFilesData",
    "getSize",
    "getNetUploads",
    "_netUploaded",
    "getRemainingAllowedItems",
    "allowedItems",
    "_currentItemLimit",
    "_netUploadedOrQueued",
    "getUuid",
    "debug",
    "pauseUpload",
    "removeFileRef",
    "expunge",
    "_autoRetries",
    "_retryTimeouts",
    "_preventRetries",
    "_buttons",
    "button",
    "_paramsStore",
    "_pasteHandler",
    "session",
    "refreshOnReset",
    "_refreshSessionData",
    "_succeededSinceLastAllComplete",
    "_failedSinceLastAllComplete",
    "_totalProgress",
    "retry",
    "_manualRetry",
    "scaleImage",
    "specs",
    "Scaler",
    "setCustomHeaders",
    "headers",
    "_customHeadersStore",
    "set",
    "setDeleteFileCustomHeaders",
    "_deleteFileCustomHeadersStore",
    "setDeleteFileEndpoint",
    "_deleteFileEndpointStore",
    "setDeleteFileParams",
    "_deleteFileParamsStore",
    "setEndpoint",
    "setForm",
    "elementOrId",
    "_updateFormSupportAndParams",
    "setItemLimit",
    "newItemLimit",
    "setName",
    "setParams",
    "setUuid",
    "fileRecord",
    "_onDeleteComplete",
    "errorMessage",
    "uploadStoredFiles",
    "_itemError",
    "_uploadStoredFiles",
    "basePrivateApi",
    "sessionData",
    "deleteFileEndpoint",
    "deleteFileParams",
    "thumbnailUrl",
    "_annotateWithButtonId",
    "associatedInput",
    "qqButtonId",
    "_getButtonId",
    "_batchError",
    "onError",
    "_createDeleteHandler",
    "DeleteFileAjaxRequester",
    "method",
    "maxConnections",
    "uuidParamName",
    "request",
    "uuidName",
    "customHeaders",
    "paramsStore",
    "endpointStore",
    "cors",
    "onDelete",
    "_onDelete",
    "onDeleteComplete",
    "xhrOrXdr",
    "isError",
    "_createPasteHandler",
    "PasteSupport",
    "targetElement",
    "paste",
    "pasteReceived",
    "_handleCheckedCallback",
    "onPasteReceived",
    "_handlePasteSuccess",
    "identifier",
    "_createStore",
    "initialValue",
    "_readOnlyValues_",
    "store",
    "catchall",
    "perIdReadOnlyValues",
    "readOnlyValues",
    "copy",
    "orig",
    "getReadOnlyValues",
    "includeReadOnlyValues",
    "existing",
    "values",
    "addReadOnly",
    "_createUploadDataTracker",
    "_onUploadStatusChange",
    "_maybeAllComplete",
    "setTimeout",
    "_createUploadButton",
    "allowMultiple",
    "workarounds",
    "iosEmptyVideos",
    "_isAllowedExtension",
    "allowedExtensions",
    "accept",
    "validation",
    "classes",
    "buttonFocus",
    "buttonHover",
    "ios8BrowserCrash",
    "inputName",
    "_onInputChange",
    "fileInputTitle",
    "_disposeSupport",
    "_createUploadHandler",
    "additionalOptions",
    "lastOnProgress",
    "preventRetryParam",
    "preventRetryResponseProperty",
    "onProgress",
    "loaded",
    "total",
    "_onProgress",
    "onComplete",
    "_onComplete",
    "onCancel",
    "cancelFinalizationEffort",
    "_onCancel",
    "onUploadPrep",
    "_onUploadPrep",
    "onUpload",
    "_onUpload",
    "onUploadChunk",
    "chunkData",
    "_onUploadChunk",
    "onUploadChunkSuccess",
    "onResume",
    "onAutoRetry",
    "responseJSON",
    "_onAutoRetry",
    "onUuidChanged",
    "setSize",
    "_setSize",
    "getDataByUuid",
    "isQueued",
    "UploadHandlerController",
    "_fileOrBlobRejected",
    "_formatSize",
    "sizeSymbols",
    "max",
    "toFixed",
    "_generateExtraButtonSpecs",
    "_extraButtonSpecs",
    "extraButtons",
    "extraButtonOptionEntry",
    "extraButtonSpec",
    "_initExtraButton",
    "extraButtonsSpec",
    "_defaultButtonId",
    "buttonOrFileInputOrFile",
    "inputs",
    "fileInput",
    "fileBlobOrInput",
    "_getNotFinished",
    "_getValidationBase",
    "_getValidationDescriptor",
    "fileWrapper",
    "_getValidationDescriptors",
    "fileWrappers",
    "fileDescriptors",
    "_handleCameraAccess",
    "camera",
    "acceptIosCamera",
    "optionRoot",
    "details",
    "callbackRetVal",
    "successParam",
    "newFileWrapperList",
    "actualFile",
    "handler",
    "_customNewFileHandler",
    "_handleNewFileGeneric",
    "addFileToHandler",
    "_trackButton",
    "fileList",
    "extSuppliedName",
    "extension",
    "_handleDeleteSuccess",
    "_handleDeleteFailed",
    "_initFormSupportAndParams",
    "_formSupport",
    "FormSupport",
    "attachedToForm",
    "getFormInputsAsObject",
    "autoUpload",
    "newAutoUpload",
    "newEndpoint",
    "_isDeletePossible",
    "expected",
    "allowXdr",
    "allowed",
    "valid",
    "allowedExt",
    "extRegex",
    "code",
    "maybeNameOrNames",
    "replacement",
    "extensionsForMessage",
    "placeholderMatch",
    "messages",
    "names",
    "validationBase",
    "allowedExtension",
    "formatFileName",
    "sizeLimit",
    "minSizeLimit",
    "placeholder",
    "_onBeforeManualRetry",
    "notFinished",
    "_onAllComplete",
    "ios8SafariUploads",
    "alert",
    "unsupportedBrowserIos8Safari",
    "_maybeParseAndSendUploadError",
    "response",
    "errorReason",
    "defaultResponseError",
    "_maybeProcessNextItemAfterOnValidateCallback",
    "validItem",
    "stopOnFirstInvalidFile",
    "validationDescriptor",
    "onValidate",
    "_onValidateCallbackSuccess",
    "_onValidateCallbackFailure",
    "successful",
    "failed",
    "onAllComplete",
    "_shouldAutoRetry",
    "retryWaitPeriod",
    "autoAttemptDelay",
    "_onBeforeAutoRetry",
    "itemLimit",
    "onManualRetry",
    "clearTimeout",
    "storedItemIndex",
    "fileIndex",
    "onIndividualProgress",
    "_onSubmit",
    "_onSubmitCallbackSuccess",
    "_onSubmitted",
    "onSubmitted",
    "_storeForLater",
    "onSuccessCallback",
    "additionalMandatedParams",
    "adjustedOnSuccessCallback",
    "onSubmitDelete",
    "_deleteHandler",
    "sendDelete",
    "_onTotalProgress",
    "onTotalProgress",
    "_onValidateBatchCallbackFailure",
    "_onValidateBatchCallbackSuccess",
    "validationDescriptors",
    "proposedNetFilesUploadedOrQueued",
    "tooManyItemsError",
    "nextIndex",
    "_validateFileOrBlobData",
    "_upload",
    "onValidateBatch",
    "_preventLeaveInProgress",
    "event",
    "onLeave",
    "Session",
    "_session",
    "addFileRecord",
    "refresh",
    "_sessionRequestComplete",
    "onSessionRequestComplete",
    "onNewSize",
    "enableAuto",
    "maxAutoAttempts",
    "formElementOrId",
    "onSubmit",
    "idToUpload",
    "stillSubmitting",
    "validityChecker",
    "allowEmpty",
    "ImageValidation",
    "validate",
    "image",
    "errorCode",
    "_wrapCallbacks",
    "safeCallback",
    "errorMsg",
    "exception",
    "callbackName",
    "callbackFunc",
    "FineUploaderBasic",
    "disableCancelForFormUploads",
    "filenameParam",
    "forceMultipart",
    "paramsInBody",
    "totalFileSizeName",
    "maxHeight",
    "maxWidth",
    "minHeight",
    "minWidth",
    "maybeXhr",
    "maybeXhrOrXdr",
    "attemptNumber",
    "fileOrBlobData",
    "typeError",
    "sizeError",
    "minSizeError",
    "emptyError",
    "noFilesError",
    "maxHeightImageError",
    "maxWidthImageError",
    "minHeightImageError",
    "minWidthImageError",
    "retryFailTooManyItems",
    "concurrent",
    "mandatory",
    "paramNames",
    "partIndex",
    "partByteOffset",
    "chunkSize",
    "totalFileSize",
    "totalParts",
    "partSize",
    "recordsExpireIn",
    "resuming",
    "fileOrBlobName",
    "sendCredentials",
    "interceptSubmit",
    "customResizer",
    "sendOriginal",
    "orient",
    "defaultType",
    "defaultQuality",
    "failureText",
    "includeExif",
    "sizes",
    "ImageGenerator",
    "_scaler",
    "handleNewFile",
    "TotalProgress",
    "entry",
    "AjaxRequester",
    "isSimpleMethod",
    "containsNonSimpleHeaders",
    "containsNonSimple",
    "header",
    "isXdr",
    "getCorsAjaxTransport",
    "ontimeout",
    "onprogress",
    "getXhrOrXdr",
    "suppliedXhr",
    "requestData",
    "dequeue",
    "nextId",
    "queue",
    "sendRequest",
    "xdrError",
    "isResponseSuccessful",
    "getParams",
    "onDemandParams",
    "additionalParams",
    "mandatedParams",
    "optXhr",
    "url",
    "payload",
    "onSend",
    "createUrl",
    "additionalQueryParams",
    "getXdrLoadHandler",
    "getXdrErrorHandler",
    "onreadystatechange",
    "getXhrReadyStateChangeHandler",
    "registerForUploadProgress",
    "open",
    "setHeaders",
    "send",
    "shouldParamsBeInQueryString",
    "contentType",
    "stringify",
    "addToPath",
    "readyState",
    "lengthComputable",
    "onDemandHeaders",
    "additionalHeaders",
    "allHeaders",
    "acceptHeader",
    "setRequestHeader",
    "allowXRequestedWithAndCacheControl",
    "responseCode",
    "successfulResponseCodes",
    "prepareToSend",
    "validMethods",
    "DELETE",
    "PATCH",
    "POST",
    "PUT",
    "GET",
    "initTransport",
    "path",
    "cacheBuster",
    "withPath",
    "appendToPath",
    "withParams",
    "withQueryParams",
    "_additionalQueryParams_",
    "withHeaders",
    "withPayload",
    "thePayload",
    "withCacheBuster",
    "qqtimestamp",
    "Date",
    "getTime",
    "canceled",
    "UploadHandler",
    "proxy",
    "fileState",
    "fileItem",
    "onCancelRetVal",
    "getThirdPartyFileId",
    "_getFileState",
    "_setThirdPartyFileId",
    "thirdPartyFileId",
    "_wasCanceled",
    "preventRetryResponse",
    "controller",
    "chunkingPossible",
    "concurrentChunkingPossible",
    "chunked",
    "chunkIdx",
    "_getChunkData",
    "attemptingResume",
    "chunkProgress",
    "_getChunkDataForCallback",
    "finalize",
    "finalizeChunks",
    "normaizedResponse",
    "normalizeResponse",
    "_maybeDeletePersistedChunkData",
    "cleanup",
    "handleFailure",
    "clearCachedChunk",
    "inProgressIdx",
    "responseToReport",
    "inProgress",
    "remaining",
    "unshift",
    "ignoreFailure",
    "keys",
    "_getXhrs",
    "ckid",
    "ckXhr",
    "abort",
    "_cancelled",
    "moveInProgressToRemaining",
    "connectionManager",
    "free",
    "hasMoreParts",
    "nextPart",
    "nextIdx",
    "_getTotalChunks",
    "reevaluateChunking",
    "sendNext",
    "inProgressChunks",
    "available",
    "uploadChunk",
    "inProgressChunkIdx",
    "_maybePersistChunkedState",
    "clearXhr",
    "_open",
    "_openChunks",
    "_waiting",
    "openChunkEntriesCount",
    "openChunksCount",
    "openChunkIndexes",
    "dontAllowNext",
    "allowNext",
    "waitingIndex",
    "connectionsIndex",
    "getProxyOrBlob",
    "getWaitingOrConnected",
    "waitingOrConnected",
    "chunks",
    "parseInt",
    "isUsingConnection",
    "pop",
    "openChunksEntry",
    "simple",
    "uploadFile",
    "maybeNewUuid",
    "_clearXhrs",
    "getProxy",
    "initHandler",
    "handlerType",
    "traditional",
    "handlerModuleSubtype",
    "_removeExpiredChunkingRecords",
    "isDeferredEligibleForUpload",
    "maybeDefer",
    "generatedBlob",
    "updateBlob",
    "maybeSendDeferredFiles",
    "errorResponse",
    "idsInGroup",
    "uploadedThisId",
    "idInGroup",
    "now",
    "originalResponse",
    "_shouldChunkThisFile",
    "blobToUpload",
    "cancelRetVal",
    "isProxied",
    "isResumable",
    "WindowReceiveMessage",
    "callbackWrapperDetachers",
    "receiveMessage",
    "onMessageCallbackWrapper",
    "stopReceivingMessages",
    "detacher",
    "FormUploadHandler",
    "expungeFile",
    "detachLoadEvents",
    "isCors",
    "postMessageCallbackTimers",
    "corsMessageReceiver",
    "iframe",
    "getElementById",
    "_getIframeName",
    "getFileIdForIframeName",
    "iframeName",
    "initIframeForUpload",
    "body",
    "registerPostMessageCallback",
    "onloadCallbacks",
    "onloadCallback",
    "_parseJsonResponse",
    "_detachLoadEvent",
    "formHandlerInstanceId",
    "_attachLoadEvent",
    "responseDescriptor",
    "contentDocument",
    "_createIframe",
    "_initFormForUpload",
    "targetName",
    "innerHtmlOrMessage",
    "XhrUploadHandler",
    "xhrId",
    "ajaxRequester",
    "_getAjaxRequester",
    "chunkFiles",
    "resumeEnabled",
    "blobOrProxy",
    "_initTempState",
    "_maybePrepareForResume",
    "cachedChunks",
    "tempState",
    "xhrs",
    "ajaxRequesters",
    "responseParser",
    "lastChunkIdx",
    "_getXhr",
    "resumableFilesData",
    "_iterateResumeRecords",
    "notResumable",
    "optInProgress",
    "optRemaining",
    "reverse",
    "paused",
    "totalChunks",
    "parts",
    "newBlob",
    "chunkId",
    "_createXhr",
    "optChunkIdx",
    "_registerXhr",
    "chunkIndex",
    "fileSize",
    "startBytes",
    "endBytes",
    "part",
    "count",
    "startByte",
    "endByte",
    "_getLocalStorageId",
    "formatVersion",
    "_getMimeType",
    "_getPersistableData",
    "ceil",
    "_markNotResumable",
    "localStorageId",
    "removeItem",
    "persistedData",
    "lastUpdated",
    "_registerProgressHandler",
    "progressCalculator",
    "totalSuccessfullyLoadedForFile",
    "loadedForRequest",
    "totalForRequest",
    "estActualChunkLoaded",
    "totalLoadedForFile",
    "chunkLoaded",
    "optAjaxRequester",
    "xhrsId",
    "expirationDays",
    "expirationDate",
    "setDate",
    "getDate",
    "getMandatedParams",
    "_method",
    "requester",
    "detectSubsampling",
    "img",
    "ctx",
    "iw",
    "naturalWidth",
    "ih",
    "naturalHeight",
    "width",
    "getContext",
    "drawImage",
    "getImageData",
    "detectVerticalSquash",
    "alpha",
    "ratio",
    "sy",
    "ey",
    "py",
    "renderImageToDataURL",
    "doSquash",
    "renderImageToCanvas",
    "maybeCalculateDownsampledDimensions",
    "maxPixels",
    "origHeight",
    "origWidth",
    "newHeight",
    "sqrt",
    "newWidth",
    "modifiedDimensions",
    "save",
    "resize",
    "renderImageToCanvasWithCustomResizer",
    "imageHeight",
    "imageWidth",
    "orientation",
    "targetHeight",
    "targetWidth",
    "transformCoordinate",
    "tmpCtx",
    "sx",
    "dx",
    "d",
    "tmpCanvas",
    "vertSquashRatio",
    "dw",
    "dh",
    "dy",
    "clearRect",
    "restore",
    "qqImageRendered",
    "resizeInfo",
    "sourceCanvas",
    "sourceCanvasContext",
    "targetCanvas",
    "translate",
    "rotate",
    "PI",
    "MegaPixImage",
    "srcImage",
    "errorCallback",
    "Image",
    "URL",
    "createObjectURL",
    "webkitURL",
    "src",
    "listeners",
    "imageLoadListeners",
    "render",
    "opt",
    "imgWidth",
    "imgHeight",
    "optionsKey",
    "optionsValue",
    "oldTargetSrc",
    "onrender",
    "isImg",
    "isCanvas",
    "isImgCorsSupported",
    "crossOrigin",
    "isCanvasSupported",
    "determineMimeOfFileName",
    "nameWithPath",
    "pathSegments",
    "isCrossOrigin",
    "targetProtocol",
    "targetHostname",
    "targetPort",
    "targetAnchor",
    "href",
    "protocol",
    "port",
    "hostname",
    "location",
    "registerImgLoadListeners",
    "registerCanvasDrawImageListener",
    "registerThumbnailRenderedListener",
    "registered",
    "draw",
    "drawPreview",
    "Identify",
    "megapixErrorHandler",
    "isPreviewable",
    "dummyExif",
    "exif",
    "Exif",
    "mpImg",
    "Orientation",
    "failureMsg",
    "drawOnCanvasOrImgFromUrl",
    "canvasOrImg",
    "tempImg",
    "tempImgRender",
    "drawOnImgFromUrlWithCssScaling",
    "drawFromUrl",
    "fileBlobOrUrl",
    "_testing",
    "parseLittleEndian",
    "hex",
    "pow",
    "seekToApp1",
    "offset",
    "theOffset",
    "thePromise",
    "segmentLength",
    "getApp1Offset",
    "isLittleEndian",
    "app1Start",
    "getDirEntryCount",
    "littleEndian",
    "getIfd",
    "dirEntries",
    "getDirEntries",
    "ifdHex",
    "getTagValues",
    "TAG_VAL_OFFSET",
    "tagsToFind",
    "TAG_IDS",
    "vals",
    "tagValHex",
    "tagValLength",
    "idHex",
    "tagsToFindIdx",
    "TAG_INFO",
    "274",
    "parser",
    "onParseFailure",
    "app1Offset",
    "dirEntryCount",
    "tagValues",
    "isIdentifiable",
    "magicBytes",
    "questionableBytes",
    "identifiable",
    "magicBytesEntries",
    "magicBytesArrayEntry",
    "previewable",
    "isPreviewableSync",
    "PREVIEWABLE_MIME_TYPES",
    "fileMime",
    "isRecognizedImage",
    "image/jpeg",
    "image/gif",
    "image/png",
    "image/bmp",
    "image/tiff",
    "hasNonZeroLimits",
    "limits",
    "atLeastOne",
    "limit",
    "getWidthHeight",
    "sizeDetermination",
    "getFailingLimit",
    "dimensions",
    "failingLimit",
    "limitName",
    "limitValue",
    "limitMatcher",
    "dimensionPropName",
    "actualValue",
    "validationEffort",
    "isJsonResponseValid",
    "handleFileItems",
    "fileItems",
    "someItemsIgnored",
    "err",
    "refreshEffort",
    "refreshCompleteCallback",
    "requesterOptions",
    "SessionAjaxRequester",
    "queryServer",
    "responseText",
    "includeOriginal",
    "failedToScaleText",
    "_getSortedSizes",
    "getFileRecords",
    "originalFileUuid",
    "originalFileName",
    "originalBlobOrBlobData",
    "records",
    "originalBlob",
    "sizeRecord",
    "outputType",
    "_determineOutputType",
    "requestedType",
    "refType",
    "_getName",
    "_generateScaledImage",
    "failedText",
    "api",
    "scaledIds",
    "originalId",
    "record",
    "blobSize",
    "scaledId",
    "qqparentuuid",
    "qqparentsize",
    "param",
    "scalingEffort",
    "scalingOptions",
    "scaler",
    "referenceType",
    "scaledVersionProperties",
    "startOfExt",
    "versionType",
    "scaledName",
    "scaledExt",
    "nameAppendage",
    "sort",
    "a",
    "b",
    "sourceFile",
    "imageGenerator",
    "scaledImageDataUri",
    "signalSuccess",
    "_insertExifHeader",
    "scaledImageDataUriWithExif",
    "originalImage",
    "reader",
    "insertionEffort",
    "originalImageDataUri",
    "ExifRestorer",
    "readAsDataURL",
    "_dataUriToBlob",
    "_createBlob",
    "KEY_STR",
    "encode64",
    "chr1",
    "chr2",
    "enc1",
    "enc2",
    "enc3",
    "output",
    "chr3",
    "enc4",
    "isNaN",
    "origFileBase64",
    "resizedFileBase64",
    "expectedBase64Header",
    "rawImage",
    "decode64",
    "segments",
    "slice2Segments",
    "exifManipulation",
    "exifArray",
    "getExifArray",
    "newImageArray",
    "insertExif",
    "aBuffer",
    "seg",
    "x",
    "imageData",
    "buf",
    "separatePoint",
    "mae",
    "ato",
    "array",
    "rawImageArray",
    "head",
    "endPoint",
    "base64test",
    "perFileProgress",
    "totalLoaded",
    "totalSize",
    "lastLoadedSent",
    "lastTotalSent",
    "callbackProxy",
    "noRetryableFiles",
    "retryable",
    "none",
    "failedId",
    "updateTotalProgress",
    "onNew",
    "newLoaded",
    "newTotal",
    "oldLoaded",
    "oldTotal",
    "isImage",
    "registerPasteHandler",
    "detachPasteHandler",
    "clipboardData",
    "getAsFile",
    "unregisterPasteHandler",
    "startUpload",
    "determineNewEndpoint",
    "formEl",
    "validateForm",
    "nativeSubmit",
    "checkValidity",
    "maybeUploadOnSubmit",
    "submit",
    "determineFormEl",
    "_form2Obj",
    "notIrrelevantType",
    "irrelevantTypes",
    "radioOrCheckbox",
    "ignoreValue",
    "checked",
    "selectValue",
    "select",
    "selected",
    "elements",
    "getIframeContentJson",
    "doc",
    "innerHtml",
    "contentWindow",
    "nodeValue",
    "createForm",
    "responseFromMessage",
    "multipart",
    "addChunkingSpecificParams",
    "allChunksDoneRequester",
    "AllChunksDoneAjaxRequester",
    "createReadyStateChangedHandler",
    "onUploadOrChunkComplete",
    "getChunksCompleteParams",
    "isErrorUploadResponse",
    "parseResponse",
    "sendChunksCompleteRequest",
    "complete",
    "setParamsAndGetEntityToSend",
    "setUploadHeaders",
    "extraHeaders",
    "toSend",
    "promises",
    "endpointHandler",
    "uploadDroppedFiles",
    "uploadDropZone",
    "filesAsArray",
    "dropLog",
    "dropDisabled",
    "processingDroppedFilesComplete",
    "getElement",
    "traverseFileTree",
    "parseEntryPromise",
    "fullPath",
    "indexOfNameInFullPath",
    "qqPath",
    "droppedFiles",
    "fileError",
    "isDirectory",
    "getFilesInDirectory",
    "entriesLeft",
    "accumEntries",
    "existingPromise",
    "dirReader",
    "createReader",
    "readEntries",
    "newEntries",
    "handleDataTransfer",
    "pendingFolderPromises",
    "handleDataTransferPromise",
    "processingDroppedFiles",
    "allowMultipleItems",
    "dropError",
    "setupDropzone",
    "dropArea",
    "dropZone",
    "UploadDropZone",
    "HIDE_ZONES_EVENT_NAME",
    "onEnter",
    "dropActive",
    "stopPropagation",
    "onLeaveNotDescendants",
    "onDrop",
    "HIDE_BEFORE_ENTER_ATTR",
    "uploadDropZones",
    "isFileDrag",
    "dragEvent",
    "fileDrag",
    "types",
    "leavingDocumentOut",
    "relatedTarget",
    "y",
    "setupDragDrop",
    "dropZones",
    "maybeHideDropZones",
    "HTMLElement",
    "setupExtraDropzone",
    "removeDropzone",
    "dzs",
    "targetEl",
    "errorSpecifics",
    "dragoverShouldBeCanceled",
    "disableDropOutside",
    "dropOutsideDisabled",
    "dropEffect",
    "isValidFileDrag",
    "effectTest",
    "dt",
    "isSafari",
    "effectAllowed",
    "isOrSetDropDisabled",
    "isDisabled",
    "preventDrop",
    "triggerHidezonesEvent",
    "triggerUsingOldApi",
    "hideZonesEvent",
    "createEvent",
    "initEvent",
    "CustomEvent",
    "dispatchEvent",
    "attachEvents",
    "effect",
    "elementFromPoint",
    "clientX",
    "clientY",
    "uiPublicApi",
    "_parent",
    "_templating",
    "addCacheToDom",
    "clearFiles",
    "addExtraDropzone",
    "_dnd",
    "removeExtraDropzone",
    "getItemByFileId",
    "isHiddenForever",
    "getFileContainer",
    "_setupDragAndDrop",
    "_totalFilesInBatch",
    "_filesInBatchAddedToUi",
    "_setupClickAndEditEventHandlers",
    "formattedFilename",
    "updateFilename",
    "uploadPaused",
    "continued",
    "uploadContinued",
    "getId",
    "fileContainerOrChildEl",
    "getFileId",
    "getDropTarget",
    "qqDropTarget",
    "uiPrivateApi",
    "_removeFileItem",
    "removeFile",
    "_fileButtonsClickHandler",
    "FileButtonsClickHandler",
    "_bindFileButtonsClickEvent",
    "_focusinEventSupported",
    "_isEditFilenameEnabled",
    "_filenameClickHandler",
    "_bindFilenameClickEvent",
    "_filenameInputFocusInHandler",
    "_bindFilenameInputFocusInEvent",
    "_filenameInputFocusHandler",
    "_bindFilenameInputFocusEvent",
    "dragAndDrop",
    "extraDropzones",
    "templating",
    "defaultDropZone",
    "getDropZone",
    "showDropProcessing",
    "hideDropProcessing",
    "errorData",
    "lvl",
    "onDeleteFile",
    "onRetry",
    "onPause",
    "onContinue",
    "onGetName",
    "isEditFilenamePossible",
    "FilenameClickHandler",
    "FilenameInputFocusHandler",
    "_filenameEditHandler",
    "onGetUploadStatus",
    "onSetName",
    "onEditingStatusChange",
    "isEditing",
    "qqInput",
    "getEditInput",
    "qqFileContainer",
    "hideFilename",
    "hideEditIcon",
    "showFilename",
    "showEditIcon",
    "markFilenameEditable",
    "hideRetry",
    "setStatusText",
    "_classes",
    "retrying",
    "hidePause",
    "FilenameInputFocusInHandler",
    "hideSpinner",
    "resetTotalProgress",
    "reportDirectoryPaths",
    "qqpath",
    "_addToList",
    "addHandler",
    "updateProgress",
    "hideCancel",
    "hideProgress",
    "waitingForResponse",
    "_displayFileSize",
    "completeUpload",
    "_markFileAsSuccessful",
    "fail",
    "showCancel",
    "isRetryPossible",
    "showRetry",
    "_controlFailureTextDisplay",
    "parentRetVal",
    "newResult",
    "showDeleteButton",
    "_maybeUpdateThumbnail",
    "showSpinner",
    "allowPause",
    "retryNumForDisplay",
    "maxAuto",
    "retryNote",
    "_showCancelLink",
    "showAutoRetryNote",
    "autoRetryNote",
    "resetProgress",
    "_onSubmitDeleteSuccess",
    "forceConfirm",
    "_showDeleteConfirm",
    "_sendDeleteRequest",
    "deletingFailedText",
    "hideDeleteButton",
    "deletingStatusText",
    "confirmMessage",
    "deleteRequestArgs",
    "showConfirm",
    "canned",
    "prependData",
    "prependIndex",
    "dontDisplay",
    "hideScaled",
    "prependFiles",
    "disableCancel",
    "_handledProxyGroup",
    "_clearList",
    "addFileToCache",
    "updateThumbnail",
    "thumbnails",
    "generatePreview",
    "fileSizeOnSubmit",
    "loadedSize",
    "sizeForDisplay",
    "_formatProgress",
    "uploadedSize",
    "formatProgress",
    "mode",
    "responseProperty",
    "failureReason",
    "failedUploadTextDisplay",
    "failUpload",
    "enableTooltip",
    "_showTooltip",
    "showMessage",
    "_setupPastePrompt",
    "namePromptMessage",
    "defaultVal",
    "showPrompt",
    "fileStatus",
    "placeholders",
    "waitUntilResponse",
    "listElement",
    "template",
    "editable",
    "tooManyFilesError",
    "unsupportedBrowser",
    "promptForName",
    "maxCount",
    "notAvailablePath",
    "waitingPath",
    "timeBetweenThumbs",
    "hasDialog",
    "showDialog",
    "confirm",
    "defaultValue",
    "prompt",
    "Templating",
    "templateIdOrEl",
    "containerEl",
    "fileContainerEl",
    "maxThumbs",
    "waitUntilUpdate",
    "thumbnailNotAvailable",
    "waitingForThumbnail",
    "renderFailure",
    "isEditElementsExist",
    "isRetryElementExist",
    "templateHtml",
    "showThumbnails",
    "serverScale",
    "FILE_ID_ATTR",
    "FILE_CLASS_PREFIX",
    "THUMBNAIL_MAX_SIZE_ATTR",
    "THUMBNAIL_SERVER_SCALE_ATTR",
    "HIDE_DROPZONE_ATTR",
    "DROPZPONE_TEXT_ATTR",
    "IN_PROGRESS_CLASS",
    "HIDDEN_FOREVER_CLASS",
    "fileBatch",
    "content",
    "createDocumentFragment",
    "map",
    "isCancelDisabled",
    "generatedThumbnails",
    "thumbnailQueueMonitorRunning",
    "thumbGenerationQueue",
    "thumbnailMaxSize",
    "selectorClasses",
    "alertDialog",
    "dialogCancelButton",
    "confirmDialog",
    "dialogMessage",
    "dialogOkButton",
    "promptDialog",
    "drop",
    "list",
    "progressBarContainer",
    "totalProgressBarContainer",
    "totalProgressBar",
    "spinner",
    "continueButton",
    "deleteButton",
    "statusText",
    "editFilenameInput",
    "editNameIcon",
    "dropText",
    "dropProcessing",
    "dropProcessingSpinner",
    "thumbnail",
    "previewGeneration",
    "cachedThumbnailNotAvailableImg",
    "cachedWaitingForThumbnailImg",
    "cacheThumbnailPlaceholders",
    "notAvailableUrl",
    "waitingUrl",
    "updatedImg",
    "displayWaitingImg",
    "waitingImgPlacement",
    "maybeScalePlaceholderViaCss",
    "show",
    "generateNewPreview",
    "getThumbnail",
    "qqThumbnailId",
    "maybeSetDisplayNotAvailableImg",
    "generateNextQueuedPreview",
    "queuedThumbRequest",
    "update",
    "processUpdateQueuedPreviewRequest",
    "processNewQueuedPreviewRequest",
    "getCancel",
    "getTemplateEl",
    "getContinue",
    "getDialog",
    "getDelete",
    "getDropProcessing",
    "getEditIcon",
    "getPause",
    "getProgress",
    "getRetry",
    "getSpinner",
    "cssClass",
    "previewing",
    "notAvailableImgPlacement",
    "parseAndGetTemplate",
    "scriptEl",
    "scriptHtml",
    "fileListNode",
    "tempTemplateEl",
    "fileListHtml",
    "defaultButton",
    "dropTextEl",
    "uploaderEl",
    "fileTemplate",
    "prependFile",
    "parentEl",
    "beforeEl",
    "optFileOrBlob",
    "relatedThumbnailId",
    "useCachedPreview",
    "showWaitingImg",
    "setProgressBarWidth",
    "percent",
    "bar",
    "progressBarSelector",
    "targetThumbnailId",
    "cachedThumbnailId",
    "targetThumbnail",
    "cachedThumbnail",
    "hideTotalProgress",
    "cantRenderEl",
    "prependInfo",
    "hideForever",
    "batch",
    "thumb",
    "fileEl",
    "fileNameEl",
    "waitingImg",
    "currentNode",
    "getFileList",
    "filenameEl",
    "isFileName",
    "icon",
    "isEditIcon",
    "isEditInput",
    "isCancel",
    "allowContinueButton",
    "isPause",
    "isContinueButton",
    "isDeleteButton",
    "isRetry",
    "textEl",
    "dialog",
    "messageEl",
    "inputEl",
    "cancelBtn",
    "okBtn",
    "closeHandler",
    "cancelClickHandler",
    "okClickHandler",
    "close",
    "showModal",
    "UiEventHandler",
    "s",
    "protectedApi",
    "eventType",
    "srcElement",
    "onHandled",
    "attachTo",
    "getFileIdFromItem",
    "qqFileId",
    "getDisposeSupport",
    "examineEvent",
    "buttonHandlers",
    "buttonType",
    "firstLetterCapButtonType",
    "inheritedInternalApi",
    "handleFilenameEdit",
    "FilenameEditHandler",
    "handleInputFocus",
    "getFilenameSansExtension",
    "filenameSansExt",
    "getOriginalExtension",
    "origName",
    "handleNameUpdate",
    "newFilenameInputEl",
    "origExtension",
    "registerInputBlurHandler",
    "registerInputEnterKeyHandler",
    "keyCode",
    "which",
    "focusInput",
    "focus"
  ],
  "mappings": "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",
  "file": "jquery.fine-uploader.min.js",
  "sourcesContent": [
    null,
    "/*globals jQuery, qq*/\n(function($) {\n    \"use strict\";\n    var $el,\n        pluginOptions = [\"uploaderType\", \"endpointType\"];\n\n    function init(options) {\n        var xformedOpts = transformVariables(options || {}),\n            newUploaderInstance = getNewUploaderInstance(xformedOpts);\n\n        uploader(newUploaderInstance);\n        addCallbacks(xformedOpts, newUploaderInstance);\n\n        return $el;\n    }\n\n    function getNewUploaderInstance(params) {\n        var uploaderType = pluginOption(\"uploaderType\"),\n            namespace = pluginOption(\"endpointType\");\n\n        // If the integrator has defined a specific type of uploader to load, use that, otherwise assume `qq.FineUploader`\n        if (uploaderType) {\n            // We can determine the correct constructor function to invoke by combining \"FineUploader\"\n            // with the upper camel cased `uploaderType` value.\n            uploaderType = uploaderType.charAt(0).toUpperCase() + uploaderType.slice(1).toLowerCase();\n\n            if (namespace) {\n                return new qq[namespace][\"FineUploader\" + uploaderType](params);\n            }\n\n            return new qq[\"FineUploader\" + uploaderType](params);\n        }\n        else {\n            if (namespace) {\n                return new qq[namespace].FineUploader(params);\n            }\n\n            return new qq.FineUploader(params);\n        }\n    }\n\n    function dataStore(key, val) {\n        var data = $el.data(\"fineuploader\");\n\n        if (val) {\n            if (data === undefined) {\n                data = {};\n            }\n            data[key] = val;\n            $el.data(\"fineuploader\", data);\n        }\n        else {\n            if (data === undefined) {\n                return null;\n            }\n            return data[key];\n        }\n    }\n\n    //the underlying Fine Uploader instance is stored in jQuery's data stored, associated with the element\n    // tied to this instance of the plug-in\n    function uploader(instanceToStore) {\n        return dataStore(\"uploader\", instanceToStore);\n    }\n\n    function pluginOption(option, optionVal) {\n        return dataStore(option, optionVal);\n    }\n\n    // Implement all callbacks defined in Fine Uploader as functions that trigger appropriately names events and\n    // return the result of executing the bound handler back to Fine Uploader\n    function addCallbacks(transformedOpts, newUploaderInstance) {\n        var callbacks = transformedOpts.callbacks = {};\n\n        $.each(newUploaderInstance._options.callbacks, function(prop, nonJqueryCallback) {\n            var name, callbackEventTarget;\n\n            name = /^on(\\w+)/.exec(prop)[1];\n            name = name.substring(0, 1).toLowerCase() + name.substring(1);\n            callbackEventTarget = $el;\n\n            callbacks[prop] = function() {\n                var originalArgs = Array.prototype.slice.call(arguments),\n                    transformedArgs = [],\n                    nonJqueryCallbackRetVal, jqueryEventCallbackRetVal;\n\n                $.each(originalArgs, function(idx, arg) {\n                    transformedArgs.push(maybeWrapInJquery(arg));\n                });\n\n                nonJqueryCallbackRetVal = nonJqueryCallback.apply(this, originalArgs);\n\n                try {\n                    jqueryEventCallbackRetVal = callbackEventTarget.triggerHandler(name, transformedArgs);\n                }\n                catch (error) {\n                    qq.log(\"Caught error in Fine Uploader jQuery event handler: \" + error.message, \"error\");\n                }\n\n                /*jshint -W116*/\n                if (nonJqueryCallbackRetVal != null) {\n                    return nonJqueryCallbackRetVal;\n                }\n                return jqueryEventCallbackRetVal;\n            };\n        });\n\n        newUploaderInstance._options.callbacks = callbacks;\n    }\n\n    //transform jQuery objects into HTMLElements, and pass along all other option properties\n    function transformVariables(source, dest) {\n        var xformed, arrayVals;\n\n        if (dest === undefined) {\n            if (source.uploaderType !== \"basic\") {\n                xformed = { element: $el[0] };\n            }\n            else {\n                xformed = {};\n            }\n        }\n        else {\n            xformed = dest;\n        }\n\n        $.each(source, function(prop, val) {\n            if ($.inArray(prop, pluginOptions) >= 0) {\n                pluginOption(prop, val);\n            }\n            else if (val instanceof $) {\n                xformed[prop] = val[0];\n            }\n            else if ($.isPlainObject(val)) {\n                xformed[prop] = {};\n                transformVariables(val, xformed[prop]);\n            }\n            else if ($.isArray(val)) {\n                arrayVals = [];\n                $.each(val, function(idx, arrayVal) {\n                    var arrayObjDest = {};\n\n                    if (arrayVal instanceof $) {\n                        $.merge(arrayVals, arrayVal);\n                    }\n                    else if ($.isPlainObject(arrayVal)) {\n                        transformVariables(arrayVal, arrayObjDest);\n                        arrayVals.push(arrayObjDest);\n                    }\n                    else {\n                        arrayVals.push(arrayVal);\n                    }\n                });\n                xformed[prop] = arrayVals;\n            }\n            else {\n                xformed[prop] = val;\n            }\n        });\n\n        if (dest === undefined) {\n            return xformed;\n        }\n    }\n\n    function isValidCommand(command) {\n        return $.type(command) === \"string\" &&\n            !command.match(/^_/) && //enforce private methods convention\n            uploader()[command] !== undefined;\n    }\n\n    // Assuming we have already verified that this is a valid command, call the associated function in the underlying\n    // Fine Uploader instance (passing along the arguments from the caller) and return the result of the call back to the caller\n    function delegateCommand(command) {\n        var xformedArgs = [],\n            origArgs = Array.prototype.slice.call(arguments, 1),\n            retVal;\n\n        transformVariables(origArgs, xformedArgs);\n\n        retVal = uploader()[command].apply(uploader(), xformedArgs);\n\n        return maybeWrapInJquery(retVal);\n    }\n\n    // If the value is an `HTMLElement` or `HTMLDocument`, wrap it in a `jQuery` object\n    function maybeWrapInJquery(val) {\n        var transformedVal = val;\n\n        // If the command is returning an `HTMLElement` or `HTMLDocument`, wrap it in a `jQuery` object\n        /*jshint -W116*/\n        if (val != null && typeof val === \"object\" &&\n           (val.nodeType === 1 || val.nodeType === 9) && val.cloneNode) {\n\n            transformedVal = $(val);\n        }\n\n        return transformedVal;\n    }\n\n    $.fn.fineUploader = function(optionsOrCommand) {\n        var self = this, selfArgs = arguments, retVals = [];\n\n        this.each(function(index, el) {\n            $el = $(el);\n\n            if (uploader() && isValidCommand(optionsOrCommand)) {\n                retVals.push(delegateCommand.apply(self, selfArgs));\n\n                if (self.length === 1) {\n                    return false;\n                }\n            }\n            else if (typeof optionsOrCommand === \"object\" || !optionsOrCommand) {\n                init.apply(self, selfArgs);\n            }\n            else {\n                $.error(\"Method \" +  optionsOrCommand + \" does not exist on jQuery.fineUploader\");\n            }\n        });\n\n        if (retVals.length === 1) {\n            return retVals[0];\n        }\n        else if (retVals.length > 1) {\n            return retVals;\n        }\n\n        return this;\n    };\n\n}(jQuery));\n",
    "/*globals jQuery, qq*/\n(function($) {\n    \"use strict\";\n    var rootDataKey = \"fineUploaderDnd\",\n        $el;\n\n    function init(options) {\n        if (!options) {\n            options = {};\n        }\n\n        options.dropZoneElements = [$el];\n        var xformedOpts = transformVariables(options);\n        addCallbacks(xformedOpts);\n        dnd(new qq.DragAndDrop(xformedOpts));\n\n        return $el;\n    }\n\n    function dataStore(key, val) {\n        var data = $el.data(rootDataKey);\n\n        if (val) {\n            if (data === undefined) {\n                data = {};\n            }\n            data[key] = val;\n            $el.data(rootDataKey, data);\n        }\n        else {\n            if (data === undefined) {\n                return null;\n            }\n            return data[key];\n        }\n    }\n\n    function dnd(instanceToStore) {\n        return dataStore(\"dndInstance\", instanceToStore);\n    }\n\n    function addCallbacks(transformedOpts) {\n        var callbacks = transformedOpts.callbacks = {};\n\n        $.each(new qq.DragAndDrop.callbacks(), function(prop, func) {\n            var name = prop,\n                $callbackEl;\n\n            $callbackEl = $el;\n\n            callbacks[prop] = function() {\n                var args = Array.prototype.slice.call(arguments),\n                    jqueryHandlerResult = $callbackEl.triggerHandler(name, args);\n\n                return jqueryHandlerResult;\n            };\n        });\n    }\n\n    //transform jQuery objects into HTMLElements, and pass along all other option properties\n    function transformVariables(source, dest) {\n        var xformed, arrayVals;\n\n        if (dest === undefined) {\n            xformed = {};\n        }\n        else {\n            xformed = dest;\n        }\n\n        $.each(source, function(prop, val) {\n            if (val instanceof $) {\n                xformed[prop] = val[0];\n            }\n            else if ($.isPlainObject(val)) {\n                xformed[prop] = {};\n                transformVariables(val, xformed[prop]);\n            }\n            else if ($.isArray(val)) {\n                arrayVals = [];\n                $.each(val, function(idx, arrayVal) {\n                    if (arrayVal instanceof $) {\n                        $.merge(arrayVals, arrayVal);\n                    }\n                    else {\n                        arrayVals.push(arrayVal);\n                    }\n                });\n                xformed[prop] = arrayVals;\n            }\n            else {\n                xformed[prop] = val;\n            }\n        });\n\n        if (dest === undefined) {\n            return xformed;\n        }\n    }\n\n    function isValidCommand(command) {\n        return $.type(command) === \"string\" &&\n            command === \"dispose\" &&\n            dnd()[command] !== undefined;\n    }\n\n    function delegateCommand(command) {\n        var xformedArgs = [], origArgs = Array.prototype.slice.call(arguments, 1);\n        transformVariables(origArgs, xformedArgs);\n        return dnd()[command].apply(dnd(), xformedArgs);\n    }\n\n    $.fn.fineUploaderDnd = function(optionsOrCommand) {\n        var self = this, selfArgs = arguments, retVals = [];\n\n        this.each(function(index, el) {\n            $el = $(el);\n\n            if (dnd() && isValidCommand(optionsOrCommand)) {\n                retVals.push(delegateCommand.apply(self, selfArgs));\n\n                if (self.length === 1) {\n                    return false;\n                }\n            }\n            else if (typeof optionsOrCommand === \"object\" || !optionsOrCommand) {\n                init.apply(self, selfArgs);\n            }\n            else {\n                $.error(\"Method \" +  optionsOrCommand + \" does not exist in Fine Uploader's DnD module.\");\n            }\n        });\n\n        if (retVals.length === 1) {\n            return retVals[0];\n        }\n        else if (retVals.length > 1) {\n            return retVals;\n        }\n\n        return this;\n    };\n\n}(jQuery));\n",
    "/*globals window, navigator, document, FormData, File, HTMLInputElement, XMLHttpRequest, Blob, Storage, ActiveXObject */\n/* jshint -W079 */\nvar qq = function(element) {\n    \"use strict\";\n\n    return {\n        hide: function() {\n            element.style.display = \"none\";\n            return this;\n        },\n\n        /** Returns the function which detaches attached event */\n        attach: function(type, fn) {\n            if (element.addEventListener) {\n                element.addEventListener(type, fn, false);\n            } else if (element.attachEvent) {\n                element.attachEvent(\"on\" + type, fn);\n            }\n            return function() {\n                qq(element).detach(type, fn);\n            };\n        },\n\n        detach: function(type, fn) {\n            if (element.removeEventListener) {\n                element.removeEventListener(type, fn, false);\n            } else if (element.attachEvent) {\n                element.detachEvent(\"on\" + type, fn);\n            }\n            return this;\n        },\n\n        contains: function(descendant) {\n            // The [W3C spec](http://www.w3.org/TR/domcore/#dom-node-contains)\n            // says a `null` (or ostensibly `undefined`) parameter\n            // passed into `Node.contains` should result in a false return value.\n            // IE7 throws an exception if the parameter is `undefined` though.\n            if (!descendant) {\n                return false;\n            }\n\n            // compareposition returns false in this case\n            if (element === descendant) {\n                return true;\n            }\n\n            if (element.contains) {\n                return element.contains(descendant);\n            } else {\n                /*jslint bitwise: true*/\n                return !!(descendant.compareDocumentPosition(element) & 8);\n            }\n        },\n\n        /**\n         * Insert this element before elementB.\n         */\n        insertBefore: function(elementB) {\n            elementB.parentNode.insertBefore(element, elementB);\n            return this;\n        },\n\n        remove: function() {\n            element.parentNode.removeChild(element);\n            return this;\n        },\n\n        /**\n         * Sets styles for an element.\n         * Fixes opacity in IE6-8.\n         */\n        css: function(styles) {\n            /*jshint eqnull: true*/\n            if (element.style == null) {\n                throw new qq.Error(\"Can't apply style to node as it is not on the HTMLElement prototype chain!\");\n            }\n\n            /*jshint -W116*/\n            if (styles.opacity != null) {\n                if (typeof element.style.opacity !== \"string\" && typeof (element.filters) !== \"undefined\") {\n                    styles.filter = \"alpha(opacity=\" + Math.round(100 * styles.opacity) + \")\";\n                }\n            }\n            qq.extend(element.style, styles);\n\n            return this;\n        },\n\n        hasClass: function(name, considerParent) {\n            var re = new RegExp(\"(^| )\" + name + \"( |$)\");\n            return re.test(element.className) || !!(considerParent && re.test(element.parentNode.className));\n        },\n\n        addClass: function(name) {\n            if (!qq(element).hasClass(name)) {\n                element.className += \" \" + name;\n            }\n            return this;\n        },\n\n        removeClass: function(name) {\n            var re = new RegExp(\"(^| )\" + name + \"( |$)\");\n            element.className = element.className.replace(re, \" \").replace(/^\\s+|\\s+$/g, \"\");\n            return this;\n        },\n\n        getByClass: function(className, first) {\n            var candidates,\n                result = [];\n\n            if (first && element.querySelector) {\n                return element.querySelector(\".\" + className);\n            }\n            else if (element.querySelectorAll) {\n                return element.querySelectorAll(\".\" + className);\n            }\n\n            candidates = element.getElementsByTagName(\"*\");\n\n            qq.each(candidates, function(idx, val) {\n                if (qq(val).hasClass(className)) {\n                    result.push(val);\n                }\n            });\n            return first ? result[0] : result;\n        },\n\n        getFirstByClass: function(className) {\n            return qq(element).getByClass(className, true);\n        },\n\n        children: function() {\n            var children = [],\n                child = element.firstChild;\n\n            while (child) {\n                if (child.nodeType === 1) {\n                    children.push(child);\n                }\n                child = child.nextSibling;\n            }\n\n            return children;\n        },\n\n        setText: function(text) {\n            element.innerText = text;\n            element.textContent = text;\n            return this;\n        },\n\n        clearText: function() {\n            return qq(element).setText(\"\");\n        },\n\n        // Returns true if the attribute exists on the element\n        // AND the value of the attribute is NOT \"false\" (case-insensitive)\n        hasAttribute: function(attrName) {\n            var attrVal;\n\n            if (element.hasAttribute) {\n\n                if (!element.hasAttribute(attrName)) {\n                    return false;\n                }\n\n                /*jshint -W116*/\n                return (/^false$/i).exec(element.getAttribute(attrName)) == null;\n            }\n            else {\n                attrVal = element[attrName];\n\n                if (attrVal === undefined) {\n                    return false;\n                }\n\n                /*jshint -W116*/\n                return (/^false$/i).exec(attrVal) == null;\n            }\n        }\n    };\n};\n\n(function() {\n    \"use strict\";\n\n    qq.canvasToBlob = function(canvas, mime, quality) {\n        return qq.dataUriToBlob(canvas.toDataURL(mime, quality));\n    };\n\n    qq.dataUriToBlob = function(dataUri) {\n        var arrayBuffer, byteString,\n            createBlob = function(data, mime) {\n                var BlobBuilder = window.BlobBuilder ||\n                        window.WebKitBlobBuilder ||\n                        window.MozBlobBuilder ||\n                        window.MSBlobBuilder,\n                    blobBuilder = BlobBuilder && new BlobBuilder();\n\n                if (blobBuilder) {\n                    blobBuilder.append(data);\n                    return blobBuilder.getBlob(mime);\n                }\n                else {\n                    return new Blob([data], {type: mime});\n                }\n            },\n            intArray, mimeString;\n\n        // convert base64 to raw binary data held in a string\n        if (dataUri.split(\",\")[0].indexOf(\"base64\") >= 0) {\n            byteString = atob(dataUri.split(\",\")[1]);\n        }\n        else {\n            byteString = decodeURI(dataUri.split(\",\")[1]);\n        }\n\n        // extract the MIME\n        mimeString = dataUri.split(\",\")[0]\n            .split(\":\")[1]\n            .split(\";\")[0];\n\n        // write the bytes of the binary string to an ArrayBuffer\n        arrayBuffer = new ArrayBuffer(byteString.length);\n        intArray = new Uint8Array(arrayBuffer);\n        qq.each(byteString, function(idx, character) {\n            intArray[idx] = character.charCodeAt(0);\n        });\n\n        return createBlob(arrayBuffer, mimeString);\n    };\n\n    qq.log = function(message, level) {\n        if (window.console) {\n            if (!level || level === \"info\") {\n                window.console.log(message);\n            }\n            else\n            {\n                if (window.console[level]) {\n                    window.console[level](message);\n                }\n                else {\n                    window.console.log(\"<\" + level + \"> \" + message);\n                }\n            }\n        }\n    };\n\n    qq.isObject = function(variable) {\n        return variable && !variable.nodeType && Object.prototype.toString.call(variable) === \"[object Object]\";\n    };\n\n    qq.isFunction = function(variable) {\n        return typeof (variable) === \"function\";\n    };\n\n    /**\n     * Check the type of a value.  Is it an \"array\"?\n     *\n     * @param value value to test.\n     * @returns true if the value is an array or associated with an `ArrayBuffer`\n     */\n    qq.isArray = function(value) {\n        return Object.prototype.toString.call(value) === \"[object Array]\" ||\n            (value && window.ArrayBuffer && value.buffer && value.buffer.constructor === ArrayBuffer);\n    };\n\n    // Looks for an object on a `DataTransfer` object that is associated with drop events when utilizing the Filesystem API.\n    qq.isItemList = function(maybeItemList) {\n        return Object.prototype.toString.call(maybeItemList) === \"[object DataTransferItemList]\";\n    };\n\n    // Looks for an object on a `NodeList` or an `HTMLCollection`|`HTMLFormElement`|`HTMLSelectElement`\n    // object that is associated with collections of Nodes.\n    qq.isNodeList = function(maybeNodeList) {\n        return Object.prototype.toString.call(maybeNodeList) === \"[object NodeList]\" ||\n            // If `HTMLCollection` is the actual type of the object, we must determine this\n            // by checking for expected properties/methods on the object\n            (maybeNodeList.item && maybeNodeList.namedItem);\n    };\n\n    qq.isString = function(maybeString) {\n        return Object.prototype.toString.call(maybeString) === \"[object String]\";\n    };\n\n    qq.trimStr = function(string) {\n        if (String.prototype.trim) {\n            return string.trim();\n        }\n\n        return string.replace(/^\\s+|\\s+$/g, \"\");\n    };\n\n    /**\n     * @param str String to format.\n     * @returns {string} A string, swapping argument values with the associated occurrence of {} in the passed string.\n     */\n    qq.format = function(str) {\n\n        var args =  Array.prototype.slice.call(arguments, 1),\n            newStr = str,\n            nextIdxToReplace = newStr.indexOf(\"{}\");\n\n        qq.each(args, function(idx, val) {\n            var strBefore = newStr.substring(0, nextIdxToReplace),\n                strAfter = newStr.substring(nextIdxToReplace + 2);\n\n            newStr = strBefore + val + strAfter;\n            nextIdxToReplace = newStr.indexOf(\"{}\", nextIdxToReplace + val.length);\n\n            // End the loop if we have run out of tokens (when the arguments exceed the # of tokens)\n            if (nextIdxToReplace < 0) {\n                return false;\n            }\n        });\n\n        return newStr;\n    };\n\n    qq.isFile = function(maybeFile) {\n        return window.File && Object.prototype.toString.call(maybeFile) === \"[object File]\";\n    };\n\n    qq.isFileList = function(maybeFileList) {\n        return window.FileList && Object.prototype.toString.call(maybeFileList) === \"[object FileList]\";\n    };\n\n    qq.isFileOrInput = function(maybeFileOrInput) {\n        return qq.isFile(maybeFileOrInput) || qq.isInput(maybeFileOrInput);\n    };\n\n    qq.isInput = function(maybeInput, notFile) {\n        var evaluateType = function(type) {\n            var normalizedType = type.toLowerCase();\n\n            if (notFile) {\n                return normalizedType !== \"file\";\n            }\n\n            return normalizedType === \"file\";\n        };\n\n        if (window.HTMLInputElement) {\n            if (Object.prototype.toString.call(maybeInput) === \"[object HTMLInputElement]\") {\n                if (maybeInput.type && evaluateType(maybeInput.type)) {\n                    return true;\n                }\n            }\n        }\n        if (maybeInput.tagName) {\n            if (maybeInput.tagName.toLowerCase() === \"input\") {\n                if (maybeInput.type && evaluateType(maybeInput.type)) {\n                    return true;\n                }\n            }\n        }\n\n        return false;\n    };\n\n    qq.isBlob = function(maybeBlob) {\n        if (window.Blob && Object.prototype.toString.call(maybeBlob) === \"[object Blob]\") {\n            return true;\n        }\n    };\n\n    qq.isXhrUploadSupported = function() {\n        var input = document.createElement(\"input\");\n        input.type = \"file\";\n\n        return (\n            input.multiple !== undefined &&\n                typeof File !== \"undefined\" &&\n                typeof FormData !== \"undefined\" &&\n                typeof (qq.createXhrInstance()).upload !== \"undefined\");\n    };\n\n    // Fall back to ActiveX is native XHR is disabled (possible in any version of IE).\n    qq.createXhrInstance = function() {\n        if (window.XMLHttpRequest) {\n            return new XMLHttpRequest();\n        }\n\n        try {\n            return new ActiveXObject(\"MSXML2.XMLHTTP.3.0\");\n        }\n        catch (error) {\n            qq.log(\"Neither XHR or ActiveX are supported!\", \"error\");\n            return null;\n        }\n    };\n\n    qq.isFolderDropSupported = function(dataTransfer) {\n        return dataTransfer.items &&\n            dataTransfer.items.length > 0 &&\n            dataTransfer.items[0].webkitGetAsEntry;\n    };\n\n    qq.isFileChunkingSupported = function() {\n        return !qq.androidStock() && //Android's stock browser cannot upload Blobs correctly\n            qq.isXhrUploadSupported() &&\n            (File.prototype.slice !== undefined || File.prototype.webkitSlice !== undefined || File.prototype.mozSlice !== undefined);\n    };\n\n    qq.sliceBlob = function(fileOrBlob, start, end) {\n        var slicer = fileOrBlob.slice || fileOrBlob.mozSlice || fileOrBlob.webkitSlice;\n\n        return slicer.call(fileOrBlob, start, end);\n    };\n\n    qq.arrayBufferToHex = function(buffer) {\n        var bytesAsHex = \"\",\n            bytes = new Uint8Array(buffer);\n\n        qq.each(bytes, function(idx, byt) {\n            var byteAsHexStr = byt.toString(16);\n\n            if (byteAsHexStr.length < 2) {\n                byteAsHexStr = \"0\" + byteAsHexStr;\n            }\n\n            bytesAsHex += byteAsHexStr;\n        });\n\n        return bytesAsHex;\n    };\n\n    qq.readBlobToHex = function(blob, startOffset, length) {\n        var initialBlob = qq.sliceBlob(blob, startOffset, startOffset + length),\n            fileReader = new FileReader(),\n            promise = new qq.Promise();\n\n        fileReader.onload = function() {\n            promise.success(qq.arrayBufferToHex(fileReader.result));\n        };\n\n        fileReader.onerror = promise.failure;\n\n        fileReader.readAsArrayBuffer(initialBlob);\n\n        return promise;\n    };\n\n    qq.extend = function(first, second, extendNested) {\n        qq.each(second, function(prop, val) {\n            if (extendNested && qq.isObject(val)) {\n                if (first[prop] === undefined) {\n                    first[prop] = {};\n                }\n                qq.extend(first[prop], val, true);\n            }\n            else {\n                first[prop] = val;\n            }\n        });\n\n        return first;\n    };\n\n    /**\n     * Allow properties in one object to override properties in another,\n     * keeping track of the original values from the target object.\n     *\n     * Note that the pre-overriden properties to be overriden by the source will be passed into the `sourceFn` when it is invoked.\n     *\n     * @param target Update properties in this object from some source\n     * @param sourceFn A function that, when invoked, will return properties that will replace properties with the same name in the target.\n     * @returns {object} The target object\n     */\n    qq.override = function(target, sourceFn) {\n        var super_ = {},\n            source = sourceFn(super_);\n\n        qq.each(source, function(srcPropName, srcPropVal) {\n            if (target[srcPropName] !== undefined) {\n                super_[srcPropName] = target[srcPropName];\n            }\n\n            target[srcPropName] = srcPropVal;\n        });\n\n        return target;\n    };\n\n    /**\n     * Searches for a given element (elt) in the array, returns -1 if it is not present.\n     */\n    qq.indexOf = function(arr, elt, from) {\n        if (arr.indexOf) {\n            return arr.indexOf(elt, from);\n        }\n\n        from = from || 0;\n        var len = arr.length;\n\n        if (from < 0) {\n            from += len;\n        }\n\n        for (; from < len; from += 1) {\n            if (arr.hasOwnProperty(from) && arr[from] === elt) {\n                return from;\n            }\n        }\n        return -1;\n    };\n\n    //this is a version 4 UUID\n    qq.getUniqueId = function() {\n        return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function(c) {\n            /*jslint eqeq: true, bitwise: true*/\n            var r = Math.random() * 16 | 0, v = c == \"x\" ? r : (r & 0x3 | 0x8);\n            return v.toString(16);\n        });\n    };\n\n    //\n    // Browsers and platforms detection\n    qq.ie = function() {\n        return navigator.userAgent.indexOf(\"MSIE\") !== -1 ||\n            navigator.userAgent.indexOf(\"Trident\") !== -1;\n    };\n\n    qq.ie7 = function() {\n        return navigator.userAgent.indexOf(\"MSIE 7\") !== -1;\n    };\n\n    qq.ie8 = function() {\n        return navigator.userAgent.indexOf(\"MSIE 8\") !== -1;\n    };\n\n    qq.ie10 = function() {\n        return navigator.userAgent.indexOf(\"MSIE 10\") !== -1;\n    };\n\n    qq.ie11 = function() {\n        return qq.ie() && navigator.userAgent.indexOf(\"rv:11\") !== -1;\n    };\n\n    qq.edge = function() {\n        return navigator.userAgent.indexOf(\"Edge\") >= 0;\n    };\n\n    qq.safari = function() {\n        return navigator.vendor !== undefined && navigator.vendor.indexOf(\"Apple\") !== -1;\n    };\n\n    qq.chrome = function() {\n        return navigator.vendor !== undefined && navigator.vendor.indexOf(\"Google\") !== -1;\n    };\n\n    qq.opera = function() {\n        return navigator.vendor !== undefined && navigator.vendor.indexOf(\"Opera\") !== -1;\n    };\n\n    qq.firefox = function() {\n        return (!qq.edge() && !qq.ie11() && navigator.userAgent.indexOf(\"Mozilla\") !== -1 && navigator.vendor !== undefined && navigator.vendor === \"\");\n    };\n\n    qq.windows = function() {\n        return navigator.platform === \"Win32\";\n    };\n\n    qq.android = function() {\n        return navigator.userAgent.toLowerCase().indexOf(\"android\") !== -1;\n    };\n\n    // We need to identify the Android stock browser via the UA string to work around various bugs in this browser,\n    // such as the one that prevents a `Blob` from being uploaded.\n    qq.androidStock = function() {\n        return qq.android() && navigator.userAgent.toLowerCase().indexOf(\"chrome\") < 0;\n    };\n\n    qq.ios6 = function() {\n        return qq.ios() && navigator.userAgent.indexOf(\" OS 6_\") !== -1;\n    };\n\n    qq.ios7 = function() {\n        return qq.ios() && navigator.userAgent.indexOf(\" OS 7_\") !== -1;\n    };\n\n    qq.ios8 = function() {\n        return qq.ios() && navigator.userAgent.indexOf(\" OS 8_\") !== -1;\n    };\n\n    // iOS 8.0.0\n    qq.ios800 = function() {\n        return qq.ios() && navigator.userAgent.indexOf(\" OS 8_0 \") !== -1;\n    };\n\n    qq.ios = function() {\n        /*jshint -W014 */\n        return navigator.userAgent.indexOf(\"iPad\") !== -1\n            || navigator.userAgent.indexOf(\"iPod\") !== -1\n            || navigator.userAgent.indexOf(\"iPhone\") !== -1;\n    };\n\n    qq.iosChrome = function() {\n        return qq.ios() && navigator.userAgent.indexOf(\"CriOS\") !== -1;\n    };\n\n    qq.iosSafari = function() {\n        return qq.ios() && !qq.iosChrome() && navigator.userAgent.indexOf(\"Safari\") !== -1;\n    };\n\n    qq.iosSafariWebView = function() {\n        return qq.ios() && !qq.iosChrome() && !qq.iosSafari();\n    };\n\n    //\n    // Events\n\n    qq.preventDefault = function(e) {\n        if (e.preventDefault) {\n            e.preventDefault();\n        } else {\n            e.returnValue = false;\n        }\n    };\n\n    /**\n     * Creates and returns element from html string\n     * Uses innerHTML to create an element\n     */\n    qq.toElement = (function() {\n        var div = document.createElement(\"div\");\n        return function(html) {\n            div.innerHTML = html;\n            var element = div.firstChild;\n            div.removeChild(element);\n            return element;\n        };\n    }());\n\n    //key and value are passed to callback for each entry in the iterable item\n    qq.each = function(iterableItem, callback) {\n        var keyOrIndex, retVal;\n\n        if (iterableItem) {\n            // Iterate through [`Storage`](http://www.w3.org/TR/webstorage/#the-storage-interface) items\n            if (window.Storage && iterableItem.constructor === window.Storage) {\n                for (keyOrIndex = 0; keyOrIndex < iterableItem.length; keyOrIndex++) {\n                    retVal = callback(iterableItem.key(keyOrIndex), iterableItem.getItem(iterableItem.key(keyOrIndex)));\n                    if (retVal === false) {\n                        break;\n                    }\n                }\n            }\n            // `DataTransferItemList` & `NodeList` objects are array-like and should be treated as arrays\n            // when iterating over items inside the object.\n            else if (qq.isArray(iterableItem) || qq.isItemList(iterableItem) || qq.isNodeList(iterableItem)) {\n                for (keyOrIndex = 0; keyOrIndex < iterableItem.length; keyOrIndex++) {\n                    retVal = callback(keyOrIndex, iterableItem[keyOrIndex]);\n                    if (retVal === false) {\n                        break;\n                    }\n                }\n            }\n            else if (qq.isString(iterableItem)) {\n                for (keyOrIndex = 0; keyOrIndex < iterableItem.length; keyOrIndex++) {\n                    retVal = callback(keyOrIndex, iterableItem.charAt(keyOrIndex));\n                    if (retVal === false) {\n                        break;\n                    }\n                }\n            }\n            else {\n                for (keyOrIndex in iterableItem) {\n                    if (Object.prototype.hasOwnProperty.call(iterableItem, keyOrIndex)) {\n                        retVal = callback(keyOrIndex, iterableItem[keyOrIndex]);\n                        if (retVal === false) {\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n    };\n\n    //include any args that should be passed to the new function after the context arg\n    qq.bind = function(oldFunc, context) {\n        if (qq.isFunction(oldFunc)) {\n            var args =  Array.prototype.slice.call(arguments, 2);\n\n            return function() {\n                var newArgs = qq.extend([], args);\n                if (arguments.length) {\n                    newArgs = newArgs.concat(Array.prototype.slice.call(arguments));\n                }\n                return oldFunc.apply(context, newArgs);\n            };\n        }\n\n        throw new Error(\"first parameter must be a function!\");\n    };\n\n    /**\n     * obj2url() takes a json-object as argument and generates\n     * a querystring. pretty much like jQuery.param()\n     *\n     * how to use:\n     *\n     *    `qq.obj2url({a:'b',c:'d'},'http://any.url/upload?otherParam=value');`\n     *\n     * will result in:\n     *\n     *    `http://any.url/upload?otherParam=value&a=b&c=d`\n     *\n     * @param  Object JSON-Object\n     * @param  String current querystring-part\n     * @return String encoded querystring\n     */\n    qq.obj2url = function(obj, temp, prefixDone) {\n        /*jshint laxbreak: true*/\n        var uristrings = [],\n            prefix = \"&\",\n            add = function(nextObj, i) {\n                var nextTemp = temp\n                    ? (/\\[\\]$/.test(temp)) // prevent double-encoding\n                    ? temp\n                    : temp + \"[\" + i + \"]\"\n                    : i;\n                if ((nextTemp !== \"undefined\") && (i !== \"undefined\")) {\n                    uristrings.push(\n                        (typeof nextObj === \"object\")\n                            ? qq.obj2url(nextObj, nextTemp, true)\n                            : (Object.prototype.toString.call(nextObj) === \"[object Function]\")\n                            ? encodeURIComponent(nextTemp) + \"=\" + encodeURIComponent(nextObj())\n                            : encodeURIComponent(nextTemp) + \"=\" + encodeURIComponent(nextObj)\n                    );\n                }\n            };\n\n        if (!prefixDone && temp) {\n            prefix = (/\\?/.test(temp)) ? (/\\?$/.test(temp)) ? \"\" : \"&\" : \"?\";\n            uristrings.push(temp);\n            uristrings.push(qq.obj2url(obj));\n        } else if ((Object.prototype.toString.call(obj) === \"[object Array]\") && (typeof obj !== \"undefined\")) {\n            qq.each(obj, function(idx, val) {\n                add(val, idx);\n            });\n        } else if ((typeof obj !== \"undefined\") && (obj !== null) && (typeof obj === \"object\")) {\n            qq.each(obj, function(prop, val) {\n                add(val, prop);\n            });\n        } else {\n            uristrings.push(encodeURIComponent(temp) + \"=\" + encodeURIComponent(obj));\n        }\n\n        if (temp) {\n            return uristrings.join(prefix);\n        } else {\n            return uristrings.join(prefix)\n                .replace(/^&/, \"\")\n                .replace(/%20/g, \"+\");\n        }\n    };\n\n    qq.obj2FormData = function(obj, formData, arrayKeyName) {\n        if (!formData) {\n            formData = new FormData();\n        }\n\n        qq.each(obj, function(key, val) {\n            key = arrayKeyName ? arrayKeyName + \"[\" + key + \"]\" : key;\n\n            if (qq.isObject(val)) {\n                qq.obj2FormData(val, formData, key);\n            }\n            else if (qq.isFunction(val)) {\n                formData.append(key, val());\n            }\n            else {\n                formData.append(key, val);\n            }\n        });\n\n        return formData;\n    };\n\n    qq.obj2Inputs = function(obj, form) {\n        var input;\n\n        if (!form) {\n            form = document.createElement(\"form\");\n        }\n\n        qq.obj2FormData(obj, {\n            append: function(key, val) {\n                input = document.createElement(\"input\");\n                input.setAttribute(\"name\", key);\n                input.setAttribute(\"value\", val);\n                form.appendChild(input);\n            }\n        });\n\n        return form;\n    };\n\n    /**\n     * Not recommended for use outside of Fine Uploader since this falls back to an unchecked eval if JSON.parse is not\n     * implemented.  For a more secure JSON.parse polyfill, use Douglas Crockford's json2.js.\n     */\n    qq.parseJson = function(json) {\n        /*jshint evil: true*/\n        if (window.JSON && qq.isFunction(JSON.parse)) {\n            return JSON.parse(json);\n        } else {\n            return eval(\"(\" + json + \")\");\n        }\n    };\n\n    /**\n     * Retrieve the extension of a file, if it exists.\n     *\n     * @param filename\n     * @returns {string || undefined}\n     */\n    qq.getExtension = function(filename) {\n        var extIdx = filename.lastIndexOf(\".\") + 1;\n\n        if (extIdx > 0) {\n            return filename.substr(extIdx, filename.length - extIdx);\n        }\n    };\n\n    qq.getFilename = function(blobOrFileInput) {\n        /*jslint regexp: true*/\n\n        if (qq.isInput(blobOrFileInput)) {\n            // get input value and remove path to normalize\n            return blobOrFileInput.value.replace(/.*(\\/|\\\\)/, \"\");\n        }\n        else if (qq.isFile(blobOrFileInput)) {\n            if (blobOrFileInput.fileName !== null && blobOrFileInput.fileName !== undefined) {\n                return blobOrFileInput.fileName;\n            }\n        }\n\n        return blobOrFileInput.name;\n    };\n\n    /**\n     * A generic module which supports object disposing in dispose() method.\n     * */\n    qq.DisposeSupport = function() {\n        var disposers = [];\n\n        return {\n            /** Run all registered disposers */\n            dispose: function() {\n                var disposer;\n                do {\n                    disposer = disposers.shift();\n                    if (disposer) {\n                        disposer();\n                    }\n                }\n                while (disposer);\n            },\n\n            /** Attach event handler and register de-attacher as a disposer */\n            attach: function() {\n                var args = arguments;\n                /*jslint undef:true*/\n                this.addDisposer(qq(args[0]).attach.apply(this, Array.prototype.slice.call(arguments, 1)));\n            },\n\n            /** Add disposer to the collection */\n            addDisposer: function(disposeFunction) {\n                disposers.push(disposeFunction);\n            }\n        };\n    };\n}());\n",
    "/* globals define, module, global, qq */\n(function() {\n    \"use strict\";\n    if (typeof define === \"function\" && define.amd) {\n        define(function() {\n            return qq;\n        });\n    }\n    else if (typeof module !== \"undefined\" && module.exports) {\n        module.exports = qq;\n    }\n    else {\n        global.qq = qq;\n    }\n}());\n",
    "/* globals qq */\n/**\n * Fine Uploader top-level Error container.  Inherits from `Error`.\n */\n(function() {\n    \"use strict\";\n\n    qq.Error = function(message) {\n        this.message = \"[Fine Uploader \" + qq.version + \"] \" + message;\n    };\n\n    qq.Error.prototype = new Error();\n}());\n",
    "/*global qq */\nqq.version = \"5.14.1\";\n",
    "/* globals qq */\nqq.supportedFeatures = (function() {\n    \"use strict\";\n\n    var supportsUploading,\n        supportsUploadingBlobs,\n        supportsFileDrop,\n        supportsAjaxFileUploading,\n        supportsFolderDrop,\n        supportsChunking,\n        supportsResume,\n        supportsUploadViaPaste,\n        supportsUploadCors,\n        supportsDeleteFileXdr,\n        supportsDeleteFileCorsXhr,\n        supportsDeleteFileCors,\n        supportsFolderSelection,\n        supportsImagePreviews,\n        supportsUploadProgress;\n\n    function testSupportsFileInputElement() {\n        var supported = true,\n            tempInput;\n\n        try {\n            tempInput = document.createElement(\"input\");\n            tempInput.type = \"file\";\n            qq(tempInput).hide();\n\n            if (tempInput.disabled) {\n                supported = false;\n            }\n        }\n        catch (ex) {\n            supported = false;\n        }\n\n        return supported;\n    }\n\n    //only way to test for Filesystem API support since webkit does not expose the DataTransfer interface\n    function isChrome21OrHigher() {\n        return (qq.chrome() || qq.opera()) &&\n            navigator.userAgent.match(/Chrome\\/[2][1-9]|Chrome\\/[3-9][0-9]/) !== undefined;\n    }\n\n    //only way to test for complete Clipboard API support at this time\n    function isChrome14OrHigher() {\n        return (qq.chrome() || qq.opera()) &&\n            navigator.userAgent.match(/Chrome\\/[1][4-9]|Chrome\\/[2-9][0-9]/) !== undefined;\n    }\n\n    //Ensure we can send cross-origin `XMLHttpRequest`s\n    function isCrossOriginXhrSupported() {\n        if (window.XMLHttpRequest) {\n            var xhr = qq.createXhrInstance();\n\n            //Commonly accepted test for XHR CORS support.\n            return xhr.withCredentials !== undefined;\n        }\n\n        return false;\n    }\n\n    //Test for (terrible) cross-origin ajax transport fallback for IE9 and IE8\n    function isXdrSupported() {\n        return window.XDomainRequest !== undefined;\n    }\n\n    // CORS Ajax requests are supported if it is either possible to send credentialed `XMLHttpRequest`s,\n    // or if `XDomainRequest` is an available alternative.\n    function isCrossOriginAjaxSupported() {\n        if (isCrossOriginXhrSupported()) {\n            return true;\n        }\n\n        return isXdrSupported();\n    }\n\n    function isFolderSelectionSupported() {\n        // We know that folder selection is only supported in Chrome via this proprietary attribute for now\n        return document.createElement(\"input\").webkitdirectory !== undefined;\n    }\n\n    function isLocalStorageSupported() {\n        try {\n            return !!window.localStorage &&\n                // unpatched versions of IE10/11 have buggy impls of localStorage where setItem is a string\n                qq.isFunction(window.localStorage.setItem);\n        }\n        catch (error) {\n            // probably caught a security exception, so no localStorage for you\n            return false;\n        }\n    }\n\n    function isDragAndDropSupported() {\n        var span = document.createElement(\"span\");\n\n        return (\"draggable\" in span || (\"ondragstart\" in span && \"ondrop\" in span)) &&\n            !qq.android() && !qq.ios();\n    }\n\n    supportsUploading = testSupportsFileInputElement();\n\n    supportsAjaxFileUploading = supportsUploading && qq.isXhrUploadSupported();\n\n    supportsUploadingBlobs = supportsAjaxFileUploading && !qq.androidStock();\n\n    supportsFileDrop = supportsAjaxFileUploading && isDragAndDropSupported();\n\n    supportsFolderDrop = supportsFileDrop && isChrome21OrHigher();\n\n    supportsChunking = supportsAjaxFileUploading && qq.isFileChunkingSupported();\n\n    supportsResume = supportsAjaxFileUploading && supportsChunking && isLocalStorageSupported();\n\n    supportsUploadViaPaste = supportsAjaxFileUploading && isChrome14OrHigher();\n\n    supportsUploadCors = supportsUploading && (window.postMessage !== undefined || supportsAjaxFileUploading);\n\n    supportsDeleteFileCorsXhr = isCrossOriginXhrSupported();\n\n    supportsDeleteFileXdr = isXdrSupported();\n\n    supportsDeleteFileCors = isCrossOriginAjaxSupported();\n\n    supportsFolderSelection = isFolderSelectionSupported();\n\n    supportsImagePreviews = supportsAjaxFileUploading && window.FileReader !== undefined;\n\n    supportsUploadProgress = (function() {\n        if (supportsAjaxFileUploading) {\n            return !qq.androidStock() && !qq.iosChrome();\n        }\n        return false;\n    }());\n\n    return {\n        ajaxUploading: supportsAjaxFileUploading,\n        blobUploading: supportsUploadingBlobs,\n        canDetermineSize: supportsAjaxFileUploading,\n        chunking: supportsChunking,\n        deleteFileCors: supportsDeleteFileCors,\n        deleteFileCorsXdr: supportsDeleteFileXdr, //NOTE: will also return true in IE10, where XDR is also supported\n        deleteFileCorsXhr: supportsDeleteFileCorsXhr,\n        dialogElement: !!window.HTMLDialogElement,\n        fileDrop: supportsFileDrop,\n        folderDrop: supportsFolderDrop,\n        folderSelection: supportsFolderSelection,\n        imagePreviews: supportsImagePreviews,\n        imageValidation: supportsImagePreviews,\n        itemSizeValidation: supportsAjaxFileUploading,\n        pause: supportsChunking,\n        progressBar: supportsUploadProgress,\n        resume: supportsResume,\n        scaling: supportsImagePreviews && supportsUploadingBlobs,\n        tiffPreviews: qq.safari(), // Not the best solution, but simple and probably accurate enough (for now)\n        unlimitedScaledImageSize: !qq.ios(), // false simply indicates that there is some known limit\n        uploading: supportsUploading,\n        uploadCors: supportsUploadCors,\n        uploadCustomHeaders: supportsAjaxFileUploading,\n        uploadNonMultipart: supportsAjaxFileUploading,\n        uploadViaPaste: supportsUploadViaPaste\n    };\n\n}());\n",
    "/*globals qq*/\n\n// Is the passed object a promise instance?\nqq.isGenericPromise = function(maybePromise) {\n    \"use strict\";\n    return !!(maybePromise && maybePromise.then && qq.isFunction(maybePromise.then));\n};\n\nqq.Promise = function() {\n    \"use strict\";\n\n    var successArgs, failureArgs,\n        successCallbacks = [],\n        failureCallbacks = [],\n        doneCallbacks = [],\n        state = 0;\n\n    qq.extend(this, {\n        then: function(onSuccess, onFailure) {\n            if (state === 0) {\n                if (onSuccess) {\n                    successCallbacks.push(onSuccess);\n                }\n                if (onFailure) {\n                    failureCallbacks.push(onFailure);\n                }\n            }\n            else if (state === -1) {\n                onFailure && onFailure.apply(null, failureArgs);\n            }\n            else if (onSuccess) {\n                onSuccess.apply(null, successArgs);\n            }\n\n            return this;\n        },\n\n        done: function(callback) {\n            if (state === 0) {\n                doneCallbacks.push(callback);\n            }\n            else {\n                callback.apply(null, failureArgs === undefined ? successArgs : failureArgs);\n            }\n\n            return this;\n        },\n\n        success: function() {\n            state = 1;\n            successArgs = arguments;\n\n            if (successCallbacks.length) {\n                qq.each(successCallbacks, function(idx, callback) {\n                    callback.apply(null, successArgs);\n                });\n            }\n\n            if (doneCallbacks.length) {\n                qq.each(doneCallbacks, function(idx, callback) {\n                    callback.apply(null, successArgs);\n                });\n            }\n\n            return this;\n        },\n\n        failure: function() {\n            state = -1;\n            failureArgs = arguments;\n\n            if (failureCallbacks.length) {\n                qq.each(failureCallbacks, function(idx, callback) {\n                    callback.apply(null, failureArgs);\n                });\n            }\n\n            if (doneCallbacks.length) {\n                qq.each(doneCallbacks, function(idx, callback) {\n                    callback.apply(null, failureArgs);\n                });\n            }\n\n            return this;\n        }\n    });\n};\n",
    "/* globals qq */\n/**\n * Placeholder for a Blob that will be generated on-demand.\n *\n * @param referenceBlob Parent of the generated blob\n * @param onCreate Function to invoke when the blob must be created.  Must be promissory.\n * @constructor\n */\nqq.BlobProxy = function(referenceBlob, onCreate) {\n    \"use strict\";\n\n    qq.extend(this, {\n        referenceBlob: referenceBlob,\n\n        create: function() {\n            return onCreate(referenceBlob);\n        }\n    });\n};\n",
    "/*globals qq*/\n\n/**\n * This module represents an upload or \"Select File(s)\" button.  It's job is to embed an opaque `<input type=\"file\">`\n * element as a child of a provided \"container\" element.  This \"container\" element (`options.element`) is used to provide\n * a custom style for the `<input type=\"file\">` element.  The ability to change the style of the container element is also\n * provided here by adding CSS classes to the container on hover/focus.\n *\n * TODO Eliminate the mouseover and mouseout event handlers since the :hover CSS pseudo-class should now be\n * available on all supported browsers.\n *\n * @param o Options to override the default values\n */\nqq.UploadButton = function(o) {\n    \"use strict\";\n\n    var self = this,\n\n        disposeSupport = new qq.DisposeSupport(),\n\n        options = {\n            // Corresponds to the `accept` attribute on the associated `<input type=\"file\">`\n            acceptFiles: null,\n\n            // \"Container\" element\n            element: null,\n\n            focusClass: \"qq-upload-button-focus\",\n\n            // A true value allows folders to be selected, if supported by the UA\n            folders: false,\n\n            // **This option will be removed** in the future as the :hover CSS pseudo-class is available on all supported browsers\n            hoverClass: \"qq-upload-button-hover\",\n\n            ios8BrowserCrashWorkaround: false,\n\n            // If true adds `multiple` attribute to `<input type=\"file\">`\n            multiple: false,\n\n            // `name` attribute of `<input type=\"file\">`\n            name: \"qqfile\",\n\n            // Called when the browser invokes the onchange handler on the `<input type=\"file\">`\n            onChange: function(input) {},\n\n            title: null\n        },\n        input, buttonId;\n\n    // Overrides any of the default option values with any option values passed in during construction.\n    qq.extend(options, o);\n\n    buttonId = qq.getUniqueId();\n\n    // Embed an opaque `<input type=\"file\">` element as a child of `options.element`.\n    function createInput() {\n        var input = document.createElement(\"input\");\n\n        input.setAttribute(qq.UploadButton.BUTTON_ID_ATTR_NAME, buttonId);\n        input.setAttribute(\"title\", options.title);\n\n        self.setMultiple(options.multiple, input);\n\n        if (options.folders && qq.supportedFeatures.folderSelection) {\n            // selecting directories is only possible in Chrome now, via a vendor-specific prefixed attribute\n            input.setAttribute(\"webkitdirectory\", \"\");\n        }\n\n        if (options.acceptFiles) {\n            input.setAttribute(\"accept\", options.acceptFiles);\n        }\n\n        input.setAttribute(\"type\", \"file\");\n        input.setAttribute(\"name\", options.name);\n\n        qq(input).css({\n            position: \"absolute\",\n            // in Opera only 'browse' button\n            // is clickable and it is located at\n            // the right side of the input\n            right: 0,\n            top: 0,\n            fontFamily: \"Arial\",\n            // It's especially important to make this an arbitrarily large value\n            // to ensure the rendered input button in IE takes up the entire\n            // space of the container element.  Otherwise, the left side of the\n            // button will require a double-click to invoke the file chooser.\n            // In other browsers, this might cause other issues, so a large font-size\n            // is only used in IE.  There is a bug in IE8 where the opacity style is  ignored\n            // in some cases when the font-size is large.  So, this workaround is not applied\n            // to IE8.\n            fontSize: qq.ie() && !qq.ie8() ? \"3500px\" : \"118px\",\n            margin: 0,\n            padding: 0,\n            cursor: \"pointer\",\n            opacity: 0\n        });\n\n        // Setting the file input's height to 100% in IE7 causes\n        // most of the visible button to be unclickable.\n        !qq.ie7() && qq(input).css({height: \"100%\"});\n\n        options.element.appendChild(input);\n\n        disposeSupport.attach(input, \"change\", function() {\n            options.onChange(input);\n        });\n\n        // **These event handlers will be removed** in the future as the :hover CSS pseudo-class is available on all supported browsers\n        disposeSupport.attach(input, \"mouseover\", function() {\n            qq(options.element).addClass(options.hoverClass);\n        });\n        disposeSupport.attach(input, \"mouseout\", function() {\n            qq(options.element).removeClass(options.hoverClass);\n        });\n\n        disposeSupport.attach(input, \"focus\", function() {\n            qq(options.element).addClass(options.focusClass);\n        });\n        disposeSupport.attach(input, \"blur\", function() {\n            qq(options.element).removeClass(options.focusClass);\n        });\n\n        return input;\n    }\n\n    // Make button suitable container for input\n    qq(options.element).css({\n        position: \"relative\",\n        overflow: \"hidden\",\n        // Make sure browse button is in the right side in Internet Explorer\n        direction: \"ltr\"\n    });\n\n    // Exposed API\n    qq.extend(this, {\n        getInput: function() {\n            return input;\n        },\n\n        getButtonId: function() {\n            return buttonId;\n        },\n\n        setMultiple: function(isMultiple, optInput) {\n            var input = optInput || this.getInput();\n\n            // Temporary workaround for bug in in iOS8 UIWebView that causes the browser to crash\n            // before the file chooser appears if the file input doesn't contain a multiple attribute.\n            // See #1283.\n            if (options.ios8BrowserCrashWorkaround && qq.ios8() && (qq.iosChrome() || qq.iosSafariWebView())) {\n                input.setAttribute(\"multiple\", \"\");\n            }\n\n            else {\n                if (isMultiple) {\n                    input.setAttribute(\"multiple\", \"\");\n                }\n                else {\n                    input.removeAttribute(\"multiple\");\n                }\n            }\n        },\n\n        setAcceptFiles: function(acceptFiles) {\n            if (acceptFiles !== options.acceptFiles) {\n                input.setAttribute(\"accept\", acceptFiles);\n            }\n        },\n\n        reset: function() {\n            if (input.parentNode) {\n                qq(input).remove();\n            }\n\n            qq(options.element).removeClass(options.focusClass);\n            input = null;\n            input = createInput();\n        }\n    });\n\n    input = createInput();\n};\n\nqq.UploadButton.BUTTON_ID_ATTR_NAME = \"qq-button-id\";\n",
    "/*globals qq */\nqq.UploadData = function(uploaderProxy) {\n    \"use strict\";\n\n    var data = [],\n        byUuid = {},\n        byStatus = {},\n        byProxyGroupId = {},\n        byBatchId = {};\n\n    function getDataByIds(idOrIds) {\n        if (qq.isArray(idOrIds)) {\n            var entries = [];\n\n            qq.each(idOrIds, function(idx, id) {\n                entries.push(data[id]);\n            });\n\n            return entries;\n        }\n\n        return data[idOrIds];\n    }\n\n    function getDataByUuids(uuids) {\n        if (qq.isArray(uuids)) {\n            var entries = [];\n\n            qq.each(uuids, function(idx, uuid) {\n                entries.push(data[byUuid[uuid]]);\n            });\n\n            return entries;\n        }\n\n        return data[byUuid[uuids]];\n    }\n\n    function getDataByStatus(status) {\n        var statusResults = [],\n            statuses = [].concat(status);\n\n        qq.each(statuses, function(index, statusEnum) {\n            var statusResultIndexes = byStatus[statusEnum];\n\n            if (statusResultIndexes !== undefined) {\n                qq.each(statusResultIndexes, function(i, dataIndex) {\n                    statusResults.push(data[dataIndex]);\n                });\n            }\n        });\n\n        return statusResults;\n    }\n\n    qq.extend(this, {\n        /**\n         * Adds a new file to the data cache for tracking purposes.\n         *\n         * @param spec Data that describes this file.  Possible properties are:\n         *\n         * - uuid: Initial UUID for this file.\n         * - name: Initial name of this file.\n         * - size: Size of this file, omit if this cannot be determined\n         * - status: Initial `qq.status` for this file.  Omit for `qq.status.SUBMITTING`.\n         * - batchId: ID of the batch this file belongs to\n         * - proxyGroupId: ID of the proxy group associated with this file\n         *\n         * @returns {number} Internal ID for this file.\n         */\n        addFile: function(spec) {\n            var status = spec.status || qq.status.SUBMITTING,\n                id = data.push({\n                    name: spec.name,\n                    originalName: spec.name,\n                    uuid: spec.uuid,\n                    size: spec.size == null ? -1 : spec.size,\n                    status: status\n                }) - 1;\n\n            if (spec.batchId) {\n                data[id].batchId = spec.batchId;\n\n                if (byBatchId[spec.batchId] === undefined) {\n                    byBatchId[spec.batchId] = [];\n                }\n                byBatchId[spec.batchId].push(id);\n            }\n\n            if (spec.proxyGroupId) {\n                data[id].proxyGroupId = spec.proxyGroupId;\n\n                if (byProxyGroupId[spec.proxyGroupId] === undefined) {\n                    byProxyGroupId[spec.proxyGroupId] = [];\n                }\n                byProxyGroupId[spec.proxyGroupId].push(id);\n            }\n\n            data[id].id = id;\n            byUuid[spec.uuid] = id;\n\n            if (byStatus[status] === undefined) {\n                byStatus[status] = [];\n            }\n            byStatus[status].push(id);\n\n            uploaderProxy.onStatusChange(id, null, status);\n\n            return id;\n        },\n\n        retrieve: function(optionalFilter) {\n            if (qq.isObject(optionalFilter) && data.length)  {\n                if (optionalFilter.id !== undefined) {\n                    return getDataByIds(optionalFilter.id);\n                }\n\n                else if (optionalFilter.uuid !== undefined) {\n                    return getDataByUuids(optionalFilter.uuid);\n                }\n\n                else if (optionalFilter.status) {\n                    return getDataByStatus(optionalFilter.status);\n                }\n            }\n            else {\n                return qq.extend([], data, true);\n            }\n        },\n\n        reset: function() {\n            data = [];\n            byUuid = {};\n            byStatus = {};\n            byBatchId = {};\n        },\n\n        setStatus: function(id, newStatus) {\n            var oldStatus = data[id].status,\n                byStatusOldStatusIndex = qq.indexOf(byStatus[oldStatus], id);\n\n            byStatus[oldStatus].splice(byStatusOldStatusIndex, 1);\n\n            data[id].status = newStatus;\n\n            if (byStatus[newStatus] === undefined) {\n                byStatus[newStatus] = [];\n            }\n            byStatus[newStatus].push(id);\n\n            uploaderProxy.onStatusChange(id, oldStatus, newStatus);\n        },\n\n        uuidChanged: function(id, newUuid) {\n            var oldUuid = data[id].uuid;\n\n            data[id].uuid = newUuid;\n            byUuid[newUuid] = id;\n            delete byUuid[oldUuid];\n        },\n\n        updateName: function(id, newName) {\n            data[id].name = newName;\n        },\n\n        updateSize: function(id, newSize) {\n            data[id].size = newSize;\n        },\n\n        // Only applicable if this file has a parent that we may want to reference later.\n        setParentId: function(targetId, parentId) {\n            data[targetId].parentId = parentId;\n        },\n\n        getIdsInProxyGroup: function(id) {\n            var proxyGroupId = data[id].proxyGroupId;\n\n            if (proxyGroupId) {\n                return byProxyGroupId[proxyGroupId];\n            }\n            return [];\n        },\n\n        getIdsInBatch: function(id) {\n            var batchId = data[id].batchId;\n\n            return byBatchId[batchId];\n        }\n    });\n};\n\nqq.status = {\n    SUBMITTING: \"submitting\",\n    SUBMITTED: \"submitted\",\n    REJECTED: \"rejected\",\n    QUEUED: \"queued\",\n    CANCELED: \"canceled\",\n    PAUSED: \"paused\",\n    UPLOADING: \"uploading\",\n    UPLOAD_RETRYING: \"retrying upload\",\n    UPLOAD_SUCCESSFUL: \"upload successful\",\n    UPLOAD_FAILED: \"upload failed\",\n    DELETE_FAILED: \"delete failed\",\n    DELETING: \"deleting\",\n    DELETED: \"deleted\"\n};\n",
    "/*globals qq*/\n/**\n * Defines the public API for FineUploaderBasic mode.\n */\n(function() {\n    \"use strict\";\n\n    qq.basePublicApi = {\n        // DEPRECATED - TODO REMOVE IN NEXT MAJOR RELEASE (replaced by addFiles)\n        addBlobs: function(blobDataOrArray, params, endpoint) {\n            this.addFiles(blobDataOrArray, params, endpoint);\n        },\n\n        addInitialFiles: function(cannedFileList) {\n            var self = this;\n\n            qq.each(cannedFileList, function(index, cannedFile) {\n                self._addCannedFile(cannedFile);\n            });\n        },\n\n        addFiles: function(data, params, endpoint) {\n            this._maybeHandleIos8SafariWorkaround();\n\n            var batchId = this._storedIds.length === 0 ? qq.getUniqueId() : this._currentBatchId,\n\n                processBlob = qq.bind(function(blob) {\n                    this._handleNewFile({\n                        blob: blob,\n                        name: this._options.blobs.defaultName\n                    }, batchId, verifiedFiles);\n                }, this),\n\n                processBlobData = qq.bind(function(blobData) {\n                    this._handleNewFile(blobData, batchId, verifiedFiles);\n                }, this),\n\n                processCanvas = qq.bind(function(canvas) {\n                    var blob = qq.canvasToBlob(canvas);\n\n                    this._handleNewFile({\n                        blob: blob,\n                        name: this._options.blobs.defaultName + \".png\"\n                    }, batchId, verifiedFiles);\n                }, this),\n\n                processCanvasData = qq.bind(function(canvasData) {\n                    var normalizedQuality = canvasData.quality && canvasData.quality / 100,\n                        blob = qq.canvasToBlob(canvasData.canvas, canvasData.type, normalizedQuality);\n\n                    this._handleNewFile({\n                        blob: blob,\n                        name: canvasData.name\n                    }, batchId, verifiedFiles);\n                }, this),\n\n                processFileOrInput = qq.bind(function(fileOrInput) {\n                    if (qq.isInput(fileOrInput) && qq.supportedFeatures.ajaxUploading) {\n                        var files = Array.prototype.slice.call(fileOrInput.files),\n                            self = this;\n\n                        qq.each(files, function(idx, file) {\n                            self._handleNewFile(file, batchId, verifiedFiles);\n                        });\n                    }\n                    else {\n                        this._handleNewFile(fileOrInput, batchId, verifiedFiles);\n                    }\n                }, this),\n\n                normalizeData = function() {\n                    if (qq.isFileList(data)) {\n                        data = Array.prototype.slice.call(data);\n                    }\n                    data = [].concat(data);\n                },\n\n                self = this,\n                verifiedFiles = [];\n\n            this._currentBatchId = batchId;\n\n            if (data) {\n                normalizeData();\n\n                qq.each(data, function(idx, fileContainer) {\n                    if (qq.isFileOrInput(fileContainer)) {\n                        processFileOrInput(fileContainer);\n                    }\n                    else if (qq.isBlob(fileContainer)) {\n                        processBlob(fileContainer);\n                    }\n                    else if (qq.isObject(fileContainer)) {\n                        if (fileContainer.blob && fileContainer.name) {\n                            processBlobData(fileContainer);\n                        }\n                        else if (fileContainer.canvas && fileContainer.name) {\n                            processCanvasData(fileContainer);\n                        }\n                    }\n                    else if (fileContainer.tagName && fileContainer.tagName.toLowerCase() === \"canvas\") {\n                        processCanvas(fileContainer);\n                    }\n                    else {\n                        self.log(fileContainer + \" is not a valid file container!  Ignoring!\", \"warn\");\n                    }\n                });\n\n                this.log(\"Received \" + verifiedFiles.length + \" files.\");\n                this._prepareItemsForUpload(verifiedFiles, params, endpoint);\n            }\n        },\n\n        cancel: function(id) {\n            this._handler.cancel(id);\n        },\n\n        cancelAll: function() {\n            var storedIdsCopy = [],\n                self = this;\n\n            qq.extend(storedIdsCopy, this._storedIds);\n            qq.each(storedIdsCopy, function(idx, storedFileId) {\n                self.cancel(storedFileId);\n            });\n\n            this._handler.cancelAll();\n        },\n\n        clearStoredFiles: function() {\n            this._storedIds = [];\n        },\n\n        continueUpload: function(id) {\n            var uploadData = this._uploadData.retrieve({id: id});\n\n            if (!qq.supportedFeatures.pause || !this._options.chunking.enabled) {\n                return false;\n            }\n\n            if (uploadData.status === qq.status.PAUSED) {\n                this.log(qq.format(\"Paused file ID {} ({}) will be continued.  Not paused.\", id, this.getName(id)));\n                this._uploadFile(id);\n                return true;\n            }\n            else {\n                this.log(qq.format(\"Ignoring continue for file ID {} ({}).  Not paused.\", id, this.getName(id)), \"error\");\n            }\n\n            return false;\n        },\n\n        deleteFile: function(id) {\n            return this._onSubmitDelete(id);\n        },\n\n        // TODO document?\n        doesExist: function(fileOrBlobId) {\n            return this._handler.isValid(fileOrBlobId);\n        },\n\n        // Generate a variable size thumbnail on an img or canvas,\n        // returning a promise that is fulfilled when the attempt completes.\n        // Thumbnail can either be based off of a URL for an image returned\n        // by the server in the upload response, or the associated `Blob`.\n        drawThumbnail: function(fileId, imgOrCanvas, maxSize, fromServer, customResizeFunction) {\n            var promiseToReturn = new qq.Promise(),\n                fileOrUrl, options;\n\n            if (this._imageGenerator) {\n                fileOrUrl = this._thumbnailUrls[fileId];\n                options = {\n                    customResizeFunction: customResizeFunction,\n                    maxSize: maxSize > 0 ? maxSize : null,\n                    scale: maxSize > 0\n                };\n\n                // If client-side preview generation is possible\n                // and we are not specifically looking for the image URl returned by the server...\n                if (!fromServer && qq.supportedFeatures.imagePreviews) {\n                    fileOrUrl = this.getFile(fileId);\n                }\n\n                /* jshint eqeqeq:false,eqnull:true */\n                if (fileOrUrl == null) {\n                    promiseToReturn.failure({container: imgOrCanvas, error: \"File or URL not found.\"});\n                }\n                else {\n                    this._imageGenerator.generate(fileOrUrl, imgOrCanvas, options).then(\n                        function success(modifiedContainer) {\n                            promiseToReturn.success(modifiedContainer);\n                        },\n\n                        function failure(container, reason) {\n                            promiseToReturn.failure({container: container, error: reason || \"Problem generating thumbnail\"});\n                        }\n                    );\n                }\n            }\n            else {\n                promiseToReturn.failure({container: imgOrCanvas, error: \"Missing image generator module\"});\n            }\n\n            return promiseToReturn;\n        },\n\n        getButton: function(fileId) {\n            return this._getButton(this._buttonIdsForFileIds[fileId]);\n        },\n\n        getEndpoint: function(fileId) {\n            return this._endpointStore.get(fileId);\n        },\n\n        getFile: function(fileOrBlobId) {\n            return this._handler.getFile(fileOrBlobId) || null;\n        },\n\n        getInProgress: function() {\n            return this._uploadData.retrieve({\n                status: [\n                    qq.status.UPLOADING,\n                    qq.status.UPLOAD_RETRYING,\n                    qq.status.QUEUED\n                ]\n            }).length;\n        },\n\n        getName: function(id) {\n            return this._uploadData.retrieve({id: id}).name;\n        },\n\n        // Parent ID for a specific file, or null if this is the parent, or if it has no parent.\n        getParentId: function(id) {\n            var uploadDataEntry = this.getUploads({id: id}),\n                parentId = null;\n\n            if (uploadDataEntry) {\n                if (uploadDataEntry.parentId !== undefined) {\n                    parentId = uploadDataEntry.parentId;\n                }\n            }\n\n            return parentId;\n        },\n\n        getResumableFilesData: function() {\n            return this._handler.getResumableFilesData();\n        },\n\n        getSize: function(id) {\n            return this._uploadData.retrieve({id: id}).size;\n        },\n\n        getNetUploads: function() {\n            return this._netUploaded;\n        },\n\n        getRemainingAllowedItems: function() {\n            var allowedItems = this._currentItemLimit;\n\n            if (allowedItems > 0) {\n                return allowedItems - this._netUploadedOrQueued;\n            }\n\n            return null;\n        },\n\n        getUploads: function(optionalFilter) {\n            return this._uploadData.retrieve(optionalFilter);\n        },\n\n        getUuid: function(id) {\n            return this._uploadData.retrieve({id: id}).uuid;\n        },\n\n        log: function(str, level) {\n            if (this._options.debug && (!level || level === \"info\")) {\n                qq.log(\"[Fine Uploader \" + qq.version + \"] \" + str);\n            }\n            else if (level && level !== \"info\") {\n                qq.log(\"[Fine Uploader \" + qq.version + \"] \" + str, level);\n\n            }\n        },\n\n        pauseUpload: function(id) {\n            var uploadData = this._uploadData.retrieve({id: id});\n\n            if (!qq.supportedFeatures.pause || !this._options.chunking.enabled) {\n                return false;\n            }\n\n            // Pause only really makes sense if the file is uploading or retrying\n            if (qq.indexOf([qq.status.UPLOADING, qq.status.UPLOAD_RETRYING], uploadData.status) >= 0) {\n                if (this._handler.pause(id)) {\n                    this._uploadData.setStatus(id, qq.status.PAUSED);\n                    return true;\n                }\n                else {\n                    this.log(qq.format(\"Unable to pause file ID {} ({}).\", id, this.getName(id)), \"error\");\n                }\n            }\n            else {\n                this.log(qq.format(\"Ignoring pause for file ID {} ({}).  Not in progress.\", id, this.getName(id)), \"error\");\n            }\n\n            return false;\n        },\n\n        removeFileRef: function(id) {\n            this._handler.expunge(id);\n        },\n\n        reset: function() {\n            this.log(\"Resetting uploader...\");\n\n            this._handler.reset();\n            this._storedIds = [];\n            this._autoRetries = [];\n            this._retryTimeouts = [];\n            this._preventRetries = [];\n            this._thumbnailUrls = [];\n\n            qq.each(this._buttons, function(idx, button) {\n                button.reset();\n            });\n\n            this._paramsStore.reset();\n            this._endpointStore.reset();\n            this._netUploadedOrQueued = 0;\n            this._netUploaded = 0;\n            this._uploadData.reset();\n            this._buttonIdsForFileIds = [];\n\n            this._pasteHandler && this._pasteHandler.reset();\n            this._options.session.refreshOnReset && this._refreshSessionData();\n\n            this._succeededSinceLastAllComplete = [];\n            this._failedSinceLastAllComplete = [];\n\n            this._totalProgress && this._totalProgress.reset();\n        },\n\n        retry: function(id) {\n            return this._manualRetry(id);\n        },\n\n        scaleImage: function(id, specs) {\n            var self = this;\n\n            return qq.Scaler.prototype.scaleImage(id, specs, {\n                log: qq.bind(self.log, self),\n                getFile: qq.bind(self.getFile, self),\n                uploadData: self._uploadData\n            });\n        },\n\n        setCustomHeaders: function(headers, id) {\n            this._customHeadersStore.set(headers, id);\n        },\n\n        setDeleteFileCustomHeaders: function(headers, id) {\n            this._deleteFileCustomHeadersStore.set(headers, id);\n        },\n\n        setDeleteFileEndpoint: function(endpoint, id) {\n            this._deleteFileEndpointStore.set(endpoint, id);\n        },\n\n        setDeleteFileParams: function(params, id) {\n            this._deleteFileParamsStore.set(params, id);\n        },\n\n        // Re-sets the default endpoint, an endpoint for a specific file, or an endpoint for a specific button\n        setEndpoint: function(endpoint, id) {\n            this._endpointStore.set(endpoint, id);\n        },\n\n        setForm: function(elementOrId) {\n            this._updateFormSupportAndParams(elementOrId);\n        },\n\n        setItemLimit: function(newItemLimit) {\n            this._currentItemLimit = newItemLimit;\n        },\n\n        setName: function(id, newName) {\n            this._uploadData.updateName(id, newName);\n        },\n\n        setParams: function(params, id) {\n            this._paramsStore.set(params, id);\n        },\n\n        setUuid: function(id, newUuid) {\n            return this._uploadData.uuidChanged(id, newUuid);\n        },\n\n        /**\n         * Expose the internal status of a file id to the public api for manual state changes\n         * @public\n         *\n         * @param {Number} id,\n         * @param {String} newStatus\n         *\n         * @todo Implement the remaining methods\n         */\n        setStatus: function(id, newStatus) {\n            var fileRecord = this.getUploads({id: id});\n            if (!fileRecord) {\n                throw new qq.Error(id + \" is not a valid file ID.\");\n            }\n\n            switch (newStatus) {\n                case qq.status.DELETED:\n                    this._onDeleteComplete(id, null, false);\n                    break;\n                case qq.status.DELETE_FAILED:\n                    this._onDeleteComplete(id, null, true);\n                    break;\n                default:\n                    var errorMessage = \"Method setStatus called on '\" + name + \"' not implemented yet for \" + newStatus;\n                    this.log(errorMessage);\n                    throw new qq.Error(errorMessage);\n            }\n        },\n\n        uploadStoredFiles: function() {\n            if (this._storedIds.length === 0) {\n                this._itemError(\"noFilesError\");\n            }\n            else {\n                this._uploadStoredFiles();\n            }\n        }\n    };\n\n    /**\n     * Defines the private (internal) API for FineUploaderBasic mode.\n     */\n    qq.basePrivateApi = {\n        // Updates internal state with a file record (not backed by a live file).  Returns the assigned ID.\n        _addCannedFile: function(sessionData) {\n            var id = this._uploadData.addFile({\n                uuid: sessionData.uuid,\n                name: sessionData.name,\n                size: sessionData.size,\n                status: qq.status.UPLOAD_SUCCESSFUL\n            });\n\n            sessionData.deleteFileEndpoint && this.setDeleteFileEndpoint(sessionData.deleteFileEndpoint, id);\n            sessionData.deleteFileParams && this.setDeleteFileParams(sessionData.deleteFileParams, id);\n\n            if (sessionData.thumbnailUrl) {\n                this._thumbnailUrls[id] = sessionData.thumbnailUrl;\n            }\n\n            this._netUploaded++;\n            this._netUploadedOrQueued++;\n\n            return id;\n        },\n\n        _annotateWithButtonId: function(file, associatedInput) {\n            if (qq.isFile(file)) {\n                file.qqButtonId = this._getButtonId(associatedInput);\n            }\n        },\n\n        _batchError: function(message) {\n            this._options.callbacks.onError(null, null, message, undefined);\n        },\n\n        _createDeleteHandler: function() {\n            var self = this;\n\n            return new qq.DeleteFileAjaxRequester({\n                method: this._options.deleteFile.method.toUpperCase(),\n                maxConnections: this._options.maxConnections,\n                uuidParamName: this._options.request.uuidName,\n                customHeaders: this._deleteFileCustomHeadersStore,\n                paramsStore: this._deleteFileParamsStore,\n                endpointStore: this._deleteFileEndpointStore,\n                cors: this._options.cors,\n                log: qq.bind(self.log, self),\n                onDelete: function(id) {\n                    self._onDelete(id);\n                    self._options.callbacks.onDelete(id);\n                },\n                onDeleteComplete: function(id, xhrOrXdr, isError) {\n                    self._onDeleteComplete(id, xhrOrXdr, isError);\n                    self._options.callbacks.onDeleteComplete(id, xhrOrXdr, isError);\n                }\n\n            });\n        },\n\n        _createPasteHandler: function() {\n            var self = this;\n\n            return new qq.PasteSupport({\n                targetElement: this._options.paste.targetElement,\n                callbacks: {\n                    log: qq.bind(self.log, self),\n                    pasteReceived: function(blob) {\n                        self._handleCheckedCallback({\n                            name: \"onPasteReceived\",\n                            callback: qq.bind(self._options.callbacks.onPasteReceived, self, blob),\n                            onSuccess: qq.bind(self._handlePasteSuccess, self, blob),\n                            identifier: \"pasted image\"\n                        });\n                    }\n                }\n            });\n        },\n\n        _createStore: function(initialValue, _readOnlyValues_) {\n            var store = {},\n                catchall = initialValue,\n                perIdReadOnlyValues = {},\n                readOnlyValues = _readOnlyValues_,\n                copy = function(orig) {\n                    if (qq.isObject(orig)) {\n                        return qq.extend({}, orig);\n                    }\n                    return orig;\n                },\n                getReadOnlyValues = function() {\n                    if (qq.isFunction(readOnlyValues)) {\n                        return readOnlyValues();\n                    }\n                    return readOnlyValues;\n                },\n                includeReadOnlyValues = function(id, existing) {\n                    if (readOnlyValues && qq.isObject(existing)) {\n                        qq.extend(existing, getReadOnlyValues());\n                    }\n\n                    if (perIdReadOnlyValues[id]) {\n                        qq.extend(existing, perIdReadOnlyValues[id]);\n                    }\n                };\n\n            return {\n                set: function(val, id) {\n                    /*jshint eqeqeq: true, eqnull: true*/\n                    if (id == null) {\n                        store = {};\n                        catchall = copy(val);\n                    }\n                    else {\n                        store[id] = copy(val);\n                    }\n                },\n\n                get: function(id) {\n                    var values;\n\n                    /*jshint eqeqeq: true, eqnull: true*/\n                    if (id != null && store[id]) {\n                        values = store[id];\n                    }\n                    else {\n                        values = copy(catchall);\n                    }\n\n                    includeReadOnlyValues(id, values);\n\n                    return copy(values);\n                },\n\n                addReadOnly: function(id, values) {\n                    // Only applicable to Object stores\n                    if (qq.isObject(store)) {\n                        // If null ID, apply readonly values to all files\n                        if (id === null) {\n                            if (qq.isFunction(values)) {\n                                readOnlyValues = values;\n                            }\n                            else {\n                                readOnlyValues = readOnlyValues || {};\n                                qq.extend(readOnlyValues, values);\n                            }\n                        }\n                        else {\n                            perIdReadOnlyValues[id] = perIdReadOnlyValues[id] || {};\n                            qq.extend(perIdReadOnlyValues[id], values);\n                        }\n                    }\n                },\n\n                remove: function(fileId) {\n                    return delete store[fileId];\n                },\n\n                reset: function() {\n                    store = {};\n                    perIdReadOnlyValues = {};\n                    catchall = initialValue;\n                }\n            };\n        },\n\n        _createUploadDataTracker: function() {\n            var self = this;\n\n            return new qq.UploadData({\n                getName: function(id) {\n                    return self.getName(id);\n                },\n                getUuid: function(id) {\n                    return self.getUuid(id);\n                },\n                getSize: function(id) {\n                    return self.getSize(id);\n                },\n                onStatusChange: function(id, oldStatus, newStatus) {\n                    self._onUploadStatusChange(id, oldStatus, newStatus);\n                    self._options.callbacks.onStatusChange(id, oldStatus, newStatus);\n                    self._maybeAllComplete(id, newStatus);\n\n                    if (self._totalProgress) {\n                        setTimeout(function() {\n                            self._totalProgress.onStatusChange(id, oldStatus, newStatus);\n                        }, 0);\n                    }\n                }\n            });\n        },\n\n        /**\n         * Generate a tracked upload button.\n         *\n         * @param spec Object containing a required `element` property\n         * along with optional `multiple`, `accept`, and `folders`.\n         * @returns {qq.UploadButton}\n         * @private\n         */\n        _createUploadButton: function(spec) {\n            var self = this,\n                acceptFiles = spec.accept || this._options.validation.acceptFiles,\n                allowedExtensions = spec.allowedExtensions || this._options.validation.allowedExtensions,\n                button;\n\n            function allowMultiple() {\n                if (qq.supportedFeatures.ajaxUploading) {\n                    // Workaround for bug in iOS7+ (see #1039)\n                    if (self._options.workarounds.iosEmptyVideos &&\n                        qq.ios() &&\n                        !qq.ios6() &&\n                        self._isAllowedExtension(allowedExtensions, \".mov\")) {\n\n                        return false;\n                    }\n\n                    if (spec.multiple === undefined) {\n                        return self._options.multiple;\n                    }\n\n                    return spec.multiple;\n                }\n\n                return false;\n            }\n\n            button = new qq.UploadButton({\n                acceptFiles: acceptFiles,\n                element: spec.element,\n                focusClass: this._options.classes.buttonFocus,\n                folders: spec.folders,\n                hoverClass: this._options.classes.buttonHover,\n                ios8BrowserCrashWorkaround: this._options.workarounds.ios8BrowserCrash,\n                multiple: allowMultiple(),\n                name: this._options.request.inputName,\n                onChange: function(input) {\n                    self._onInputChange(input);\n                },\n                title: spec.title == null ? this._options.text.fileInputTitle : spec.title\n            });\n\n            this._disposeSupport.addDisposer(function() {\n                button.dispose();\n            });\n\n            self._buttons.push(button);\n\n            return button;\n        },\n\n        _createUploadHandler: function(additionalOptions, namespace) {\n            var self = this,\n                lastOnProgress = {},\n                options = {\n                    debug: this._options.debug,\n                    maxConnections: this._options.maxConnections,\n                    cors: this._options.cors,\n                    paramsStore: this._paramsStore,\n                    endpointStore: this._endpointStore,\n                    chunking: this._options.chunking,\n                    resume: this._options.resume,\n                    blobs: this._options.blobs,\n                    log: qq.bind(self.log, self),\n                    preventRetryParam: this._options.retry.preventRetryResponseProperty,\n                    onProgress: function(id, name, loaded, total) {\n                        if (loaded < 0 || total < 0) {\n                            return;\n                        }\n\n                        if (lastOnProgress[id]) {\n                            if (lastOnProgress[id].loaded !== loaded || lastOnProgress[id].total !== total) {\n                                self._onProgress(id, name, loaded, total);\n                                self._options.callbacks.onProgress(id, name, loaded, total);\n                            }\n                        }\n                        else {\n                            self._onProgress(id, name, loaded, total);\n                            self._options.callbacks.onProgress(id, name, loaded, total);\n                        }\n\n                        lastOnProgress[id] = {loaded: loaded, total: total};\n\n                    },\n                    onComplete: function(id, name, result, xhr) {\n                        delete lastOnProgress[id];\n\n                        var status = self.getUploads({id: id}).status,\n                            retVal;\n\n                        // This is to deal with some observed cases where the XHR readyStateChange handler is\n                        // invoked by the browser multiple times for the same XHR instance with the same state\n                        // readyState value.  Higher level: don't invoke complete-related code if we've already\n                        // done this.\n                        if (status === qq.status.UPLOAD_SUCCESSFUL || status === qq.status.UPLOAD_FAILED) {\n                            return;\n                        }\n\n                        retVal = self._onComplete(id, name, result, xhr);\n\n                        // If the internal `_onComplete` handler returns a promise, don't invoke the `onComplete` callback\n                        // until the promise has been fulfilled.\n                        if (retVal instanceof  qq.Promise) {\n                            retVal.done(function() {\n                                self._options.callbacks.onComplete(id, name, result, xhr);\n                            });\n                        }\n                        else {\n                            self._options.callbacks.onComplete(id, name, result, xhr);\n                        }\n                    },\n                    onCancel: function(id, name, cancelFinalizationEffort) {\n                        var promise = new qq.Promise();\n\n                        self._handleCheckedCallback({\n                            name: \"onCancel\",\n                            callback: qq.bind(self._options.callbacks.onCancel, self, id, name),\n                            onFailure: promise.failure,\n                            onSuccess: function() {\n                                cancelFinalizationEffort.then(function() {\n                                    self._onCancel(id, name);\n                                });\n\n                                promise.success();\n                            },\n                            identifier: id\n                        });\n\n                        return promise;\n                    },\n                    onUploadPrep: qq.bind(this._onUploadPrep, this),\n                    onUpload: function(id, name) {\n                        self._onUpload(id, name);\n                        self._options.callbacks.onUpload(id, name);\n                    },\n                    onUploadChunk: function(id, name, chunkData) {\n                        self._onUploadChunk(id, chunkData);\n                        self._options.callbacks.onUploadChunk(id, name, chunkData);\n                    },\n                    onUploadChunkSuccess: function(id, chunkData, result, xhr) {\n                        self._options.callbacks.onUploadChunkSuccess.apply(self, arguments);\n                    },\n                    onResume: function(id, name, chunkData) {\n                        return self._options.callbacks.onResume(id, name, chunkData);\n                    },\n                    onAutoRetry: function(id, name, responseJSON, xhr) {\n                        return self._onAutoRetry.apply(self, arguments);\n                    },\n                    onUuidChanged: function(id, newUuid) {\n                        self.log(\"Server requested UUID change from '\" + self.getUuid(id) + \"' to '\" + newUuid + \"'\");\n                        self.setUuid(id, newUuid);\n                    },\n                    getName: qq.bind(self.getName, self),\n                    getUuid: qq.bind(self.getUuid, self),\n                    getSize: qq.bind(self.getSize, self),\n                    setSize: qq.bind(self._setSize, self),\n                    getDataByUuid: function(uuid) {\n                        return self.getUploads({uuid: uuid});\n                    },\n                    isQueued: function(id) {\n                        var status = self.getUploads({id: id}).status;\n                        return status === qq.status.QUEUED ||\n                            status === qq.status.SUBMITTED ||\n                            status === qq.status.UPLOAD_RETRYING ||\n                            status === qq.status.PAUSED;\n                    },\n                    getIdsInProxyGroup: self._uploadData.getIdsInProxyGroup,\n                    getIdsInBatch: self._uploadData.getIdsInBatch\n                };\n\n            qq.each(this._options.request, function(prop, val) {\n                options[prop] = val;\n            });\n\n            options.customHeaders = this._customHeadersStore;\n\n            if (additionalOptions) {\n                qq.each(additionalOptions, function(key, val) {\n                    options[key] = val;\n                });\n            }\n\n            return new qq.UploadHandlerController(options, namespace);\n        },\n\n        _fileOrBlobRejected: function(id) {\n            this._netUploadedOrQueued--;\n            this._uploadData.setStatus(id, qq.status.REJECTED);\n        },\n\n        _formatSize: function(bytes) {\n            if (bytes === 0) {\n                return bytes + this._options.text.sizeSymbols[0];\n            }\n            var i = -1;\n            do {\n                bytes = bytes / 1000;\n                i++;\n            } while (bytes > 999);\n\n            return Math.max(bytes, 0.1).toFixed(1) + this._options.text.sizeSymbols[i];\n        },\n\n        // Creates an internal object that tracks various properties of each extra button,\n        // and then actually creates the extra button.\n        _generateExtraButtonSpecs: function() {\n            var self = this;\n\n            this._extraButtonSpecs = {};\n\n            qq.each(this._options.extraButtons, function(idx, extraButtonOptionEntry) {\n                var multiple = extraButtonOptionEntry.multiple,\n                    validation = qq.extend({}, self._options.validation, true),\n                    extraButtonSpec = qq.extend({}, extraButtonOptionEntry);\n\n                if (multiple === undefined) {\n                    multiple = self._options.multiple;\n                }\n\n                if (extraButtonSpec.validation) {\n                    qq.extend(validation, extraButtonOptionEntry.validation, true);\n                }\n\n                qq.extend(extraButtonSpec, {\n                    multiple: multiple,\n                    validation: validation\n                }, true);\n\n                self._initExtraButton(extraButtonSpec);\n            });\n        },\n\n        _getButton: function(buttonId) {\n            var extraButtonsSpec = this._extraButtonSpecs[buttonId];\n\n            if (extraButtonsSpec) {\n                return extraButtonsSpec.element;\n            }\n            else if (buttonId === this._defaultButtonId) {\n                return this._options.button;\n            }\n        },\n\n        /**\n         * Gets the internally used tracking ID for a button.\n         *\n         * @param buttonOrFileInputOrFile `File`, `<input type=\"file\">`, or a button container element\n         * @returns {*} The button's ID, or undefined if no ID is recoverable\n         * @private\n         */\n        _getButtonId: function(buttonOrFileInputOrFile) {\n            var inputs, fileInput,\n                fileBlobOrInput = buttonOrFileInputOrFile;\n\n            // We want the reference file/blob here if this is a proxy (a file that will be generated on-demand later)\n            if (fileBlobOrInput instanceof qq.BlobProxy) {\n                fileBlobOrInput = fileBlobOrInput.referenceBlob;\n            }\n\n            // If the item is a `Blob` it will never be associated with a button or drop zone.\n            if (fileBlobOrInput && !qq.isBlob(fileBlobOrInput)) {\n                if (qq.isFile(fileBlobOrInput)) {\n                    return fileBlobOrInput.qqButtonId;\n                }\n                else if (fileBlobOrInput.tagName.toLowerCase() === \"input\" &&\n                    fileBlobOrInput.type.toLowerCase() === \"file\") {\n\n                    return fileBlobOrInput.getAttribute(qq.UploadButton.BUTTON_ID_ATTR_NAME);\n                }\n\n                inputs = fileBlobOrInput.getElementsByTagName(\"input\");\n\n                qq.each(inputs, function(idx, input) {\n                    if (input.getAttribute(\"type\") === \"file\") {\n                        fileInput = input;\n                        return false;\n                    }\n                });\n\n                if (fileInput) {\n                    return fileInput.getAttribute(qq.UploadButton.BUTTON_ID_ATTR_NAME);\n                }\n            }\n        },\n\n        _getNotFinished: function() {\n            return this._uploadData.retrieve({\n                status: [\n                    qq.status.UPLOADING,\n                    qq.status.UPLOAD_RETRYING,\n                    qq.status.QUEUED,\n                    qq.status.SUBMITTING,\n                    qq.status.SUBMITTED,\n                    qq.status.PAUSED\n                ]\n            }).length;\n        },\n\n        // Get the validation options for this button.  Could be the default validation option\n        // or a specific one assigned to this particular button.\n        _getValidationBase: function(buttonId) {\n            var extraButtonSpec = this._extraButtonSpecs[buttonId];\n\n            return extraButtonSpec ? extraButtonSpec.validation : this._options.validation;\n        },\n\n        _getValidationDescriptor: function(fileWrapper) {\n            if (fileWrapper.file instanceof qq.BlobProxy) {\n                return {\n                    name: qq.getFilename(fileWrapper.file.referenceBlob),\n                    size: fileWrapper.file.referenceBlob.size\n                };\n            }\n\n            return {\n                name: this.getUploads({id: fileWrapper.id}).name,\n                size: this.getUploads({id: fileWrapper.id}).size\n            };\n        },\n\n        _getValidationDescriptors: function(fileWrappers) {\n            var self = this,\n                fileDescriptors = [];\n\n            qq.each(fileWrappers, function(idx, fileWrapper) {\n                fileDescriptors.push(self._getValidationDescriptor(fileWrapper));\n            });\n\n            return fileDescriptors;\n        },\n\n        // Allows camera access on either the default or an extra button for iOS devices.\n        _handleCameraAccess: function() {\n            if (this._options.camera.ios && qq.ios()) {\n                var acceptIosCamera = \"image/*;capture=camera\",\n                    button = this._options.camera.button,\n                    buttonId = button ? this._getButtonId(button) : this._defaultButtonId,\n                    optionRoot = this._options;\n\n                // If we are not targeting the default button, it is an \"extra\" button\n                if (buttonId && buttonId !== this._defaultButtonId) {\n                    optionRoot = this._extraButtonSpecs[buttonId];\n                }\n\n                // Camera access won't work in iOS if the `multiple` attribute is present on the file input\n                optionRoot.multiple = false;\n\n                // update the options\n                if (optionRoot.validation.acceptFiles === null) {\n                    optionRoot.validation.acceptFiles = acceptIosCamera;\n                }\n                else {\n                    optionRoot.validation.acceptFiles += \",\" + acceptIosCamera;\n                }\n\n                // update the already-created button\n                qq.each(this._buttons, function(idx, button) {\n                    if (button.getButtonId() === buttonId) {\n                        button.setMultiple(optionRoot.multiple);\n                        button.setAcceptFiles(optionRoot.acceptFiles);\n\n                        return false;\n                    }\n                });\n            }\n        },\n\n        _handleCheckedCallback: function(details) {\n            var self = this,\n                callbackRetVal = details.callback();\n\n            if (qq.isGenericPromise(callbackRetVal)) {\n                this.log(details.name + \" - waiting for \" + details.name + \" promise to be fulfilled for \" + details.identifier);\n                return callbackRetVal.then(\n                    function(successParam) {\n                        self.log(details.name + \" promise success for \" + details.identifier);\n                        details.onSuccess(successParam);\n                    },\n                    function() {\n                        if (details.onFailure) {\n                            self.log(details.name + \" promise failure for \" + details.identifier);\n                            details.onFailure();\n                        }\n                        else {\n                            self.log(details.name + \" promise failure for \" + details.identifier);\n                        }\n                    });\n            }\n\n            if (callbackRetVal !== false) {\n                details.onSuccess(callbackRetVal);\n            }\n            else {\n                if (details.onFailure) {\n                    this.log(details.name + \" - return value was 'false' for \" + details.identifier + \".  Invoking failure callback.\");\n                    details.onFailure();\n                }\n                else {\n                    this.log(details.name + \" - return value was 'false' for \" + details.identifier + \".  Will not proceed.\");\n                }\n            }\n\n            return callbackRetVal;\n        },\n\n        // Updates internal state when a new file has been received, and adds it along with its ID to a passed array.\n        _handleNewFile: function(file, batchId, newFileWrapperList) {\n            var self = this,\n                uuid = qq.getUniqueId(),\n                size = -1,\n                name = qq.getFilename(file),\n                actualFile = file.blob || file,\n                handler = this._customNewFileHandler ?\n                    this._customNewFileHandler :\n                    qq.bind(self._handleNewFileGeneric, self);\n\n            if (!qq.isInput(actualFile) && actualFile.size >= 0) {\n                size = actualFile.size;\n            }\n\n            handler(actualFile, name, uuid, size, newFileWrapperList, batchId, this._options.request.uuidName, {\n                uploadData: self._uploadData,\n                paramsStore: self._paramsStore,\n                addFileToHandler: function(id, file) {\n                    self._handler.add(id, file);\n                    self._netUploadedOrQueued++;\n                    self._trackButton(id);\n                }\n            });\n        },\n\n        _handleNewFileGeneric: function(file, name, uuid, size, fileList, batchId) {\n            var id = this._uploadData.addFile({uuid: uuid, name: name, size: size, batchId: batchId});\n\n            this._handler.add(id, file);\n            this._trackButton(id);\n\n            this._netUploadedOrQueued++;\n\n            fileList.push({id: id, file: file});\n        },\n\n        _handlePasteSuccess: function(blob, extSuppliedName) {\n            var extension = blob.type.split(\"/\")[1],\n                name = extSuppliedName;\n\n            /*jshint eqeqeq: true, eqnull: true*/\n            if (name == null) {\n                name = this._options.paste.defaultName;\n            }\n\n            name += \".\" + extension;\n\n            this.addFiles({\n                name: name,\n                blob: blob\n            });\n        },\n\n        _handleDeleteSuccess: function(id) {\n            if (this.getUploads({id: id}).status !== qq.status.DELETED) {\n                var name = this.getName(id);\n\n                this._netUploadedOrQueued--;\n                this._netUploaded--;\n                this._handler.expunge(id);\n                this._uploadData.setStatus(id, qq.status.DELETED);\n                this.log(\"Delete request for '\" + name + \"' has succeeded.\");\n            }\n        },\n\n        _handleDeleteFailed: function(id, xhrOrXdr) {\n            var name = this.getName(id);\n\n            this._uploadData.setStatus(id, qq.status.DELETE_FAILED);\n            this.log(\"Delete request for '\" + name + \"' has failed.\", \"error\");\n\n            // Check first if xhrOrXdr is actually passed or valid\n            // For error reporting, we only have access to the response status if this is not\n            // an `XDomainRequest`.\n            if (!xhrOrXdr || xhrOrXdr.withCredentials === undefined) {\n                this._options.callbacks.onError(id, name, \"Delete request failed\", xhrOrXdr);\n            }\n            else {\n                this._options.callbacks.onError(id, name, \"Delete request failed with response code \" + xhrOrXdr.status, xhrOrXdr);\n            }\n        },\n\n        // Creates an extra button element\n        _initExtraButton: function(spec) {\n            var button = this._createUploadButton({\n                accept: spec.validation.acceptFiles,\n                allowedExtensions: spec.validation.allowedExtensions,\n                element: spec.element,\n                folders: spec.folders,\n                multiple: spec.multiple,\n                title: spec.fileInputTitle\n            });\n\n            this._extraButtonSpecs[button.getButtonId()] = spec;\n        },\n\n        _initFormSupportAndParams: function() {\n            this._formSupport = qq.FormSupport && new qq.FormSupport(\n                this._options.form, qq.bind(this.uploadStoredFiles, this), qq.bind(this.log, this)\n            );\n\n            if (this._formSupport && this._formSupport.attachedToForm) {\n                this._paramsStore = this._createStore(\n                    this._options.request.params,  this._formSupport.getFormInputsAsObject\n                );\n\n                this._options.autoUpload = this._formSupport.newAutoUpload;\n                if (this._formSupport.newEndpoint) {\n                    this._options.request.endpoint = this._formSupport.newEndpoint;\n                }\n            }\n            else {\n                this._paramsStore = this._createStore(this._options.request.params);\n            }\n        },\n\n        _isDeletePossible: function() {\n            if (!qq.DeleteFileAjaxRequester || !this._options.deleteFile.enabled) {\n                return false;\n            }\n\n            if (this._options.cors.expected) {\n                if (qq.supportedFeatures.deleteFileCorsXhr) {\n                    return true;\n                }\n\n                if (qq.supportedFeatures.deleteFileCorsXdr && this._options.cors.allowXdr) {\n                    return true;\n                }\n\n                return false;\n            }\n\n            return true;\n        },\n\n        _isAllowedExtension: function(allowed, fileName) {\n            var valid = false;\n\n            if (!allowed.length) {\n                return true;\n            }\n\n            qq.each(allowed, function(idx, allowedExt) {\n                /**\n                 * If an argument is not a string, ignore it.  Added when a possible issue with MooTools hijacking the\n                 * `allowedExtensions` array was discovered.  See case #735 in the issue tracker for more details.\n                 */\n                if (qq.isString(allowedExt)) {\n                    /*jshint eqeqeq: true, eqnull: true*/\n                    var extRegex = new RegExp(\"\\\\.\" + allowedExt + \"$\", \"i\");\n\n                    if (fileName.match(extRegex) != null) {\n                        valid = true;\n                        return false;\n                    }\n                }\n            });\n\n            return valid;\n        },\n\n        /**\n         * Constructs and returns a message that describes an item/file error.  Also calls `onError` callback.\n         *\n         * @param code REQUIRED - a code that corresponds to a stock message describing this type of error\n         * @param maybeNameOrNames names of the items that have failed, if applicable\n         * @param item `File`, `Blob`, or `<input type=\"file\">`\n         * @private\n         */\n        _itemError: function(code, maybeNameOrNames, item) {\n            var message = this._options.messages[code],\n                allowedExtensions = [],\n                names = [].concat(maybeNameOrNames),\n                name = names[0],\n                buttonId = this._getButtonId(item),\n                validationBase = this._getValidationBase(buttonId),\n                extensionsForMessage, placeholderMatch;\n\n            function r(name, replacement) { message = message.replace(name, replacement); }\n\n            qq.each(validationBase.allowedExtensions, function(idx, allowedExtension) {\n                /**\n                 * If an argument is not a string, ignore it.  Added when a possible issue with MooTools hijacking the\n                 * `allowedExtensions` array was discovered.  See case #735 in the issue tracker for more details.\n                 */\n                if (qq.isString(allowedExtension)) {\n                    allowedExtensions.push(allowedExtension);\n                }\n            });\n\n            extensionsForMessage = allowedExtensions.join(\", \").toLowerCase();\n\n            r(\"{file}\", this._options.formatFileName(name));\n            r(\"{extensions}\", extensionsForMessage);\n            r(\"{sizeLimit}\", this._formatSize(validationBase.sizeLimit));\n            r(\"{minSizeLimit}\", this._formatSize(validationBase.minSizeLimit));\n\n            placeholderMatch = message.match(/(\\{\\w+\\})/g);\n            if (placeholderMatch !== null) {\n                qq.each(placeholderMatch, function(idx, placeholder) {\n                    r(placeholder, names[idx]);\n                });\n            }\n\n            this._options.callbacks.onError(null, name, message, undefined);\n\n            return message;\n        },\n\n        /**\n         * Conditionally orders a manual retry of a failed upload.\n         *\n         * @param id File ID of the failed upload\n         * @param callback Optional callback to invoke if a retry is prudent.\n         * In lieu of asking the upload handler to retry.\n         * @returns {boolean} true if a manual retry will occur\n         * @private\n         */\n        _manualRetry: function(id, callback) {\n            if (this._onBeforeManualRetry(id)) {\n                this._netUploadedOrQueued++;\n                this._uploadData.setStatus(id, qq.status.UPLOAD_RETRYING);\n\n                if (callback) {\n                    callback(id);\n                }\n                else {\n                    this._handler.retry(id);\n                }\n\n                return true;\n            }\n        },\n\n        _maybeAllComplete: function(id, status) {\n            var self = this,\n                notFinished = this._getNotFinished();\n\n            if (status === qq.status.UPLOAD_SUCCESSFUL) {\n                this._succeededSinceLastAllComplete.push(id);\n            }\n            else if (status === qq.status.UPLOAD_FAILED) {\n                this._failedSinceLastAllComplete.push(id);\n            }\n\n            if (notFinished === 0 &&\n                (this._succeededSinceLastAllComplete.length || this._failedSinceLastAllComplete.length)) {\n                // Attempt to ensure onAllComplete is not invoked before other callbacks, such as onCancel & onComplete\n                setTimeout(function() {\n                    self._onAllComplete(self._succeededSinceLastAllComplete, self._failedSinceLastAllComplete);\n                }, 0);\n            }\n        },\n\n        _maybeHandleIos8SafariWorkaround: function() {\n            var self = this;\n\n            if (this._options.workarounds.ios8SafariUploads && qq.ios800() && qq.iosSafari()) {\n                setTimeout(function() {\n                    window.alert(self._options.messages.unsupportedBrowserIos8Safari);\n                }, 0);\n                throw new qq.Error(this._options.messages.unsupportedBrowserIos8Safari);\n            }\n        },\n\n        _maybeParseAndSendUploadError: function(id, name, response, xhr) {\n            // Assuming no one will actually set the response code to something other than 200\n            // and still set 'success' to true...\n            if (!response.success) {\n                if (xhr && xhr.status !== 200 && !response.error) {\n                    this._options.callbacks.onError(id, name, \"XHR returned response code \" + xhr.status, xhr);\n                }\n                else {\n                    var errorReason = response.error ? response.error : this._options.text.defaultResponseError;\n                    this._options.callbacks.onError(id, name, errorReason, xhr);\n                }\n            }\n        },\n\n        _maybeProcessNextItemAfterOnValidateCallback: function(validItem, items, index, params, endpoint) {\n            var self = this;\n\n            if (items.length > index) {\n                if (validItem || !this._options.validation.stopOnFirstInvalidFile) {\n                    //use setTimeout to prevent a stack overflow with a large number of files in the batch & non-promissory callbacks\n                    setTimeout(function() {\n                        var validationDescriptor = self._getValidationDescriptor(items[index]),\n                            buttonId = self._getButtonId(items[index].file),\n                            button = self._getButton(buttonId);\n\n                        self._handleCheckedCallback({\n                            name: \"onValidate\",\n                            callback: qq.bind(self._options.callbacks.onValidate, self, validationDescriptor, button),\n                            onSuccess: qq.bind(self._onValidateCallbackSuccess, self, items, index, params, endpoint),\n                            onFailure: qq.bind(self._onValidateCallbackFailure, self, items, index, params, endpoint),\n                            identifier: \"Item '\" + validationDescriptor.name + \"', size: \" + validationDescriptor.size\n                        });\n                    }, 0);\n                }\n                else if (!validItem) {\n                    for (; index < items.length; index++) {\n                        self._fileOrBlobRejected(items[index].id);\n                    }\n                }\n            }\n        },\n\n        _onAllComplete: function(successful, failed) {\n            this._totalProgress && this._totalProgress.onAllComplete(successful, failed, this._preventRetries);\n\n            this._options.callbacks.onAllComplete(qq.extend([], successful), qq.extend([], failed));\n\n            this._succeededSinceLastAllComplete = [];\n            this._failedSinceLastAllComplete = [];\n        },\n\n        /**\n         * Attempt to automatically retry a failed upload.\n         *\n         * @param id The file ID of the failed upload\n         * @param name The name of the file associated with the failed upload\n         * @param responseJSON Response from the server, parsed into a javascript object\n         * @param xhr Ajax transport used to send the failed request\n         * @param callback Optional callback to be invoked if a retry is prudent.\n         * Invoked in lieu of asking the upload handler to retry.\n         * @returns {boolean} true if an auto-retry will occur\n         * @private\n         */\n        _onAutoRetry: function(id, name, responseJSON, xhr, callback) {\n            var self = this;\n\n            self._preventRetries[id] = responseJSON[self._options.retry.preventRetryResponseProperty];\n\n            if (self._shouldAutoRetry(id, name, responseJSON)) {\n                var retryWaitPeriod = self._options.retry.autoAttemptDelay * 1000;\n\n                self._maybeParseAndSendUploadError.apply(self, arguments);\n                self._options.callbacks.onAutoRetry(id, name, self._autoRetries[id]);\n                self._onBeforeAutoRetry(id, name);\n\n                self._uploadData.setStatus(id, qq.status.UPLOAD_RETRYING);\n                self._retryTimeouts[id] = setTimeout(function() {\n                    self.log(\"Starting retry for \" + name + \"...\");\n\n                    if (callback) {\n                        callback(id);\n                    }\n                    else {\n                        self._handler.retry(id);\n                    }\n                }, retryWaitPeriod);\n\n                return true;\n            }\n        },\n\n        _onBeforeAutoRetry: function(id, name) {\n            this.log(\"Waiting \" + this._options.retry.autoAttemptDelay + \" seconds before retrying \" + name + \"...\");\n        },\n\n        //return false if we should not attempt the requested retry\n        _onBeforeManualRetry: function(id) {\n            var itemLimit = this._currentItemLimit,\n                fileName;\n\n            if (this._preventRetries[id]) {\n                this.log(\"Retries are forbidden for id \" + id, \"warn\");\n                return false;\n            }\n            else if (this._handler.isValid(id)) {\n                fileName = this.getName(id);\n\n                if (this._options.callbacks.onManualRetry(id, fileName) === false) {\n                    return false;\n                }\n\n                if (itemLimit > 0 && this._netUploadedOrQueued + 1 > itemLimit) {\n                    this._itemError(\"retryFailTooManyItems\");\n                    return false;\n                }\n\n                this.log(\"Retrying upload for '\" + fileName + \"' (id: \" + id + \")...\");\n                return true;\n            }\n            else {\n                this.log(\"'\" + id + \"' is not a valid file ID\", \"error\");\n                return false;\n            }\n        },\n\n        _onCancel: function(id, name) {\n            this._netUploadedOrQueued--;\n\n            clearTimeout(this._retryTimeouts[id]);\n\n            var storedItemIndex = qq.indexOf(this._storedIds, id);\n            if (!this._options.autoUpload && storedItemIndex >= 0) {\n                this._storedIds.splice(storedItemIndex, 1);\n            }\n\n            this._uploadData.setStatus(id, qq.status.CANCELED);\n        },\n\n        _onComplete: function(id, name, result, xhr) {\n            if (!result.success) {\n                this._netUploadedOrQueued--;\n                this._uploadData.setStatus(id, qq.status.UPLOAD_FAILED);\n\n                if (result[this._options.retry.preventRetryResponseProperty] === true) {\n                    this._preventRetries[id] = true;\n                }\n            }\n            else {\n                if (result.thumbnailUrl) {\n                    this._thumbnailUrls[id] = result.thumbnailUrl;\n                }\n\n                this._netUploaded++;\n                this._uploadData.setStatus(id, qq.status.UPLOAD_SUCCESSFUL);\n            }\n\n            this._maybeParseAndSendUploadError(id, name, result, xhr);\n\n            return result.success ? true : false;\n        },\n\n        _onDelete: function(id) {\n            this._uploadData.setStatus(id, qq.status.DELETING);\n        },\n\n        _onDeleteComplete: function(id, xhrOrXdr, isError) {\n            var name = this.getName(id);\n\n            if (isError) {\n                this._handleDeleteFailed(id, xhrOrXdr);\n            }\n            else {\n                this._handleDeleteSuccess(id);\n            }\n        },\n\n        _onInputChange: function(input) {\n            var fileIndex;\n\n            if (qq.supportedFeatures.ajaxUploading) {\n                for (fileIndex = 0; fileIndex < input.files.length; fileIndex++) {\n                    this._annotateWithButtonId(input.files[fileIndex], input);\n                }\n\n                this.addFiles(input.files);\n            }\n            // Android 2.3.x will fire `onchange` even if no file has been selected\n            else if (input.value.length > 0) {\n                this.addFiles(input);\n            }\n\n            qq.each(this._buttons, function(idx, button) {\n                button.reset();\n            });\n        },\n\n        _onProgress: function(id, name, loaded, total) {\n            this._totalProgress && this._totalProgress.onIndividualProgress(id, loaded, total);\n        },\n\n        _onSubmit: function(id, name) {\n            //nothing to do yet in core uploader\n        },\n\n        _onSubmitCallbackSuccess: function(id, name) {\n            this._onSubmit.apply(this, arguments);\n            this._uploadData.setStatus(id, qq.status.SUBMITTED);\n            this._onSubmitted.apply(this, arguments);\n\n            if (this._options.autoUpload) {\n                this._options.callbacks.onSubmitted.apply(this, arguments);\n                this._uploadFile(id);\n            }\n            else {\n                this._storeForLater(id);\n                this._options.callbacks.onSubmitted.apply(this, arguments);\n            }\n        },\n\n        _onSubmitDelete: function(id, onSuccessCallback, additionalMandatedParams) {\n            var uuid = this.getUuid(id),\n                adjustedOnSuccessCallback;\n\n            if (onSuccessCallback) {\n                adjustedOnSuccessCallback = qq.bind(onSuccessCallback, this, id, uuid, additionalMandatedParams);\n            }\n\n            if (this._isDeletePossible()) {\n                this._handleCheckedCallback({\n                    name: \"onSubmitDelete\",\n                    callback: qq.bind(this._options.callbacks.onSubmitDelete, this, id),\n                    onSuccess: adjustedOnSuccessCallback ||\n                        qq.bind(this._deleteHandler.sendDelete, this, id, uuid, additionalMandatedParams),\n                    identifier: id\n                });\n                return true;\n            }\n            else {\n                this.log(\"Delete request ignored for ID \" + id + \", delete feature is disabled or request not possible \" +\n                    \"due to CORS on a user agent that does not support pre-flighting.\", \"warn\");\n                return false;\n            }\n        },\n\n        _onSubmitted: function(id) {\n            //nothing to do in the base uploader\n        },\n\n        _onTotalProgress: function(loaded, total) {\n            this._options.callbacks.onTotalProgress(loaded, total);\n        },\n\n        _onUploadPrep: function(id) {\n            // nothing to do in the core uploader for now\n        },\n\n        _onUpload: function(id, name) {\n            this._uploadData.setStatus(id, qq.status.UPLOADING);\n        },\n\n        _onUploadChunk: function(id, chunkData) {\n            //nothing to do in the base uploader\n        },\n\n        _onUploadStatusChange: function(id, oldStatus, newStatus) {\n            // Make sure a \"queued\" retry attempt is canceled if the upload has been paused\n            if (newStatus === qq.status.PAUSED) {\n                clearTimeout(this._retryTimeouts[id]);\n            }\n        },\n\n        _onValidateBatchCallbackFailure: function(fileWrappers) {\n            var self = this;\n\n            qq.each(fileWrappers, function(idx, fileWrapper) {\n                self._fileOrBlobRejected(fileWrapper.id);\n            });\n        },\n\n        _onValidateBatchCallbackSuccess: function(validationDescriptors, items, params, endpoint, button) {\n            var errorMessage,\n                itemLimit = this._currentItemLimit,\n                proposedNetFilesUploadedOrQueued = this._netUploadedOrQueued;\n\n            if (itemLimit === 0 || proposedNetFilesUploadedOrQueued <= itemLimit) {\n                if (items.length > 0) {\n                    this._handleCheckedCallback({\n                        name: \"onValidate\",\n                        callback: qq.bind(this._options.callbacks.onValidate, this, validationDescriptors[0], button),\n                        onSuccess: qq.bind(this._onValidateCallbackSuccess, this, items, 0, params, endpoint),\n                        onFailure: qq.bind(this._onValidateCallbackFailure, this, items, 0, params, endpoint),\n                        identifier: \"Item '\" + items[0].file.name + \"', size: \" + items[0].file.size\n                    });\n                }\n                else {\n                    this._itemError(\"noFilesError\");\n                }\n            }\n            else {\n                this._onValidateBatchCallbackFailure(items);\n                errorMessage = this._options.messages.tooManyItemsError\n                    .replace(/\\{netItems\\}/g, proposedNetFilesUploadedOrQueued)\n                    .replace(/\\{itemLimit\\}/g, itemLimit);\n                this._batchError(errorMessage);\n            }\n        },\n\n        _onValidateCallbackFailure: function(items, index, params, endpoint) {\n            var nextIndex = index + 1;\n\n            this._fileOrBlobRejected(items[index].id, items[index].file.name);\n\n            this._maybeProcessNextItemAfterOnValidateCallback(false, items, nextIndex, params, endpoint);\n        },\n\n        _onValidateCallbackSuccess: function(items, index, params, endpoint) {\n            var self = this,\n                nextIndex = index + 1,\n                validationDescriptor = this._getValidationDescriptor(items[index]);\n\n            this._validateFileOrBlobData(items[index], validationDescriptor)\n                .then(\n                function() {\n                    self._upload(items[index].id, params, endpoint);\n                    self._maybeProcessNextItemAfterOnValidateCallback(true, items, nextIndex, params, endpoint);\n                },\n                function() {\n                    self._maybeProcessNextItemAfterOnValidateCallback(false, items, nextIndex, params, endpoint);\n                }\n            );\n        },\n\n        _prepareItemsForUpload: function(items, params, endpoint) {\n            if (items.length === 0) {\n                this._itemError(\"noFilesError\");\n                return;\n            }\n\n            var validationDescriptors = this._getValidationDescriptors(items),\n                buttonId = this._getButtonId(items[0].file),\n                button = this._getButton(buttonId);\n\n            this._handleCheckedCallback({\n                name: \"onValidateBatch\",\n                callback: qq.bind(this._options.callbacks.onValidateBatch, this, validationDescriptors, button),\n                onSuccess: qq.bind(this._onValidateBatchCallbackSuccess, this, validationDescriptors, items, params, endpoint, button),\n                onFailure: qq.bind(this._onValidateBatchCallbackFailure, this, items),\n                identifier: \"batch validation\"\n            });\n        },\n\n        _preventLeaveInProgress: function() {\n            var self = this;\n\n            this._disposeSupport.attach(window, \"beforeunload\", function(e) {\n                if (self.getInProgress()) {\n                    e = e || window.event;\n                    // for ie, ff\n                    e.returnValue = self._options.messages.onLeave;\n                    // for webkit\n                    return self._options.messages.onLeave;\n                }\n            });\n        },\n\n        // Attempts to refresh session data only if the `qq.Session` module exists\n        // and a session endpoint has been specified.  The `onSessionRequestComplete`\n        // callback will be invoked once the refresh is complete.\n        _refreshSessionData: function() {\n            var self = this,\n                options = this._options.session;\n\n            /* jshint eqnull:true */\n            if (qq.Session && this._options.session.endpoint != null) {\n                if (!this._session) {\n                    qq.extend(options, {cors: this._options.cors});\n\n                    options.log = qq.bind(this.log, this);\n                    options.addFileRecord = qq.bind(this._addCannedFile, this);\n\n                    this._session = new qq.Session(options);\n                }\n\n                setTimeout(function() {\n                    self._session.refresh().then(function(response, xhrOrXdr) {\n                        self._sessionRequestComplete();\n                        self._options.callbacks.onSessionRequestComplete(response, true, xhrOrXdr);\n\n                    }, function(response, xhrOrXdr) {\n\n                        self._options.callbacks.onSessionRequestComplete(response, false, xhrOrXdr);\n                    });\n                }, 0);\n            }\n        },\n\n        _sessionRequestComplete: function() {},\n\n        _setSize: function(id, newSize) {\n            this._uploadData.updateSize(id, newSize);\n            this._totalProgress && this._totalProgress.onNewSize(id);\n        },\n\n        _shouldAutoRetry: function(id, name, responseJSON) {\n            var uploadData = this._uploadData.retrieve({id: id});\n\n            /*jshint laxbreak: true */\n            if (!this._preventRetries[id]\n                && this._options.retry.enableAuto\n                && uploadData.status !== qq.status.PAUSED) {\n\n                if (this._autoRetries[id] === undefined) {\n                    this._autoRetries[id] = 0;\n                }\n\n                if (this._autoRetries[id] < this._options.retry.maxAutoAttempts) {\n                    this._autoRetries[id] += 1;\n                    return true;\n                }\n            }\n\n            return false;\n        },\n\n        _storeForLater: function(id) {\n            this._storedIds.push(id);\n        },\n\n        // Maps a file with the button that was used to select it.\n        _trackButton: function(id) {\n            var buttonId;\n\n            if (qq.supportedFeatures.ajaxUploading) {\n                buttonId = this._handler.getFile(id).qqButtonId;\n            }\n            else {\n                buttonId = this._getButtonId(this._handler.getInput(id));\n            }\n\n            if (buttonId) {\n                this._buttonIdsForFileIds[id] = buttonId;\n            }\n        },\n\n        _updateFormSupportAndParams: function(formElementOrId) {\n            this._options.form.element = formElementOrId;\n\n            this._formSupport = qq.FormSupport && new qq.FormSupport(\n                    this._options.form, qq.bind(this.uploadStoredFiles, this), qq.bind(this.log, this)\n                );\n\n            if (this._formSupport && this._formSupport.attachedToForm) {\n                this._paramsStore.addReadOnly(null, this._formSupport.getFormInputsAsObject);\n\n                this._options.autoUpload = this._formSupport.newAutoUpload;\n                if (this._formSupport.newEndpoint) {\n                    this.setEndpoint(this._formSupport.newEndpoint);\n                }\n            }\n        },\n\n        _upload: function(id, params, endpoint) {\n            var name = this.getName(id);\n\n            if (params) {\n                this.setParams(params, id);\n            }\n\n            if (endpoint) {\n                this.setEndpoint(endpoint, id);\n            }\n\n            this._handleCheckedCallback({\n                name: \"onSubmit\",\n                callback: qq.bind(this._options.callbacks.onSubmit, this, id, name),\n                onSuccess: qq.bind(this._onSubmitCallbackSuccess, this, id, name),\n                onFailure: qq.bind(this._fileOrBlobRejected, this, id, name),\n                identifier: id\n            });\n        },\n\n        _uploadFile: function(id) {\n            if (!this._handler.upload(id)) {\n                this._uploadData.setStatus(id, qq.status.QUEUED);\n            }\n        },\n\n        _uploadStoredFiles: function() {\n            var idToUpload, stillSubmitting,\n                self = this;\n\n            while (this._storedIds.length) {\n                idToUpload = this._storedIds.shift();\n                this._uploadFile(idToUpload);\n            }\n\n            // If we are still waiting for some files to clear validation, attempt to upload these again in a bit\n            stillSubmitting = this.getUploads({status: qq.status.SUBMITTING}).length;\n            if (stillSubmitting) {\n                qq.log(\"Still waiting for \" + stillSubmitting + \" files to clear submit queue. Will re-parse stored IDs array shortly.\");\n                setTimeout(function() {\n                    self._uploadStoredFiles();\n                }, 1000);\n            }\n        },\n\n        /**\n         * Performs some internal validation checks on an item, defined in the `validation` option.\n         *\n         * @param fileWrapper Wrapper containing a `file` along with an `id`\n         * @param validationDescriptor Normalized information about the item (`size`, `name`).\n         * @returns qq.Promise with appropriate callbacks invoked depending on the validity of the file\n         * @private\n         */\n        _validateFileOrBlobData: function(fileWrapper, validationDescriptor) {\n            var self = this,\n                file = (function() {\n                    if (fileWrapper.file instanceof qq.BlobProxy) {\n                        return fileWrapper.file.referenceBlob;\n                    }\n                    return fileWrapper.file;\n                }()),\n                name = validationDescriptor.name,\n                size = validationDescriptor.size,\n                buttonId = this._getButtonId(fileWrapper.file),\n                validationBase = this._getValidationBase(buttonId),\n                validityChecker = new qq.Promise();\n\n            validityChecker.then(\n                function() {},\n                function() {\n                    self._fileOrBlobRejected(fileWrapper.id, name);\n                });\n\n            if (qq.isFileOrInput(file) && !this._isAllowedExtension(validationBase.allowedExtensions, name)) {\n                this._itemError(\"typeError\", name, file);\n                return validityChecker.failure();\n            }\n\n            if (!this._options.validation.allowEmpty && size === 0) {\n                this._itemError(\"emptyError\", name, file);\n                return validityChecker.failure();\n            }\n\n            if (size > 0 && validationBase.sizeLimit && size > validationBase.sizeLimit) {\n                this._itemError(\"sizeError\", name, file);\n                return validityChecker.failure();\n            }\n\n            if (size > 0 && size < validationBase.minSizeLimit) {\n                this._itemError(\"minSizeError\", name, file);\n                return validityChecker.failure();\n            }\n\n            if (qq.ImageValidation && qq.supportedFeatures.imagePreviews && qq.isFile(file)) {\n                new qq.ImageValidation(file, qq.bind(self.log, self)).validate(validationBase.image).then(\n                    validityChecker.success,\n                    function(errorCode) {\n                        self._itemError(errorCode + \"ImageError\", name, file);\n                        validityChecker.failure();\n                    }\n                );\n            }\n            else {\n                validityChecker.success();\n            }\n\n            return validityChecker;\n        },\n\n        _wrapCallbacks: function() {\n            var self, safeCallback, prop;\n\n            self = this;\n\n            safeCallback = function(name, callback, args) {\n                var errorMsg;\n\n                try {\n                    return callback.apply(self, args);\n                }\n                catch (exception) {\n                    errorMsg = exception.message || exception.toString();\n                    self.log(\"Caught exception in '\" + name + \"' callback - \" + errorMsg, \"error\");\n                }\n            };\n\n            /* jshint forin: false, loopfunc: true */\n            for (prop in this._options.callbacks) {\n                (function() {\n                    var callbackName, callbackFunc;\n                    callbackName = prop;\n                    callbackFunc = self._options.callbacks[callbackName];\n                    self._options.callbacks[callbackName] = function() {\n                        return safeCallback(callbackName, callbackFunc, arguments);\n                    };\n                }());\n            }\n        }\n    };\n}());\n",
    "/*globals qq*/\n(function() {\n    \"use strict\";\n\n    qq.FineUploaderBasic = function(o) {\n        var self = this;\n\n        // These options define FineUploaderBasic mode.\n        this._options = {\n            debug: false,\n            button: null,\n            multiple: true,\n            maxConnections: 3,\n            disableCancelForFormUploads: false,\n            autoUpload: true,\n\n            request: {\n                customHeaders: {},\n                endpoint: \"/server/upload\",\n                filenameParam: \"qqfilename\",\n                forceMultipart: true,\n                inputName: \"qqfile\",\n                method: \"POST\",\n                params: {},\n                paramsInBody: true,\n                totalFileSizeName: \"qqtotalfilesize\",\n                uuidName: \"qquuid\"\n            },\n\n            validation: {\n                allowedExtensions: [],\n                sizeLimit: 0,\n                minSizeLimit: 0,\n                itemLimit: 0,\n                stopOnFirstInvalidFile: true,\n                acceptFiles: null,\n                image: {\n                    maxHeight: 0,\n                    maxWidth: 0,\n                    minHeight: 0,\n                    minWidth: 0\n                },\n                allowEmpty: false\n            },\n\n            callbacks: {\n                onSubmit: function(id, name) {},\n                onSubmitted: function(id, name) {},\n                onComplete: function(id, name, responseJSON, maybeXhr) {},\n                onAllComplete: function(successful, failed) {},\n                onCancel: function(id, name) {},\n                onUpload: function(id, name) {},\n                onUploadChunk: function(id, name, chunkData) {},\n                onUploadChunkSuccess: function(id, chunkData, responseJSON, xhr) {},\n                onResume: function(id, fileName, chunkData) {},\n                onProgress: function(id, name, loaded, total) {},\n                onTotalProgress: function(loaded, total) {},\n                onError: function(id, name, reason, maybeXhrOrXdr) {},\n                onAutoRetry: function(id, name, attemptNumber) {},\n                onManualRetry: function(id, name) {},\n                onValidateBatch: function(fileOrBlobData) {},\n                onValidate: function(fileOrBlobData) {},\n                onSubmitDelete: function(id) {},\n                onDelete: function(id) {},\n                onDeleteComplete: function(id, xhrOrXdr, isError) {},\n                onPasteReceived: function(blob) {},\n                onStatusChange: function(id, oldStatus, newStatus) {},\n                onSessionRequestComplete: function(response, success, xhrOrXdr) {}\n            },\n\n            messages: {\n                typeError: \"{file} has an invalid extension. Valid extension(s): {extensions}.\",\n                sizeError: \"{file} is too large, maximum file size is {sizeLimit}.\",\n                minSizeError: \"{file} is too small, minimum file size is {minSizeLimit}.\",\n                emptyError: \"{file} is empty, please select files again without it.\",\n                noFilesError: \"No files to upload.\",\n                tooManyItemsError: \"Too many items ({netItems}) would be uploaded.  Item limit is {itemLimit}.\",\n                maxHeightImageError: \"Image is too tall.\",\n                maxWidthImageError: \"Image is too wide.\",\n                minHeightImageError: \"Image is not tall enough.\",\n                minWidthImageError: \"Image is not wide enough.\",\n                retryFailTooManyItems: \"Retry failed - you have reached your file limit.\",\n                onLeave: \"The files are being uploaded, if you leave now the upload will be canceled.\",\n                unsupportedBrowserIos8Safari: \"Unrecoverable error - this browser does not permit file uploading of any kind due to serious bugs in iOS8 Safari.  Please use iOS8 Chrome until Apple fixes these issues.\"\n            },\n\n            retry: {\n                enableAuto: false,\n                maxAutoAttempts: 3,\n                autoAttemptDelay: 5,\n                preventRetryResponseProperty: \"preventRetry\"\n            },\n\n            classes: {\n                buttonHover: \"qq-upload-button-hover\",\n                buttonFocus: \"qq-upload-button-focus\"\n            },\n\n            chunking: {\n                enabled: false,\n                concurrent: {\n                    enabled: false\n                },\n                mandatory: false,\n                paramNames: {\n                    partIndex: \"qqpartindex\",\n                    partByteOffset: \"qqpartbyteoffset\",\n                    chunkSize: \"qqchunksize\",\n                    totalFileSize: \"qqtotalfilesize\",\n                    totalParts: \"qqtotalparts\"\n                },\n                partSize: 2000000,\n                // only relevant for traditional endpoints, only required when concurrent.enabled === true\n                success: {\n                    endpoint: null\n                }\n            },\n\n            resume: {\n                enabled: false,\n                recordsExpireIn: 7, //days\n                paramNames: {\n                    resuming: \"qqresume\"\n                }\n            },\n\n            formatFileName: function(fileOrBlobName) {\n                return fileOrBlobName;\n            },\n\n            text: {\n                defaultResponseError: \"Upload failure reason unknown\",\n                fileInputTitle: \"file input\",\n                sizeSymbols: [\"kB\", \"MB\", \"GB\", \"TB\", \"PB\", \"EB\"]\n            },\n\n            deleteFile: {\n                enabled: false,\n                method: \"DELETE\",\n                endpoint: \"/server/upload\",\n                customHeaders: {},\n                params: {}\n            },\n\n            cors: {\n                expected: false,\n                sendCredentials: false,\n                allowXdr: false\n            },\n\n            blobs: {\n                defaultName: \"misc_data\"\n            },\n\n            paste: {\n                targetElement: null,\n                defaultName: \"pasted_image\"\n            },\n\n            camera: {\n                ios: false,\n\n                // if ios is true: button is null means target the default button, otherwise target the button specified\n                button: null\n            },\n\n            // This refers to additional upload buttons to be handled by Fine Uploader.\n            // Each element is an object, containing `element` as the only required\n            // property.  The `element` must be a container that will ultimately\n            // contain an invisible `<input type=\"file\">` created by Fine Uploader.\n            // Optional properties of each object include `multiple`, `validation`,\n            // and `folders`.\n            extraButtons: [],\n\n            // Depends on the session module.  Used to query the server for an initial file list\n            // during initialization and optionally after a `reset`.\n            session: {\n                endpoint: null,\n                params: {},\n                customHeaders: {},\n                refreshOnReset: true\n            },\n\n            // Send parameters associated with an existing form along with the files\n            form: {\n                // Element ID, HTMLElement, or null\n                element: \"qq-form\",\n\n                // Overrides the base `autoUpload`, unless `element` is null.\n                autoUpload: false,\n\n                // true = upload files on form submission (and squelch submit event)\n                interceptSubmit: true\n            },\n\n            // scale images client side, upload a new file for each scaled version\n            scaling: {\n                customResizer: null,\n\n                // send the original file as well\n                sendOriginal: true,\n\n                // fox orientation for scaled images\n                orient: true,\n\n                // If null, scaled image type will match reference image type.  This value will be referred to\n                // for any size record that does not specific a type.\n                defaultType: null,\n\n                defaultQuality: 80,\n\n                failureText: \"Failed to scale\",\n\n                includeExif: false,\n\n                // metadata about each requested scaled version\n                sizes: []\n            },\n\n            workarounds: {\n                iosEmptyVideos: true,\n                ios8SafariUploads: true,\n                ios8BrowserCrash: false\n            }\n        };\n\n        // Replace any default options with user defined ones\n        qq.extend(this._options, o, true);\n\n        this._buttons = [];\n        this._extraButtonSpecs = {};\n        this._buttonIdsForFileIds = [];\n\n        this._wrapCallbacks();\n        this._disposeSupport =  new qq.DisposeSupport();\n\n        this._storedIds = [];\n        this._autoRetries = [];\n        this._retryTimeouts = [];\n        this._preventRetries = [];\n        this._thumbnailUrls = [];\n\n        this._netUploadedOrQueued = 0;\n        this._netUploaded = 0;\n        this._uploadData = this._createUploadDataTracker();\n\n        this._initFormSupportAndParams();\n\n        this._customHeadersStore = this._createStore(this._options.request.customHeaders);\n        this._deleteFileCustomHeadersStore = this._createStore(this._options.deleteFile.customHeaders);\n\n        this._deleteFileParamsStore = this._createStore(this._options.deleteFile.params);\n\n        this._endpointStore = this._createStore(this._options.request.endpoint);\n        this._deleteFileEndpointStore = this._createStore(this._options.deleteFile.endpoint);\n\n        this._handler = this._createUploadHandler();\n\n        this._deleteHandler = qq.DeleteFileAjaxRequester && this._createDeleteHandler();\n\n        if (this._options.button) {\n            this._defaultButtonId = this._createUploadButton({\n                element: this._options.button,\n                title: this._options.text.fileInputTitle\n            }).getButtonId();\n        }\n\n        this._generateExtraButtonSpecs();\n\n        this._handleCameraAccess();\n\n        if (this._options.paste.targetElement) {\n            if (qq.PasteSupport) {\n                this._pasteHandler = this._createPasteHandler();\n            }\n            else {\n                this.log(\"Paste support module not found\", \"error\");\n            }\n        }\n\n        this._preventLeaveInProgress();\n\n        this._imageGenerator = qq.ImageGenerator && new qq.ImageGenerator(qq.bind(this.log, this));\n        this._refreshSessionData();\n\n        this._succeededSinceLastAllComplete = [];\n        this._failedSinceLastAllComplete = [];\n\n        this._scaler = (qq.Scaler && new qq.Scaler(this._options.scaling, qq.bind(this.log, this))) || {};\n        if (this._scaler.enabled) {\n            this._customNewFileHandler = qq.bind(this._scaler.handleNewFile, this._scaler);\n        }\n\n        if (qq.TotalProgress && qq.supportedFeatures.progressBar) {\n            this._totalProgress = new qq.TotalProgress(\n                qq.bind(this._onTotalProgress, this),\n\n                function(id) {\n                    var entry = self._uploadData.retrieve({id: id});\n                    return (entry && entry.size) || 0;\n                }\n            );\n        }\n\n        this._currentItemLimit = this._options.validation.itemLimit;\n    };\n\n    // Define the private & public API methods.\n    qq.FineUploaderBasic.prototype = qq.basePublicApi;\n    qq.extend(qq.FineUploaderBasic.prototype, qq.basePrivateApi);\n}());\n",
    "/*globals qq, XDomainRequest*/\n/** Generic class for sending non-upload ajax requests and handling the associated responses **/\nqq.AjaxRequester = function(o) {\n    \"use strict\";\n\n    var log, shouldParamsBeInQueryString,\n        queue = [],\n        requestData = {},\n        options = {\n            acceptHeader: null,\n            validMethods: [\"PATCH\", \"POST\", \"PUT\"],\n            method: \"POST\",\n            contentType: \"application/x-www-form-urlencoded\",\n            maxConnections: 3,\n            customHeaders: {},\n            endpointStore: {},\n            paramsStore: {},\n            mandatedParams: {},\n            allowXRequestedWithAndCacheControl: true,\n            successfulResponseCodes: {\n                DELETE: [200, 202, 204],\n                PATCH: [200, 201, 202, 203, 204],\n                POST: [200, 201, 202, 203, 204],\n                PUT: [200, 201, 202, 203, 204],\n                GET: [200]\n            },\n            cors: {\n                expected: false,\n                sendCredentials: false\n            },\n            log: function(str, level) {},\n            onSend: function(id) {},\n            onComplete: function(id, xhrOrXdr, isError) {},\n            onProgress: null\n        };\n\n    qq.extend(options, o);\n    log = options.log;\n\n    if (qq.indexOf(options.validMethods, options.method) < 0) {\n        throw new Error(\"'\" + options.method + \"' is not a supported method for this type of request!\");\n    }\n\n    // [Simple methods](http://www.w3.org/TR/cors/#simple-method)\n    // are defined by the W3C in the CORS spec as a list of methods that, in part,\n    // make a CORS request eligible to be exempt from preflighting.\n    function isSimpleMethod() {\n        return qq.indexOf([\"GET\", \"POST\", \"HEAD\"], options.method) >= 0;\n    }\n\n    // [Simple headers](http://www.w3.org/TR/cors/#simple-header)\n    // are defined by the W3C in the CORS spec as a list of headers that, in part,\n    // make a CORS request eligible to be exempt from preflighting.\n    function containsNonSimpleHeaders(headers) {\n        var containsNonSimple = false;\n\n        qq.each(containsNonSimple, function(idx, header) {\n            if (qq.indexOf([\"Accept\", \"Accept-Language\", \"Content-Language\", \"Content-Type\"], header) < 0) {\n                containsNonSimple = true;\n                return false;\n            }\n        });\n\n        return containsNonSimple;\n    }\n\n    function isXdr(xhr) {\n        //The `withCredentials` test is a commonly accepted way to determine if XHR supports CORS.\n        return options.cors.expected && xhr.withCredentials === undefined;\n    }\n\n    // Returns either a new `XMLHttpRequest` or `XDomainRequest` instance.\n    function getCorsAjaxTransport() {\n        var xhrOrXdr;\n\n        if (window.XMLHttpRequest || window.ActiveXObject) {\n            xhrOrXdr = qq.createXhrInstance();\n\n            if (xhrOrXdr.withCredentials === undefined) {\n                xhrOrXdr = new XDomainRequest();\n                // Workaround for XDR bug in IE9 - https://social.msdn.microsoft.com/Forums/ie/en-US/30ef3add-767c-4436-b8a9-f1ca19b4812e/ie9-rtm-xdomainrequest-issued-requests-may-abort-if-all-event-handlers-not-specified?forum=iewebdevelopment\n                xhrOrXdr.onload = function() {};\n                xhrOrXdr.onerror = function() {};\n                xhrOrXdr.ontimeout = function() {};\n                xhrOrXdr.onprogress = function() {};\n            }\n        }\n\n        return xhrOrXdr;\n    }\n\n    // Returns either a new XHR/XDR instance, or an existing one for the associated `File` or `Blob`.\n    function getXhrOrXdr(id, suppliedXhr) {\n        var xhrOrXdr = requestData[id].xhr;\n\n        if (!xhrOrXdr) {\n            if (suppliedXhr) {\n                xhrOrXdr = suppliedXhr;\n            }\n            else {\n                if (options.cors.expected) {\n                    xhrOrXdr = getCorsAjaxTransport();\n                }\n                else {\n                    xhrOrXdr = qq.createXhrInstance();\n                }\n            }\n\n            requestData[id].xhr = xhrOrXdr;\n        }\n\n        return xhrOrXdr;\n    }\n\n    // Removes element from queue, sends next request\n    function dequeue(id) {\n        var i = qq.indexOf(queue, id),\n            max = options.maxConnections,\n            nextId;\n\n        delete requestData[id];\n        queue.splice(i, 1);\n\n        if (queue.length >= max && i < max) {\n            nextId = queue[max - 1];\n            sendRequest(nextId);\n        }\n    }\n\n    function onComplete(id, xdrError) {\n        var xhr = getXhrOrXdr(id),\n            method = options.method,\n            isError = xdrError === true;\n\n        dequeue(id);\n\n        if (isError) {\n            log(method + \" request for \" + id + \" has failed\", \"error\");\n        }\n        else if (!isXdr(xhr) && !isResponseSuccessful(xhr.status)) {\n            isError = true;\n            log(method + \" request for \" + id + \" has failed - response code \" + xhr.status, \"error\");\n        }\n\n        options.onComplete(id, xhr, isError);\n    }\n\n    function getParams(id) {\n        var onDemandParams = requestData[id].additionalParams,\n            mandatedParams = options.mandatedParams,\n            params;\n\n        if (options.paramsStore.get) {\n            params = options.paramsStore.get(id);\n        }\n\n        if (onDemandParams) {\n            qq.each(onDemandParams, function(name, val) {\n                params = params || {};\n                params[name] = val;\n            });\n        }\n\n        if (mandatedParams) {\n            qq.each(mandatedParams, function(name, val) {\n                params = params || {};\n                params[name] = val;\n            });\n        }\n\n        return params;\n    }\n\n    function sendRequest(id, optXhr) {\n        var xhr = getXhrOrXdr(id, optXhr),\n            method = options.method,\n            params = getParams(id),\n            payload = requestData[id].payload,\n            url;\n\n        options.onSend(id);\n\n        url = createUrl(id, params, requestData[id].additionalQueryParams);\n\n        // XDR and XHR status detection APIs differ a bit.\n        if (isXdr(xhr)) {\n            xhr.onload = getXdrLoadHandler(id);\n            xhr.onerror = getXdrErrorHandler(id);\n        }\n        else {\n            xhr.onreadystatechange = getXhrReadyStateChangeHandler(id);\n        }\n\n        registerForUploadProgress(id);\n\n        // The last parameter is assumed to be ignored if we are actually using `XDomainRequest`.\n        xhr.open(method, url, true);\n\n        // Instruct the transport to send cookies along with the CORS request,\n        // unless we are using `XDomainRequest`, which is not capable of this.\n        if (options.cors.expected && options.cors.sendCredentials && !isXdr(xhr)) {\n            xhr.withCredentials = true;\n        }\n\n        setHeaders(id);\n\n        log(\"Sending \" + method + \" request for \" + id);\n\n        if (payload) {\n            xhr.send(payload);\n        }\n        else if (shouldParamsBeInQueryString || !params) {\n            xhr.send();\n        }\n        else if (params && options.contentType && options.contentType.toLowerCase().indexOf(\"application/x-www-form-urlencoded\") >= 0) {\n            xhr.send(qq.obj2url(params, \"\"));\n        }\n        else if (params && options.contentType && options.contentType.toLowerCase().indexOf(\"application/json\") >= 0) {\n            xhr.send(JSON.stringify(params));\n        }\n        else {\n            xhr.send(params);\n        }\n\n        return xhr;\n    }\n\n    function createUrl(id, params, additionalQueryParams) {\n        var endpoint = options.endpointStore.get(id),\n            addToPath = requestData[id].addToPath;\n\n        /*jshint -W116,-W041 */\n        if (addToPath != undefined) {\n            endpoint += \"/\" + addToPath;\n        }\n\n        if (shouldParamsBeInQueryString && params) {\n            endpoint = qq.obj2url(params, endpoint);\n        }\n\n        if (additionalQueryParams) {\n            endpoint = qq.obj2url(additionalQueryParams, endpoint);\n        }\n\n        return endpoint;\n    }\n\n    // Invoked by the UA to indicate a number of possible states that describe\n    // a live `XMLHttpRequest` transport.\n    function getXhrReadyStateChangeHandler(id) {\n        return function() {\n            if (getXhrOrXdr(id).readyState === 4) {\n                onComplete(id);\n            }\n        };\n    }\n\n    function registerForUploadProgress(id) {\n        var onProgress = options.onProgress;\n\n        if (onProgress) {\n            getXhrOrXdr(id).upload.onprogress = function(e) {\n                if (e.lengthComputable) {\n                    onProgress(id, e.loaded, e.total);\n                }\n            };\n        }\n    }\n\n    // This will be called by IE to indicate **success** for an associated\n    // `XDomainRequest` transported request.\n    function getXdrLoadHandler(id) {\n        return function() {\n            onComplete(id);\n        };\n    }\n\n    // This will be called by IE to indicate **failure** for an associated\n    // `XDomainRequest` transported request.\n    function getXdrErrorHandler(id) {\n        return function() {\n            onComplete(id, true);\n        };\n    }\n\n    function setHeaders(id) {\n        var xhr = getXhrOrXdr(id),\n            customHeaders = options.customHeaders,\n            onDemandHeaders = requestData[id].additionalHeaders || {},\n            method = options.method,\n            allHeaders = {};\n\n        // If XDomainRequest is being used, we can't set headers, so just ignore this block.\n        if (!isXdr(xhr)) {\n            options.acceptHeader && xhr.setRequestHeader(\"Accept\", options.acceptHeader);\n\n            // Only attempt to add X-Requested-With & Cache-Control if permitted\n            if (options.allowXRequestedWithAndCacheControl) {\n                // Do not add X-Requested-With & Cache-Control if this is a cross-origin request\n                // OR the cross-origin request contains a non-simple method or header.\n                // This is done to ensure a preflight is not triggered exclusively based on the\n                // addition of these 2 non-simple headers.\n                if (!options.cors.expected || (!isSimpleMethod() || containsNonSimpleHeaders(customHeaders))) {\n                    xhr.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\n                    xhr.setRequestHeader(\"Cache-Control\", \"no-cache\");\n                }\n            }\n\n            if (options.contentType && (method === \"POST\" || method === \"PUT\")) {\n                xhr.setRequestHeader(\"Content-Type\", options.contentType);\n            }\n\n            qq.extend(allHeaders, qq.isFunction(customHeaders) ? customHeaders(id) : customHeaders);\n            qq.extend(allHeaders, onDemandHeaders);\n\n            qq.each(allHeaders, function(name, val) {\n                xhr.setRequestHeader(name, val);\n            });\n        }\n    }\n\n    function isResponseSuccessful(responseCode) {\n        return qq.indexOf(options.successfulResponseCodes[options.method], responseCode) >= 0;\n    }\n\n    function prepareToSend(id, optXhr, addToPath, additionalParams, additionalQueryParams, additionalHeaders, payload) {\n        requestData[id] = {\n            addToPath: addToPath,\n            additionalParams: additionalParams,\n            additionalQueryParams: additionalQueryParams,\n            additionalHeaders: additionalHeaders,\n            payload: payload\n        };\n\n        var len = queue.push(id);\n\n        // if too many active connections, wait...\n        if (len <= options.maxConnections) {\n            return sendRequest(id, optXhr);\n        }\n    }\n\n    shouldParamsBeInQueryString = options.method === \"GET\" || options.method === \"DELETE\";\n\n    qq.extend(this, {\n        // Start the process of sending the request.  The ID refers to the file associated with the request.\n        initTransport: function(id) {\n            var path, params, headers, payload, cacheBuster, additionalQueryParams;\n\n            return {\n                // Optionally specify the end of the endpoint path for the request.\n                withPath: function(appendToPath) {\n                    path = appendToPath;\n                    return this;\n                },\n\n                // Optionally specify additional parameters to send along with the request.\n                // These will be added to the query string for GET/DELETE requests or the payload\n                // for POST/PUT requests.  The Content-Type of the request will be used to determine\n                // how these parameters should be formatted as well.\n                withParams: function(additionalParams) {\n                    params = additionalParams;\n                    return this;\n                },\n\n                withQueryParams: function(_additionalQueryParams_) {\n                    additionalQueryParams = _additionalQueryParams_;\n                    return this;\n                },\n\n                // Optionally specify additional headers to send along with the request.\n                withHeaders: function(additionalHeaders) {\n                    headers = additionalHeaders;\n                    return this;\n                },\n\n                // Optionally specify a payload/body for the request.\n                withPayload: function(thePayload) {\n                    payload = thePayload;\n                    return this;\n                },\n\n                // Appends a cache buster (timestamp) to the request URL as a query parameter (only if GET or DELETE)\n                withCacheBuster: function() {\n                    cacheBuster = true;\n                    return this;\n                },\n\n                // Send the constructed request.\n                send: function(optXhr) {\n                    if (cacheBuster && qq.indexOf([\"GET\", \"DELETE\"], options.method) >= 0) {\n                        params.qqtimestamp = new Date().getTime();\n                    }\n\n                    return prepareToSend(id, optXhr, path, params, additionalQueryParams, headers, payload);\n                }\n            };\n        },\n\n        canceled: function(id) {\n            dequeue(id);\n        }\n    });\n};\n",
    "/* globals qq */\n/**\n * Common upload handler functions.\n *\n * @constructor\n */\nqq.UploadHandler = function(spec) {\n    \"use strict\";\n\n    var proxy = spec.proxy,\n        fileState = {},\n        onCancel = proxy.onCancel,\n        getName = proxy.getName;\n\n    qq.extend(this, {\n        add: function(id, fileItem) {\n            fileState[id] = fileItem;\n            fileState[id].temp = {};\n        },\n\n        cancel: function(id) {\n            var self = this,\n                cancelFinalizationEffort = new qq.Promise(),\n                onCancelRetVal = onCancel(id, getName(id), cancelFinalizationEffort);\n\n            onCancelRetVal.then(function() {\n                if (self.isValid(id)) {\n                    fileState[id].canceled = true;\n                    self.expunge(id);\n                }\n                cancelFinalizationEffort.success();\n            });\n        },\n\n        expunge: function(id) {\n            delete fileState[id];\n        },\n\n        getThirdPartyFileId: function(id) {\n            return fileState[id].key;\n        },\n\n        isValid: function(id) {\n            return fileState[id] !== undefined;\n        },\n\n        reset: function() {\n            fileState = {};\n        },\n\n        _getFileState: function(id) {\n            return fileState[id];\n        },\n\n        _setThirdPartyFileId: function(id, thirdPartyFileId) {\n            fileState[id].key = thirdPartyFileId;\n        },\n\n        _wasCanceled: function(id) {\n            return !!fileState[id].canceled;\n        }\n    });\n};\n",
    "/*globals qq*/\n/**\n * Base upload handler module.  Controls more specific handlers.\n *\n * @param o Options.  Passed along to the specific handler submodule as well.\n * @param namespace [optional] Namespace for the specific handler.\n */\nqq.UploadHandlerController = function(o, namespace) {\n    \"use strict\";\n\n    var controller = this,\n        chunkingPossible = false,\n        concurrentChunkingPossible = false,\n        chunking, preventRetryResponse, log, handler,\n\n    options = {\n        paramsStore: {},\n        maxConnections: 3, // maximum number of concurrent uploads\n        chunking: {\n            enabled: false,\n            multiple: {\n                enabled: false\n            }\n        },\n        log: function(str, level) {},\n        onProgress: function(id, fileName, loaded, total) {},\n        onComplete: function(id, fileName, response, xhr) {},\n        onCancel: function(id, fileName) {},\n        onUploadPrep: function(id) {}, // Called if non-trivial operations will be performed before onUpload\n        onUpload: function(id, fileName) {},\n        onUploadChunk: function(id, fileName, chunkData) {},\n        onUploadChunkSuccess: function(id, chunkData, response, xhr) {},\n        onAutoRetry: function(id, fileName, response, xhr) {},\n        onResume: function(id, fileName, chunkData) {},\n        onUuidChanged: function(id, newUuid) {},\n        getName: function(id) {},\n        setSize: function(id, newSize) {},\n        isQueued: function(id) {},\n        getIdsInProxyGroup: function(id) {},\n        getIdsInBatch: function(id) {}\n    },\n\n    chunked = {\n        // Called when each chunk has uploaded successfully\n        done: function(id, chunkIdx, response, xhr) {\n            var chunkData = handler._getChunkData(id, chunkIdx);\n\n            handler._getFileState(id).attemptingResume = false;\n\n            delete handler._getFileState(id).temp.chunkProgress[chunkIdx];\n            handler._getFileState(id).loaded += chunkData.size;\n\n            options.onUploadChunkSuccess(id, handler._getChunkDataForCallback(chunkData), response, xhr);\n        },\n\n        // Called when all chunks have been successfully uploaded and we want to ask the handler to perform any\n        // logic associated with closing out the file, such as combining the chunks.\n        finalize: function(id) {\n            var size = options.getSize(id),\n                name = options.getName(id);\n\n            log(\"All chunks have been uploaded for \" + id + \" - finalizing....\");\n            handler.finalizeChunks(id).then(\n                function(response, xhr) {\n                    log(\"Finalize successful for \" + id);\n\n                    var normaizedResponse = upload.normalizeResponse(response, true);\n\n                    options.onProgress(id, name, size, size);\n                    handler._maybeDeletePersistedChunkData(id);\n                    upload.cleanup(id, normaizedResponse, xhr);\n                },\n                function(response, xhr) {\n                    var normaizedResponse = upload.normalizeResponse(response, false);\n\n                    log(\"Problem finalizing chunks for file ID \" + id + \" - \" + normaizedResponse.error, \"error\");\n\n                    if (normaizedResponse.reset) {\n                        chunked.reset(id);\n                    }\n\n                    if (!options.onAutoRetry(id, name, normaizedResponse, xhr)) {\n                        upload.cleanup(id, normaizedResponse, xhr);\n                    }\n                }\n            );\n        },\n\n        handleFailure: function(chunkIdx, id, response, xhr) {\n            var name = options.getName(id);\n\n            log(\"Chunked upload request failed for \" + id + \", chunk \" + chunkIdx);\n\n            handler.clearCachedChunk(id, chunkIdx);\n\n            var responseToReport = upload.normalizeResponse(response, false),\n                inProgressIdx;\n\n            if (responseToReport.reset) {\n                chunked.reset(id);\n            }\n            else {\n                inProgressIdx = qq.indexOf(handler._getFileState(id).chunking.inProgress, chunkIdx);\n                if (inProgressIdx >= 0) {\n                    handler._getFileState(id).chunking.inProgress.splice(inProgressIdx, 1);\n                    handler._getFileState(id).chunking.remaining.unshift(chunkIdx);\n                }\n            }\n\n            // We may have aborted all other in-progress chunks for this file due to a failure.\n            // If so, ignore the failures associated with those aborts.\n            if (!handler._getFileState(id).temp.ignoreFailure) {\n                // If this chunk has failed, we want to ignore all other failures of currently in-progress\n                // chunks since they will be explicitly aborted\n                if (concurrentChunkingPossible) {\n                    handler._getFileState(id).temp.ignoreFailure = true;\n\n                    log(qq.format(\"Going to attempt to abort these chunks: {}. These are currently in-progress: {}.\", JSON.stringify(Object.keys(handler._getXhrs(id))), JSON.stringify(handler._getFileState(id).chunking.inProgress)));\n                    qq.each(handler._getXhrs(id), function(ckid, ckXhr) {\n                        log(qq.format(\"Attempting to abort file {}.{}. XHR readyState {}. \", id, ckid, ckXhr.readyState));\n                        ckXhr.abort();\n                        // Flag the transport, in case we are waiting for some other async operation\n                        // to complete before attempting to upload the chunk\n                        ckXhr._cancelled = true;\n                    });\n\n                    // We must indicate that all aborted chunks are no longer in progress\n                    handler.moveInProgressToRemaining(id);\n\n                    // Free up any connections used by these chunks, but don't allow any\n                    // other files to take up the connections (until we have exhausted all auto-retries)\n                    connectionManager.free(id, true);\n                }\n\n                if (!options.onAutoRetry(id, name, responseToReport, xhr)) {\n                    // If one chunk fails, abort all of the others to avoid odd race conditions that occur\n                    // if a chunk succeeds immediately after one fails before we have determined if the upload\n                    // is a failure or not.\n                    upload.cleanup(id, responseToReport, xhr);\n                }\n            }\n        },\n\n        hasMoreParts: function(id) {\n            return !!handler._getFileState(id).chunking.remaining.length;\n        },\n\n        nextPart: function(id) {\n            var nextIdx = handler._getFileState(id).chunking.remaining.shift();\n\n            if (nextIdx >= handler._getTotalChunks(id)) {\n                nextIdx = null;\n            }\n\n            return nextIdx;\n        },\n\n        reset: function(id) {\n            log(\"Server or callback has ordered chunking effort to be restarted on next attempt for item ID \" + id, \"error\");\n\n            handler._maybeDeletePersistedChunkData(id);\n            handler.reevaluateChunking(id);\n            handler._getFileState(id).loaded = 0;\n        },\n\n        sendNext: function(id) {\n            var size = options.getSize(id),\n                name = options.getName(id),\n                chunkIdx = chunked.nextPart(id),\n                chunkData = handler._getChunkData(id, chunkIdx),\n                resuming = handler._getFileState(id).attemptingResume,\n                inProgressChunks = handler._getFileState(id).chunking.inProgress || [];\n\n            if (handler._getFileState(id).loaded == null) {\n                handler._getFileState(id).loaded = 0;\n            }\n\n            // Don't follow-through with the resume attempt if the integrator returns false from onResume\n            if (resuming && options.onResume(id, name, chunkData) === false) {\n                chunked.reset(id);\n                chunkIdx = chunked.nextPart(id);\n                chunkData = handler._getChunkData(id, chunkIdx);\n                resuming = false;\n            }\n\n            // If all chunks have already uploaded successfully, we must be re-attempting the finalize step.\n            if (chunkIdx == null && inProgressChunks.length === 0) {\n                chunked.finalize(id);\n            }\n\n            // Send the next chunk\n            else {\n                log(qq.format(\"Sending chunked upload request for item {}.{}, bytes {}-{} of {}.\", id, chunkIdx, chunkData.start + 1, chunkData.end, size));\n                options.onUploadChunk(id, name, handler._getChunkDataForCallback(chunkData));\n                inProgressChunks.push(chunkIdx);\n                handler._getFileState(id).chunking.inProgress = inProgressChunks;\n\n                if (concurrentChunkingPossible) {\n                    connectionManager.open(id, chunkIdx);\n                }\n\n                if (concurrentChunkingPossible && connectionManager.available() && handler._getFileState(id).chunking.remaining.length) {\n                    chunked.sendNext(id);\n                }\n\n                if (chunkData.blob.size === 0) {\n                    log(qq.format(\"Chunk {} for file {} will not be uploaded, zero sized chunk.\", chunkIdx, id), \"error\");\n                    chunked.handleFailure(chunkIdx, id, \"File is no longer available\", null);\n                }\n                else {\n                    handler.uploadChunk(id, chunkIdx, resuming).then(\n                        // upload chunk success\n                        function success(response, xhr) {\n                            log(\"Chunked upload request succeeded for \" + id + \", chunk \" + chunkIdx);\n\n                            handler.clearCachedChunk(id, chunkIdx);\n\n                            var inProgressChunks = handler._getFileState(id).chunking.inProgress || [],\n                                responseToReport = upload.normalizeResponse(response, true),\n                                inProgressChunkIdx = qq.indexOf(inProgressChunks, chunkIdx);\n\n                            log(qq.format(\"Chunk {} for file {} uploaded successfully.\", chunkIdx, id));\n\n                            chunked.done(id, chunkIdx, responseToReport, xhr);\n\n                            if (inProgressChunkIdx >= 0) {\n                                inProgressChunks.splice(inProgressChunkIdx, 1);\n                            }\n\n                            handler._maybePersistChunkedState(id);\n\n                            if (!chunked.hasMoreParts(id) && inProgressChunks.length === 0) {\n                                chunked.finalize(id);\n                            }\n                            else if (chunked.hasMoreParts(id)) {\n                                chunked.sendNext(id);\n                            }\n                            else {\n                                log(qq.format(\"File ID {} has no more chunks to send and these chunk indexes are still marked as in-progress: {}\", id, JSON.stringify(inProgressChunks)));\n                            }\n                        },\n\n                        // upload chunk failure\n                        function failure(response, xhr) {\n                            chunked.handleFailure(chunkIdx, id, response, xhr);\n                        }\n                        )\n                        .done(function() {\n                            handler.clearXhr(id, chunkIdx);\n                        });\n                }\n            }\n        }\n    },\n\n    connectionManager = {\n        _open: [],\n        _openChunks: {},\n        _waiting: [],\n\n        available: function() {\n            var max = options.maxConnections,\n                openChunkEntriesCount = 0,\n                openChunksCount = 0;\n\n            qq.each(connectionManager._openChunks, function(fileId, openChunkIndexes) {\n                openChunkEntriesCount++;\n                openChunksCount += openChunkIndexes.length;\n            });\n\n            return max - (connectionManager._open.length - openChunkEntriesCount + openChunksCount);\n        },\n\n        /**\n         * Removes element from queue, starts upload of next\n         */\n        free: function(id, dontAllowNext) {\n            var allowNext = !dontAllowNext,\n                waitingIndex = qq.indexOf(connectionManager._waiting, id),\n                connectionsIndex = qq.indexOf(connectionManager._open, id),\n                nextId;\n\n            delete connectionManager._openChunks[id];\n\n            if (upload.getProxyOrBlob(id) instanceof qq.BlobProxy) {\n                log(\"Generated blob upload has ended for \" + id + \", disposing generated blob.\");\n                delete handler._getFileState(id).file;\n            }\n\n            // If this file was not consuming a connection, it was just waiting, so remove it from the waiting array\n            if (waitingIndex >= 0) {\n                connectionManager._waiting.splice(waitingIndex, 1);\n            }\n            // If this file was consuming a connection, allow the next file to be uploaded\n            else if (allowNext && connectionsIndex >= 0) {\n                connectionManager._open.splice(connectionsIndex, 1);\n\n                nextId = connectionManager._waiting.shift();\n                if (nextId >= 0) {\n                    connectionManager._open.push(nextId);\n                    upload.start(nextId);\n                }\n            }\n        },\n\n        getWaitingOrConnected: function() {\n            var waitingOrConnected = [];\n\n            // Chunked files may have multiple connections open per chunk (if concurrent chunking is enabled)\n            // We need to grab the file ID of any file that has at least one chunk consuming a connection.\n            qq.each(connectionManager._openChunks, function(fileId, chunks) {\n                if (chunks && chunks.length) {\n                    waitingOrConnected.push(parseInt(fileId));\n                }\n            });\n\n            // For non-chunked files, only one connection will be consumed per file.\n            // This is where we aggregate those file IDs.\n            qq.each(connectionManager._open, function(idx, fileId) {\n                if (!connectionManager._openChunks[fileId]) {\n                    waitingOrConnected.push(parseInt(fileId));\n                }\n            });\n\n            // There may be files waiting for a connection.\n            waitingOrConnected = waitingOrConnected.concat(connectionManager._waiting);\n\n            return waitingOrConnected;\n        },\n\n        isUsingConnection: function(id) {\n            return qq.indexOf(connectionManager._open, id) >= 0;\n        },\n\n        open: function(id, chunkIdx) {\n            if (chunkIdx == null) {\n                connectionManager._waiting.push(id);\n            }\n\n            if (connectionManager.available()) {\n                if (chunkIdx == null) {\n                    connectionManager._waiting.pop();\n                    connectionManager._open.push(id);\n                }\n                else {\n                    (function() {\n                        var openChunksEntry = connectionManager._openChunks[id] || [];\n                        openChunksEntry.push(chunkIdx);\n                        connectionManager._openChunks[id] = openChunksEntry;\n                    }());\n                }\n\n                return true;\n            }\n\n            return false;\n        },\n\n        reset: function() {\n            connectionManager._waiting = [];\n            connectionManager._open = [];\n        }\n    },\n\n    simple = {\n        send: function(id, name) {\n            handler._getFileState(id).loaded = 0;\n\n            log(\"Sending simple upload request for \" + id);\n            handler.uploadFile(id).then(\n                function(response, optXhr) {\n                    log(\"Simple upload request succeeded for \" + id);\n\n                    var responseToReport = upload.normalizeResponse(response, true),\n                        size = options.getSize(id);\n\n                    options.onProgress(id, name, size, size);\n                    upload.maybeNewUuid(id, responseToReport);\n                    upload.cleanup(id, responseToReport, optXhr);\n                },\n\n                function(response, optXhr) {\n                    log(\"Simple upload request failed for \" + id);\n\n                    var responseToReport = upload.normalizeResponse(response, false);\n\n                    if (!options.onAutoRetry(id, name, responseToReport, optXhr)) {\n                        upload.cleanup(id, responseToReport, optXhr);\n                    }\n                }\n            );\n        }\n    },\n\n    upload = {\n        cancel: function(id) {\n            log(\"Cancelling \" + id);\n            options.paramsStore.remove(id);\n            connectionManager.free(id);\n        },\n\n        cleanup: function(id, response, optXhr) {\n            var name = options.getName(id);\n\n            options.onComplete(id, name, response, optXhr);\n\n            if (handler._getFileState(id)) {\n                handler._clearXhrs && handler._clearXhrs(id);\n            }\n\n            connectionManager.free(id);\n        },\n\n        // Returns a qq.BlobProxy, or an actual File/Blob if no proxy is involved, or undefined\n        // if none of these are available for the ID\n        getProxyOrBlob: function(id) {\n            return (handler.getProxy && handler.getProxy(id)) ||\n                (handler.getFile && handler.getFile(id));\n        },\n\n        initHandler: function() {\n            var handlerType = namespace ? qq[namespace] : qq.traditional,\n                handlerModuleSubtype = qq.supportedFeatures.ajaxUploading ? \"Xhr\" : \"Form\";\n\n            handler = new handlerType[handlerModuleSubtype + \"UploadHandler\"](\n                options,\n                {\n                    getDataByUuid: options.getDataByUuid,\n                    getName: options.getName,\n                    getSize: options.getSize,\n                    getUuid: options.getUuid,\n                    log: log,\n                    onCancel: options.onCancel,\n                    onProgress: options.onProgress,\n                    onUuidChanged: options.onUuidChanged\n                }\n            );\n\n            if (handler._removeExpiredChunkingRecords) {\n                handler._removeExpiredChunkingRecords();\n            }\n        },\n\n        isDeferredEligibleForUpload: function(id) {\n            return options.isQueued(id);\n        },\n\n        // For Blobs that are part of a group of generated images, along with a reference image,\n        // this will ensure the blobs in the group are uploaded in the order they were triggered,\n        // even if some async processing must be completed on one or more Blobs first.\n        maybeDefer: function(id, blob) {\n            // If we don't have a file/blob yet & no file/blob exists for this item, request it,\n            // and then submit the upload to the specific handler once the blob is available.\n            // ASSUMPTION: This condition will only ever be true if XHR uploading is supported.\n            if (blob && !handler.getFile(id) && blob instanceof qq.BlobProxy) {\n\n                // Blob creation may take some time, so the caller may want to update the\n                // UI to indicate that an operation is in progress, even before the actual\n                // upload begins and an onUpload callback is invoked.\n                options.onUploadPrep(id);\n\n                log(\"Attempting to generate a blob on-demand for \" + id);\n                blob.create().then(function(generatedBlob) {\n                    log(\"Generated an on-demand blob for \" + id);\n\n                    // Update record associated with this file by providing the generated Blob\n                    handler.updateBlob(id, generatedBlob);\n\n                    // Propagate the size for this generated Blob\n                    options.setSize(id, generatedBlob.size);\n\n                    // Order handler to recalculate chunking possibility, if applicable\n                    handler.reevaluateChunking(id);\n\n                    upload.maybeSendDeferredFiles(id);\n                },\n\n                // Blob could not be generated.  Fail the upload & attempt to prevent retries.  Also bubble error message.\n                function(errorMessage) {\n                    var errorResponse = {};\n\n                    if (errorMessage) {\n                        errorResponse.error = errorMessage;\n                    }\n\n                    log(qq.format(\"Failed to generate blob for ID {}.  Error message: {}.\", id, errorMessage), \"error\");\n\n                    options.onComplete(id, options.getName(id), qq.extend(errorResponse, preventRetryResponse), null);\n                    upload.maybeSendDeferredFiles(id);\n                    connectionManager.free(id);\n                });\n            }\n            else {\n                return upload.maybeSendDeferredFiles(id);\n            }\n\n            return false;\n        },\n\n        // Upload any grouped blobs, in the proper order, that are ready to be uploaded\n        maybeSendDeferredFiles: function(id) {\n            var idsInGroup = options.getIdsInProxyGroup(id),\n                uploadedThisId = false;\n\n            if (idsInGroup && idsInGroup.length) {\n                log(\"Maybe ready to upload proxy group file \" + id);\n\n                qq.each(idsInGroup, function(idx, idInGroup) {\n                    if (upload.isDeferredEligibleForUpload(idInGroup) && !!handler.getFile(idInGroup)) {\n                        uploadedThisId = idInGroup === id;\n                        upload.now(idInGroup);\n                    }\n                    else if (upload.isDeferredEligibleForUpload(idInGroup)) {\n                        return false;\n                    }\n                });\n            }\n            else {\n                uploadedThisId = true;\n                upload.now(id);\n            }\n\n            return uploadedThisId;\n        },\n\n        maybeNewUuid: function(id, response) {\n            if (response.newUuid !== undefined) {\n                options.onUuidChanged(id, response.newUuid);\n            }\n        },\n\n        // The response coming from handler implementations may be in various formats.\n        // Instead of hoping a promise nested 5 levels deep will always return an object\n        // as its first param, let's just normalize the response here.\n        normalizeResponse: function(originalResponse, successful) {\n            var response = originalResponse;\n\n            // The passed \"response\" param may not be a response at all.\n            // It could be a string, detailing the error, for example.\n            if (!qq.isObject(originalResponse)) {\n                response = {};\n\n                if (qq.isString(originalResponse) && !successful) {\n                    response.error = originalResponse;\n                }\n            }\n\n            response.success = successful;\n\n            return response;\n        },\n\n        now: function(id) {\n            var name = options.getName(id);\n\n            if (!controller.isValid(id)) {\n                throw new qq.Error(id + \" is not a valid file ID to upload!\");\n            }\n\n            options.onUpload(id, name);\n\n            if (chunkingPossible && handler._shouldChunkThisFile(id)) {\n                chunked.sendNext(id);\n            }\n            else {\n                simple.send(id, name);\n            }\n        },\n\n        start: function(id) {\n            var blobToUpload = upload.getProxyOrBlob(id);\n\n            if (blobToUpload) {\n                return upload.maybeDefer(id, blobToUpload);\n            }\n            else {\n                upload.now(id);\n                return true;\n            }\n        }\n    };\n\n    qq.extend(this, {\n        /**\n         * Adds file or file input to the queue\n         **/\n        add: function(id, file) {\n            handler.add.apply(this, arguments);\n        },\n\n        /**\n         * Sends the file identified by id\n         */\n        upload: function(id) {\n            if (connectionManager.open(id)) {\n                return upload.start(id);\n            }\n            return false;\n        },\n\n        retry: function(id) {\n            // On retry, if concurrent chunking has been enabled, we may have aborted all other in-progress chunks\n            // for a file when encountering a failed chunk upload.  We then signaled the controller to ignore\n            // all failures associated with these aborts.  We are now retrying, so we don't want to ignore\n            // any more failures at this point.\n            if (concurrentChunkingPossible) {\n                handler._getFileState(id).temp.ignoreFailure = false;\n            }\n\n            // If we are attempting to retry a file that is already consuming a connection, this is likely an auto-retry.\n            // Just go ahead and ask the handler to upload again.\n            if (connectionManager.isUsingConnection(id)) {\n                return upload.start(id);\n            }\n\n            // If we are attempting to retry a file that is not currently consuming a connection,\n            // this is likely a manual retry attempt.  We will need to ensure a connection is available\n            // before the retry commences.\n            else {\n                return controller.upload(id);\n            }\n        },\n\n        /**\n         * Cancels file upload by id\n         */\n        cancel: function(id) {\n            var cancelRetVal = handler.cancel(id);\n\n            if (qq.isGenericPromise(cancelRetVal)) {\n                cancelRetVal.then(function() {\n                    upload.cancel(id);\n                });\n            }\n            else if (cancelRetVal !== false) {\n                upload.cancel(id);\n            }\n        },\n\n        /**\n         * Cancels all queued or in-progress uploads\n         */\n        cancelAll: function() {\n            var waitingOrConnected = connectionManager.getWaitingOrConnected(),\n                i;\n\n            // ensure files are cancelled in reverse order which they were added\n            // to avoid a flash of time where a queued file begins to upload before it is canceled\n            if (waitingOrConnected.length) {\n                for (i = waitingOrConnected.length - 1; i >= 0; i--) {\n                    controller.cancel(waitingOrConnected[i]);\n                }\n            }\n\n            connectionManager.reset();\n        },\n\n        // Returns a File, Blob, or the Blob/File for the reference/parent file if the targeted blob is a proxy.\n        // Undefined if no file record is available.\n        getFile: function(id) {\n            if (handler.getProxy && handler.getProxy(id)) {\n                return handler.getProxy(id).referenceBlob;\n            }\n\n            return handler.getFile && handler.getFile(id);\n        },\n\n        // Returns true if the Blob associated with the ID is related to a proxy s\n        isProxied: function(id) {\n            return !!(handler.getProxy && handler.getProxy(id));\n        },\n\n        getInput: function(id) {\n            if (handler.getInput) {\n                return handler.getInput(id);\n            }\n        },\n\n        reset: function() {\n            log(\"Resetting upload handler\");\n            controller.cancelAll();\n            connectionManager.reset();\n            handler.reset();\n        },\n\n        expunge: function(id) {\n            if (controller.isValid(id)) {\n                return handler.expunge(id);\n            }\n        },\n\n        /**\n         * Determine if the file exists.\n         */\n        isValid: function(id) {\n            return handler.isValid(id);\n        },\n\n        getResumableFilesData: function() {\n            if (handler.getResumableFilesData) {\n                return handler.getResumableFilesData();\n            }\n            return [];\n        },\n\n        /**\n         * This may or may not be implemented, depending on the handler.  For handlers where a third-party ID is\n         * available (such as the \"key\" for Amazon S3), this will return that value.  Otherwise, the return value\n         * will be undefined.\n         *\n         * @param id Internal file ID\n         * @returns {*} Some identifier used by a 3rd-party service involved in the upload process\n         */\n        getThirdPartyFileId: function(id) {\n            if (controller.isValid(id)) {\n                return handler.getThirdPartyFileId(id);\n            }\n        },\n\n        /**\n         * Attempts to pause the associated upload if the specific handler supports this and the file is \"valid\".\n         * @param id ID of the upload/file to pause\n         * @returns {boolean} true if the upload was paused\n         */\n        pause: function(id) {\n            if (controller.isResumable(id) && handler.pause && controller.isValid(id) && handler.pause(id)) {\n                connectionManager.free(id);\n                handler.moveInProgressToRemaining(id);\n                return true;\n            }\n            return false;\n        },\n\n        // True if the file is eligible for pause/resume.\n        isResumable: function(id) {\n            return !!handler.isResumable && handler.isResumable(id);\n        }\n    });\n\n    qq.extend(options, o);\n    log = options.log;\n    chunkingPossible = options.chunking.enabled && qq.supportedFeatures.chunking;\n    concurrentChunkingPossible = chunkingPossible && options.chunking.concurrent.enabled;\n\n    preventRetryResponse = (function() {\n        var response = {};\n\n        response[options.preventRetryParam] = true;\n\n        return response;\n    }());\n\n    upload.initHandler();\n};\n",
    "/*globals qq */\n/*jshint -W117 */\nqq.WindowReceiveMessage = function(o) {\n    \"use strict\";\n\n    var options = {\n            log: function(message, level) {}\n        },\n        callbackWrapperDetachers = {};\n\n    qq.extend(options, o);\n\n    qq.extend(this, {\n        receiveMessage: function(id, callback) {\n            var onMessageCallbackWrapper = function(event) {\n                    callback(event.data);\n                };\n\n            if (window.postMessage) {\n                callbackWrapperDetachers[id] = qq(window).attach(\"message\", onMessageCallbackWrapper);\n            }\n            else {\n                log(\"iframe message passing not supported in this browser!\", \"error\");\n            }\n        },\n\n        stopReceivingMessages: function(id) {\n            if (window.postMessage) {\n                var detacher = callbackWrapperDetachers[id];\n                if (detacher) {\n                    detacher();\n                }\n            }\n        }\n    });\n};\n",
    "/* globals qq */\n/**\n * Common APIs exposed to creators of upload via form/iframe handlers.  This is reused and possibly overridden\n * in some cases by specific form upload handlers.\n *\n * @constructor\n */\nqq.FormUploadHandler = function(spec) {\n    \"use strict\";\n\n    var options = spec.options,\n        handler = this,\n        proxy = spec.proxy,\n        formHandlerInstanceId = qq.getUniqueId(),\n        onloadCallbacks = {},\n        detachLoadEvents = {},\n        postMessageCallbackTimers = {},\n        isCors = options.isCors,\n        inputName = options.inputName,\n        getUuid = proxy.getUuid,\n        log = proxy.log,\n        corsMessageReceiver = new qq.WindowReceiveMessage({log: log});\n\n    /**\n     * Remove any trace of the file from the handler.\n     *\n     * @param id ID of the associated file\n     */\n    function expungeFile(id) {\n        delete detachLoadEvents[id];\n\n        // If we are dealing with CORS, we might still be waiting for a response from a loaded iframe.\n        // In that case, terminate the timer waiting for a message from the loaded iframe\n        // and stop listening for any more messages coming from this iframe.\n        if (isCors) {\n            clearTimeout(postMessageCallbackTimers[id]);\n            delete postMessageCallbackTimers[id];\n            corsMessageReceiver.stopReceivingMessages(id);\n        }\n\n        var iframe = document.getElementById(handler._getIframeName(id));\n        if (iframe) {\n            // To cancel request set src to something else.  We use src=\"javascript:false;\"\n            // because it doesn't trigger ie6 prompt on https\n            /* jshint scripturl:true */\n            iframe.setAttribute(\"src\", \"javascript:false;\");\n\n            qq(iframe).remove();\n        }\n    }\n\n    /**\n     * @param iframeName `document`-unique Name of the associated iframe\n     * @returns {*} ID of the associated file\n     */\n    function getFileIdForIframeName(iframeName) {\n        return iframeName.split(\"_\")[0];\n    }\n\n    /**\n     * Generates an iframe to be used as a target for upload-related form submits.  This also adds the iframe\n     * to the current `document`.  Note that the iframe is hidden from view.\n     *\n     * @param name Name of the iframe.\n     * @returns {HTMLIFrameElement} The created iframe\n     */\n    function initIframeForUpload(name) {\n        var iframe = qq.toElement(\"<iframe src='javascript:false;' name='\" + name + \"' />\");\n\n        iframe.setAttribute(\"id\", name);\n\n        iframe.style.display = \"none\";\n        document.body.appendChild(iframe);\n\n        return iframe;\n    }\n\n    /**\n     * If we are in CORS mode, we must listen for messages (containing the server response) from the associated\n     * iframe, since we cannot directly parse the content of the iframe due to cross-origin restrictions.\n     *\n     * @param iframe Listen for messages on this iframe.\n     * @param callback Invoke this callback with the message from the iframe.\n     */\n    function registerPostMessageCallback(iframe, callback) {\n        var iframeName = iframe.id,\n            fileId = getFileIdForIframeName(iframeName),\n            uuid = getUuid(fileId);\n\n        onloadCallbacks[uuid] = callback;\n\n        // When the iframe has loaded (after the server responds to an upload request)\n        // declare the attempt a failure if we don't receive a valid message shortly after the response comes in.\n        detachLoadEvents[fileId] = qq(iframe).attach(\"load\", function() {\n            if (handler.getInput(fileId)) {\n                log(\"Received iframe load event for CORS upload request (iframe name \" + iframeName + \")\");\n\n                postMessageCallbackTimers[iframeName] = setTimeout(function() {\n                    var errorMessage = \"No valid message received from loaded iframe for iframe name \" + iframeName;\n                    log(errorMessage, \"error\");\n                    callback({\n                        error: errorMessage\n                    });\n                }, 1000);\n            }\n        });\n\n        // Listen for messages coming from this iframe.  When a message has been received, cancel the timer\n        // that declares the upload a failure if a message is not received within a reasonable amount of time.\n        corsMessageReceiver.receiveMessage(iframeName, function(message) {\n            log(\"Received the following window message: '\" + message + \"'\");\n            var fileId = getFileIdForIframeName(iframeName),\n                response = handler._parseJsonResponse(message),\n                uuid = response.uuid,\n                onloadCallback;\n\n            if (uuid && onloadCallbacks[uuid]) {\n                log(\"Handling response for iframe name \" + iframeName);\n                clearTimeout(postMessageCallbackTimers[iframeName]);\n                delete postMessageCallbackTimers[iframeName];\n\n                handler._detachLoadEvent(iframeName);\n\n                onloadCallback = onloadCallbacks[uuid];\n\n                delete onloadCallbacks[uuid];\n                corsMessageReceiver.stopReceivingMessages(iframeName);\n                onloadCallback(response);\n            }\n            else if (!uuid) {\n                log(\"'\" + message + \"' does not contain a UUID - ignoring.\");\n            }\n        });\n    }\n\n    qq.extend(this, new qq.UploadHandler(spec));\n\n    qq.override(this, function(super_) {\n        return {\n            /**\n             * Adds File or Blob to the queue\n             **/\n            add: function(id, fileInput) {\n                super_.add(id, {input: fileInput});\n\n                fileInput.setAttribute(\"name\", inputName);\n\n                // remove file input from DOM\n                if (fileInput.parentNode) {\n                    qq(fileInput).remove();\n                }\n            },\n\n            expunge: function(id) {\n                expungeFile(id);\n                super_.expunge(id);\n            },\n\n            isValid: function(id) {\n                return super_.isValid(id) &&\n                    handler._getFileState(id).input !== undefined;\n            }\n        };\n    });\n\n    qq.extend(this, {\n        getInput: function(id) {\n            return handler._getFileState(id).input;\n        },\n\n        /**\n         * This function either delegates to a more specific message handler if CORS is involved,\n         * or simply registers a callback when the iframe has been loaded that invokes the passed callback\n         * after determining if the content of the iframe is accessible.\n         *\n         * @param iframe Associated iframe\n         * @param callback Callback to invoke after we have determined if the iframe content is accessible.\n         */\n        _attachLoadEvent: function(iframe, callback) {\n            /*jslint eqeq: true*/\n            var responseDescriptor;\n\n            if (isCors) {\n                registerPostMessageCallback(iframe, callback);\n            }\n            else {\n                detachLoadEvents[iframe.id] = qq(iframe).attach(\"load\", function() {\n                    log(\"Received response for \" + iframe.id);\n\n                    // when we remove iframe from dom\n                    // the request stops, but in IE load\n                    // event fires\n                    if (!iframe.parentNode) {\n                        return;\n                    }\n\n                    try {\n                        // fixing Opera 10.53\n                        if (iframe.contentDocument &&\n                            iframe.contentDocument.body &&\n                            iframe.contentDocument.body.innerHTML == \"false\") {\n                            // In Opera event is fired second time\n                            // when body.innerHTML changed from false\n                            // to server response approx. after 1 sec\n                            // when we upload file with iframe\n                            return;\n                        }\n                    }\n                    catch (error) {\n                        //IE may throw an \"access is denied\" error when attempting to access contentDocument on the iframe in some cases\n                        log(\"Error when attempting to access iframe during handling of upload response (\" + error.message + \")\", \"error\");\n                        responseDescriptor = {success: false};\n                    }\n\n                    callback(responseDescriptor);\n                });\n            }\n        },\n\n        /**\n         * Creates an iframe with a specific document-unique name.\n         *\n         * @param id ID of the associated file\n         * @returns {HTMLIFrameElement}\n         */\n        _createIframe: function(id) {\n            var iframeName = handler._getIframeName(id);\n\n            return initIframeForUpload(iframeName);\n        },\n\n        /**\n         * Called when we are no longer interested in being notified when an iframe has loaded.\n         *\n         * @param id Associated file ID\n         */\n        _detachLoadEvent: function(id) {\n            if (detachLoadEvents[id] !== undefined) {\n                detachLoadEvents[id]();\n                delete detachLoadEvents[id];\n            }\n        },\n\n        /**\n         * @param fileId ID of the associated file\n         * @returns {string} The `document`-unique name of the iframe\n         */\n        _getIframeName: function(fileId) {\n            return fileId + \"_\" + formHandlerInstanceId;\n        },\n\n        /**\n         * Generates a form element and appends it to the `document`.  When the form is submitted, a specific iframe is targeted.\n         * The name of the iframe is passed in as a property of the spec parameter, and must be unique in the `document`.  Note\n         * that the form is hidden from view.\n         *\n         * @param spec An object containing various properties to be used when constructing the form.  Required properties are\n         * currently: `method`, `endpoint`, `params`, `paramsInBody`, and `targetName`.\n         * @returns {HTMLFormElement} The created form\n         */\n        _initFormForUpload: function(spec) {\n            var method = spec.method,\n                endpoint = spec.endpoint,\n                params = spec.params,\n                paramsInBody = spec.paramsInBody,\n                targetName = spec.targetName,\n                form = qq.toElement(\"<form method='\" + method + \"' enctype='multipart/form-data'></form>\"),\n                url = endpoint;\n\n            if (paramsInBody) {\n                qq.obj2Inputs(params, form);\n            }\n            else {\n                url = qq.obj2url(params, endpoint);\n            }\n\n            form.setAttribute(\"action\", url);\n            form.setAttribute(\"target\", targetName);\n            form.style.display = \"none\";\n            document.body.appendChild(form);\n\n            return form;\n        },\n\n        /**\n         * @param innerHtmlOrMessage JSON message\n         * @returns {*} The parsed response, or an empty object if the response could not be parsed\n         */\n        _parseJsonResponse: function(innerHtmlOrMessage) {\n            var response = {};\n\n            try {\n                response = qq.parseJson(innerHtmlOrMessage);\n            }\n            catch (error) {\n                log(\"Error when attempting to parse iframe upload response (\" + error.message + \")\", \"error\");\n            }\n\n            return response;\n        }\n    });\n};\n",
    "/* globals qq */\n/**\n * Common API exposed to creators of XHR handlers.  This is reused and possibly overriding in some cases by specific\n * XHR upload handlers.\n *\n * @constructor\n */\nqq.XhrUploadHandler = function(spec) {\n    \"use strict\";\n\n    var handler = this,\n        namespace = spec.options.namespace,\n        proxy = spec.proxy,\n        chunking = spec.options.chunking,\n        resume = spec.options.resume,\n        chunkFiles = chunking && spec.options.chunking.enabled && qq.supportedFeatures.chunking,\n        resumeEnabled = resume && spec.options.resume.enabled && chunkFiles && qq.supportedFeatures.resume,\n        getName = proxy.getName,\n        getSize = proxy.getSize,\n        getUuid = proxy.getUuid,\n        getEndpoint = proxy.getEndpoint,\n        getDataByUuid = proxy.getDataByUuid,\n        onUuidChanged = proxy.onUuidChanged,\n        onProgress = proxy.onProgress,\n        log = proxy.log;\n\n    function abort(id) {\n        qq.each(handler._getXhrs(id), function(xhrId, xhr) {\n            var ajaxRequester = handler._getAjaxRequester(id, xhrId);\n\n            xhr.onreadystatechange = null;\n            xhr.upload.onprogress = null;\n            xhr.abort();\n            ajaxRequester && ajaxRequester.canceled && ajaxRequester.canceled(id);\n        });\n    }\n\n    qq.extend(this, new qq.UploadHandler(spec));\n\n    qq.override(this, function(super_) {\n        return {\n            /**\n             * Adds File or Blob to the queue\n             **/\n            add: function(id, blobOrProxy) {\n                if (qq.isFile(blobOrProxy) || qq.isBlob(blobOrProxy)) {\n                    super_.add(id, {file: blobOrProxy});\n                }\n                else if (blobOrProxy instanceof qq.BlobProxy) {\n                    super_.add(id, {proxy: blobOrProxy});\n                }\n                else {\n                    throw new Error(\"Passed obj is not a File, Blob, or proxy\");\n                }\n\n                handler._initTempState(id);\n                resumeEnabled && handler._maybePrepareForResume(id);\n            },\n\n            expunge: function(id) {\n                abort(id);\n                handler._maybeDeletePersistedChunkData(id);\n                handler._clearXhrs(id);\n                super_.expunge(id);\n            }\n        };\n    });\n\n    qq.extend(this, {\n        // Clear the cached chunk `Blob` after we are done with it, just in case the `Blob` bytes are stored in memory.\n        clearCachedChunk: function(id, chunkIdx) {\n            delete handler._getFileState(id).temp.cachedChunks[chunkIdx];\n        },\n\n        clearXhr: function(id, chunkIdx) {\n            var tempState = handler._getFileState(id).temp;\n\n            if (tempState.xhrs) {\n                delete tempState.xhrs[chunkIdx];\n            }\n            if (tempState.ajaxRequesters) {\n                delete tempState.ajaxRequesters[chunkIdx];\n            }\n        },\n\n        // Called when all chunks have been successfully uploaded.  Expected promissory return type.\n        // This defines the default behavior if nothing further is required when all chunks have been uploaded.\n        finalizeChunks: function(id, responseParser) {\n            var lastChunkIdx = handler._getTotalChunks(id) - 1,\n                xhr = handler._getXhr(id, lastChunkIdx);\n\n            if (responseParser) {\n                return new qq.Promise().success(responseParser(xhr), xhr);\n            }\n\n            return new qq.Promise().success({}, xhr);\n        },\n\n        getFile: function(id) {\n            return handler.isValid(id) && handler._getFileState(id).file;\n        },\n\n        getProxy: function(id) {\n            return handler.isValid(id) && handler._getFileState(id).proxy;\n        },\n\n        /**\n         * @returns {Array} Array of objects containing properties useful to integrators\n         * when it is important to determine which files are potentially resumable.\n         */\n        getResumableFilesData: function() {\n            var resumableFilesData = [];\n\n            handler._iterateResumeRecords(function(key, uploadData) {\n                handler.moveInProgressToRemaining(null, uploadData.chunking.inProgress,  uploadData.chunking.remaining);\n\n                var data = {\n                    name: uploadData.name,\n                    remaining: uploadData.chunking.remaining,\n                    size: uploadData.size,\n                    uuid: uploadData.uuid\n                };\n\n                if (uploadData.key) {\n                    data.key = uploadData.key;\n                }\n\n                resumableFilesData.push(data);\n            });\n\n            return resumableFilesData;\n        },\n\n        isResumable: function(id) {\n            return !!chunking && handler.isValid(id) && !handler._getFileState(id).notResumable;\n        },\n\n        moveInProgressToRemaining: function(id, optInProgress, optRemaining) {\n            var inProgress = optInProgress || handler._getFileState(id).chunking.inProgress,\n                remaining = optRemaining || handler._getFileState(id).chunking.remaining;\n\n            if (inProgress) {\n                log(qq.format(\"Moving these chunks from in-progress {}, to remaining.\", JSON.stringify(inProgress)));\n                inProgress.reverse();\n                qq.each(inProgress, function(idx, chunkIdx) {\n                    remaining.unshift(chunkIdx);\n                });\n                inProgress.length = 0;\n            }\n        },\n\n        pause: function(id) {\n            if (handler.isValid(id)) {\n                log(qq.format(\"Aborting XHR upload for {} '{}' due to pause instruction.\", id, getName(id)));\n                handler._getFileState(id).paused = true;\n                abort(id);\n                return true;\n            }\n        },\n\n        reevaluateChunking: function(id) {\n            if (chunking && handler.isValid(id)) {\n                var state = handler._getFileState(id),\n                    totalChunks,\n                    i;\n\n                delete state.chunking;\n\n                state.chunking = {};\n                totalChunks = handler._getTotalChunks(id);\n                if (totalChunks > 1 || chunking.mandatory) {\n                    state.chunking.enabled = true;\n                    state.chunking.parts = totalChunks;\n                    state.chunking.remaining = [];\n\n                    for (i = 0; i < totalChunks; i++) {\n                        state.chunking.remaining.push(i);\n                    }\n\n                    handler._initTempState(id);\n                }\n                else {\n                    state.chunking.enabled = false;\n                }\n            }\n        },\n\n        updateBlob: function(id, newBlob) {\n            if (handler.isValid(id)) {\n                handler._getFileState(id).file = newBlob;\n            }\n        },\n\n        _clearXhrs: function(id) {\n            var tempState = handler._getFileState(id).temp;\n\n            qq.each(tempState.ajaxRequesters, function(chunkId) {\n                delete tempState.ajaxRequesters[chunkId];\n            });\n\n            qq.each(tempState.xhrs, function(chunkId) {\n                delete tempState.xhrs[chunkId];\n            });\n        },\n\n        /**\n         * Creates an XHR instance for this file and stores it in the fileState.\n         *\n         * @param id File ID\n         * @param optChunkIdx The chunk index associated with this XHR, if applicable\n         * @returns {XMLHttpRequest}\n         */\n        _createXhr: function(id, optChunkIdx) {\n            return handler._registerXhr(id, optChunkIdx, qq.createXhrInstance());\n        },\n\n        _getAjaxRequester: function(id, optChunkIdx) {\n            var chunkIdx = optChunkIdx == null ? -1 : optChunkIdx;\n            return handler._getFileState(id).temp.ajaxRequesters[chunkIdx];\n        },\n\n        _getChunkData: function(id, chunkIndex) {\n            var chunkSize = chunking.partSize,\n                fileSize = getSize(id),\n                fileOrBlob = handler.getFile(id),\n                startBytes = chunkSize * chunkIndex,\n                endBytes = startBytes + chunkSize >= fileSize ? fileSize : startBytes + chunkSize,\n                totalChunks = handler._getTotalChunks(id),\n                cachedChunks = this._getFileState(id).temp.cachedChunks,\n\n            // To work around a Webkit GC bug, we must keep each chunk `Blob` in scope until we are done with it.\n            // See https://github.com/Widen/fine-uploader/issues/937#issuecomment-41418760\n                blob = cachedChunks[chunkIndex] || qq.sliceBlob(fileOrBlob, startBytes, endBytes);\n\n            cachedChunks[chunkIndex] = blob;\n\n            return {\n                part: chunkIndex,\n                start: startBytes,\n                end: endBytes,\n                count: totalChunks,\n                blob: blob,\n                size: endBytes - startBytes\n            };\n        },\n\n        _getChunkDataForCallback: function(chunkData) {\n            return {\n                partIndex: chunkData.part,\n                startByte: chunkData.start + 1,\n                endByte: chunkData.end,\n                totalParts: chunkData.count\n            };\n        },\n\n        /**\n         * @param id File ID\n         * @returns {string} Identifier for this item that may appear in the browser's local storage\n         */\n        _getLocalStorageId: function(id) {\n            var formatVersion = \"5.0\",\n                name = getName(id),\n                size = getSize(id),\n                chunkSize = chunking.partSize,\n                endpoint = getEndpoint(id);\n\n            return qq.format(\"qq{}resume{}-{}-{}-{}-{}\", namespace, formatVersion, name, size, chunkSize, endpoint);\n        },\n\n        _getMimeType: function(id) {\n            return handler.getFile(id).type;\n        },\n\n        _getPersistableData: function(id) {\n            return handler._getFileState(id).chunking;\n        },\n\n        /**\n         * @param id ID of the associated file\n         * @returns {number} Number of parts this file can be divided into, or undefined if chunking is not supported in this UA\n         */\n        _getTotalChunks: function(id) {\n            if (chunking) {\n                var fileSize = getSize(id),\n                    chunkSize = chunking.partSize;\n\n                return Math.ceil(fileSize / chunkSize);\n            }\n        },\n\n        _getXhr: function(id, optChunkIdx) {\n            var chunkIdx = optChunkIdx == null ? -1 : optChunkIdx;\n            return handler._getFileState(id).temp.xhrs[chunkIdx];\n        },\n\n        _getXhrs: function(id) {\n            return handler._getFileState(id).temp.xhrs;\n        },\n\n        // Iterates through all XHR handler-created resume records (in local storage),\n        // invoking the passed callback and passing in the key and value of each local storage record.\n        _iterateResumeRecords: function(callback) {\n            if (resumeEnabled) {\n                qq.each(localStorage, function(key, item) {\n                    if (key.indexOf(qq.format(\"qq{}resume\", namespace)) === 0) {\n                        var uploadData = JSON.parse(item);\n                        callback(key, uploadData);\n                    }\n                });\n            }\n        },\n\n        _initTempState: function(id) {\n            handler._getFileState(id).temp = {\n                ajaxRequesters: {},\n                chunkProgress: {},\n                xhrs: {},\n                cachedChunks: {}\n            };\n        },\n\n        _markNotResumable: function(id) {\n            handler._getFileState(id).notResumable = true;\n        },\n\n        // Removes a chunked upload record from local storage, if possible.\n        // Returns true if the item was removed, false otherwise.\n        _maybeDeletePersistedChunkData: function(id) {\n            var localStorageId;\n\n            if (resumeEnabled && handler.isResumable(id)) {\n                localStorageId = handler._getLocalStorageId(id);\n\n                if (localStorageId && localStorage.getItem(localStorageId)) {\n                    localStorage.removeItem(localStorageId);\n                    return true;\n                }\n            }\n\n            return false;\n        },\n\n        // If this is a resumable upload, grab the relevant data from storage and items in memory that track this upload\n        // so we can pick up from where we left off.\n        _maybePrepareForResume: function(id) {\n            var state = handler._getFileState(id),\n                localStorageId, persistedData;\n\n            // Resume is enabled and possible and this is the first time we've tried to upload this file in this session,\n            // so prepare for a resume attempt.\n            if (resumeEnabled && state.key === undefined) {\n                localStorageId = handler._getLocalStorageId(id);\n                persistedData = localStorage.getItem(localStorageId);\n\n                // If we found this item in local storage, maybe we should resume it.\n                if (persistedData) {\n                    persistedData = JSON.parse(persistedData);\n\n                    // If we found a resume record but we have already handled this file in this session,\n                    // don't try to resume it & ensure we don't persist future check data\n                    if (getDataByUuid(persistedData.uuid)) {\n                        handler._markNotResumable(id);\n                    }\n                    else {\n                        log(qq.format(\"Identified file with ID {} and name of {} as resumable.\", id, getName(id)));\n\n                        onUuidChanged(id, persistedData.uuid);\n\n                        state.key = persistedData.key;\n                        state.chunking = persistedData.chunking;\n                        state.loaded = persistedData.loaded;\n                        state.attemptingResume = true;\n\n                        handler.moveInProgressToRemaining(id);\n                    }\n                }\n            }\n        },\n\n        // Persist any data needed to resume this upload in a new session.\n        _maybePersistChunkedState: function(id) {\n            var state = handler._getFileState(id),\n                localStorageId, persistedData;\n\n            // If local storage isn't supported by the browser, or if resume isn't enabled or possible, give up\n            if (resumeEnabled && handler.isResumable(id)) {\n                localStorageId = handler._getLocalStorageId(id);\n\n                persistedData = {\n                    name: getName(id),\n                    size: getSize(id),\n                    uuid: getUuid(id),\n                    key: state.key,\n                    chunking: state.chunking,\n                    loaded: state.loaded,\n                    lastUpdated: Date.now()\n                };\n\n                try {\n                    localStorage.setItem(localStorageId, JSON.stringify(persistedData));\n                }\n                catch (error) {\n                    log(qq.format(\"Unable to save resume data for '{}' due to error: '{}'.\", id, error.toString()), \"warn\");\n                }\n            }\n        },\n\n        _registerProgressHandler: function(id, chunkIdx, chunkSize) {\n            var xhr = handler._getXhr(id, chunkIdx),\n                name = getName(id),\n                progressCalculator = {\n                    simple: function(loaded, total) {\n                        var fileSize = getSize(id);\n\n                        if (loaded === total) {\n                            onProgress(id, name, fileSize, fileSize);\n                        }\n                        else {\n                            onProgress(id, name, (loaded >= fileSize ? fileSize - 1 : loaded), fileSize);\n                        }\n                    },\n\n                    chunked: function(loaded, total) {\n                        var chunkProgress = handler._getFileState(id).temp.chunkProgress,\n                            totalSuccessfullyLoadedForFile = handler._getFileState(id).loaded,\n                            loadedForRequest = loaded,\n                            totalForRequest = total,\n                            totalFileSize = getSize(id),\n                            estActualChunkLoaded = loadedForRequest - (totalForRequest - chunkSize),\n                            totalLoadedForFile = totalSuccessfullyLoadedForFile;\n\n                        chunkProgress[chunkIdx] = estActualChunkLoaded;\n\n                        qq.each(chunkProgress, function(chunkIdx, chunkLoaded) {\n                            totalLoadedForFile += chunkLoaded;\n                        });\n\n                        onProgress(id, name, totalLoadedForFile, totalFileSize);\n                    }\n                };\n\n            xhr.upload.onprogress = function(e) {\n                if (e.lengthComputable) {\n                    /* jshint eqnull: true */\n                    var type = chunkSize == null ? \"simple\" : \"chunked\";\n                    progressCalculator[type](e.loaded, e.total);\n                }\n            };\n        },\n\n        /**\n         * Registers an XHR transport instance created elsewhere.\n         *\n         * @param id ID of the associated file\n         * @param optChunkIdx The chunk index associated with this XHR, if applicable\n         * @param xhr XMLHttpRequest object instance\n         * @param optAjaxRequester `qq.AjaxRequester` associated with this request, if applicable.\n         * @returns {XMLHttpRequest}\n         */\n        _registerXhr: function(id, optChunkIdx, xhr, optAjaxRequester) {\n            var xhrsId = optChunkIdx == null ? -1 : optChunkIdx,\n                tempState = handler._getFileState(id).temp;\n\n            tempState.xhrs = tempState.xhrs || {};\n            tempState.ajaxRequesters = tempState.ajaxRequesters || {};\n\n            tempState.xhrs[xhrsId] = xhr;\n\n            if (optAjaxRequester) {\n                tempState.ajaxRequesters[xhrsId] = optAjaxRequester;\n            }\n\n            return xhr;\n        },\n\n        // Deletes any local storage records that are \"expired\".\n        _removeExpiredChunkingRecords: function() {\n            var expirationDays = resume.recordsExpireIn;\n\n            handler._iterateResumeRecords(function(key, uploadData) {\n                var expirationDate = new Date(uploadData.lastUpdated);\n\n                // transform updated date into expiration date\n                expirationDate.setDate(expirationDate.getDate() + expirationDays);\n\n                if (expirationDate.getTime() <= Date.now()) {\n                    log(\"Removing expired resume record with key \" + key);\n                    localStorage.removeItem(key);\n                }\n            });\n        },\n\n        /**\n         * Determine if the associated file should be chunked.\n         *\n         * @param id ID of the associated file\n         * @returns {*} true if chunking is enabled, possible, and the file can be split into more than 1 part\n         */\n        _shouldChunkThisFile: function(id) {\n            var state = handler._getFileState(id);\n\n            if (!state.chunking) {\n                handler.reevaluateChunking(id);\n            }\n\n            return state.chunking.enabled;\n        }\n    });\n};\n",
    "/*globals qq, XMLHttpRequest*/\nqq.DeleteFileAjaxRequester = function(o) {\n    \"use strict\";\n\n    var requester,\n        options = {\n            method: \"DELETE\",\n            uuidParamName: \"qquuid\",\n            endpointStore: {},\n            maxConnections: 3,\n            customHeaders: function(id) {return {};},\n            paramsStore: {},\n            cors: {\n                expected: false,\n                sendCredentials: false\n            },\n            log: function(str, level) {},\n            onDelete: function(id) {},\n            onDeleteComplete: function(id, xhrOrXdr, isError) {}\n        };\n\n    qq.extend(options, o);\n\n    function getMandatedParams() {\n        if (options.method.toUpperCase() === \"POST\") {\n            return {\n                _method: \"DELETE\"\n            };\n        }\n\n        return {};\n    }\n\n    requester = qq.extend(this, new qq.AjaxRequester({\n        acceptHeader: \"application/json\",\n        validMethods: [\"POST\", \"DELETE\"],\n        method: options.method,\n        endpointStore: options.endpointStore,\n        paramsStore: options.paramsStore,\n        mandatedParams: getMandatedParams(),\n        maxConnections: options.maxConnections,\n        customHeaders: function(id) {\n            return options.customHeaders.get(id);\n        },\n        log: options.log,\n        onSend: options.onDelete,\n        onComplete: options.onDeleteComplete,\n        cors: options.cors\n    }));\n\n    qq.extend(this, {\n        sendDelete: function(id, uuid, additionalMandatedParams) {\n            var additionalOptions = additionalMandatedParams || {};\n\n            options.log(\"Submitting delete file request for \" + id);\n\n            if (options.method === \"DELETE\") {\n                requester.initTransport(id)\n                    .withPath(uuid)\n                    .withParams(additionalOptions)\n                    .send();\n            }\n            else {\n                additionalOptions[options.uuidParamName] = uuid;\n                requester.initTransport(id)\n                    .withParams(additionalOptions)\n                    .send();\n            }\n        }\n    });\n};\n",
    "/*global qq, define */\n/*jshint strict:false,bitwise:false,nonew:false,asi:true,-W064,-W116,-W089 */\n/**\n * Mega pixel image rendering library for iOS6+\n *\n * Fixes iOS6+'s image file rendering issue for large size image (over mega-pixel),\n * which causes unexpected subsampling when drawing it in canvas.\n * By using this library, you can safely render the image with proper stretching.\n *\n * Copyright (c) 2012 Shinichi Tomita <shinichi.tomita@gmail.com>\n * Released under the MIT license\n *\n * Heavily modified by Widen for Fine Uploader\n */\n(function() {\n\n    /**\n     * Detect subsampling in loaded image.\n     * In iOS, larger images than 2M pixels may be subsampled in rendering.\n     */\n    function detectSubsampling(img) {\n        var iw = img.naturalWidth,\n            ih = img.naturalHeight,\n            canvas = document.createElement(\"canvas\"),\n            ctx;\n\n        if (iw * ih > 1024 * 1024) { // subsampling may happen over megapixel image\n            canvas.width = canvas.height = 1;\n            ctx = canvas.getContext(\"2d\");\n            ctx.drawImage(img, -iw + 1, 0);\n            // subsampled image becomes half smaller in rendering size.\n            // check alpha channel value to confirm image is covering edge pixel or not.\n            // if alpha value is 0 image is not covering, hence subsampled.\n            return ctx.getImageData(0, 0, 1, 1).data[3] === 0;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * Detecting vertical squash in loaded image.\n     * Fixes a bug which squash image vertically while drawing into canvas for some images.\n     */\n    function detectVerticalSquash(img, iw, ih) {\n        var canvas = document.createElement(\"canvas\"),\n            sy = 0,\n            ey = ih,\n            py = ih,\n            ctx, data, alpha, ratio;\n\n        canvas.width = 1;\n        canvas.height = ih;\n        ctx = canvas.getContext(\"2d\");\n        ctx.drawImage(img, 0, 0);\n        data = ctx.getImageData(0, 0, 1, ih).data;\n\n        // search image edge pixel position in case it is squashed vertically.\n        while (py > sy) {\n            alpha = data[(py - 1) * 4 + 3];\n            if (alpha === 0) {\n                ey = py;\n            } else {\n                sy = py;\n            }\n            py = (ey + sy) >> 1;\n        }\n\n        ratio = (py / ih);\n        return (ratio === 0) ? 1 : ratio;\n    }\n\n    /**\n     * Rendering image element (with resizing) and get its data URL\n     */\n    function renderImageToDataURL(img, blob, options, doSquash) {\n        var canvas = document.createElement(\"canvas\"),\n            mime = options.mime || \"image/jpeg\",\n            promise = new qq.Promise();\n\n        renderImageToCanvas(img, blob, canvas, options, doSquash)\n            .then(function() {\n                promise.success(\n                    canvas.toDataURL(mime, options.quality || 0.8)\n                );\n            });\n\n        return promise;\n    }\n\n    function maybeCalculateDownsampledDimensions(spec) {\n        var maxPixels = 5241000; //iOS specific value\n\n        if (!qq.ios()) {\n            throw new qq.Error(\"Downsampled dimensions can only be reliably calculated for iOS!\");\n        }\n\n        if (spec.origHeight * spec.origWidth > maxPixels) {\n            return {\n                newHeight: Math.round(Math.sqrt(maxPixels * (spec.origHeight / spec.origWidth))),\n                newWidth: Math.round(Math.sqrt(maxPixels * (spec.origWidth / spec.origHeight)))\n            };\n        }\n    }\n\n    /**\n     * Rendering image element (with resizing) into the canvas element\n     */\n    function renderImageToCanvas(img, blob, canvas, options, doSquash) {\n        var iw = img.naturalWidth,\n            ih = img.naturalHeight,\n            width = options.width,\n            height = options.height,\n            ctx = canvas.getContext(\"2d\"),\n            promise = new qq.Promise(),\n            modifiedDimensions;\n\n        ctx.save();\n\n        if (options.resize) {\n            return renderImageToCanvasWithCustomResizer({\n                blob: blob,\n                canvas: canvas,\n                image: img,\n                imageHeight: ih,\n                imageWidth: iw,\n                orientation: options.orientation,\n                resize: options.resize,\n                targetHeight: height,\n                targetWidth: width\n            });\n        }\n\n        if (!qq.supportedFeatures.unlimitedScaledImageSize) {\n            modifiedDimensions = maybeCalculateDownsampledDimensions({\n                origWidth: width,\n                origHeight: height\n            });\n\n            if (modifiedDimensions) {\n                qq.log(qq.format(\"Had to reduce dimensions due to device limitations from {}w / {}h to {}w / {}h\",\n                    width, height, modifiedDimensions.newWidth, modifiedDimensions.newHeight),\n                    \"warn\");\n\n                width = modifiedDimensions.newWidth;\n                height = modifiedDimensions.newHeight;\n            }\n        }\n\n        transformCoordinate(canvas, width, height, options.orientation);\n\n        // Fine Uploader specific: Save some CPU cycles if not using iOS\n        // Assumption: This logic is only needed to overcome iOS image sampling issues\n        if (qq.ios()) {\n            (function() {\n                if (detectSubsampling(img)) {\n                    iw /= 2;\n                    ih /= 2;\n                }\n\n                var d = 1024, // size of tiling canvas\n                    tmpCanvas = document.createElement(\"canvas\"),\n                    vertSquashRatio = doSquash ? detectVerticalSquash(img, iw, ih) : 1,\n                    dw = Math.ceil(d * width / iw),\n                    dh = Math.ceil(d * height / ih / vertSquashRatio),\n                    sy = 0,\n                    dy = 0,\n                    tmpCtx, sx, dx;\n\n                tmpCanvas.width = tmpCanvas.height = d;\n                tmpCtx = tmpCanvas.getContext(\"2d\");\n\n                while (sy < ih) {\n                    sx = 0;\n                    dx = 0;\n                    while (sx < iw) {\n                        tmpCtx.clearRect(0, 0, d, d);\n                        tmpCtx.drawImage(img, -sx, -sy);\n                        ctx.drawImage(tmpCanvas, 0, 0, d, d, dx, dy, dw, dh);\n                        sx += d;\n                        dx += dw;\n                    }\n                    sy += d;\n                    dy += dh;\n                }\n                ctx.restore();\n                tmpCanvas = tmpCtx = null;\n            }());\n        }\n        else {\n            ctx.drawImage(img, 0, 0, width, height);\n        }\n\n        canvas.qqImageRendered && canvas.qqImageRendered();\n        promise.success();\n\n        return promise;\n    }\n\n    function renderImageToCanvasWithCustomResizer(resizeInfo) {\n        var blob = resizeInfo.blob,\n            image = resizeInfo.image,\n            imageHeight = resizeInfo.imageHeight,\n            imageWidth = resizeInfo.imageWidth,\n            orientation = resizeInfo.orientation,\n            promise = new qq.Promise(),\n            resize = resizeInfo.resize,\n            sourceCanvas = document.createElement(\"canvas\"),\n            sourceCanvasContext = sourceCanvas.getContext(\"2d\"),\n            targetCanvas = resizeInfo.canvas,\n            targetHeight = resizeInfo.targetHeight,\n            targetWidth = resizeInfo.targetWidth;\n\n        transformCoordinate(sourceCanvas, imageWidth, imageHeight, orientation);\n\n        targetCanvas.height = targetHeight;\n        targetCanvas.width = targetWidth;\n\n        sourceCanvasContext.drawImage(image, 0, 0);\n\n        resize({\n            blob: blob,\n            height: targetHeight,\n            image: image,\n            sourceCanvas: sourceCanvas,\n            targetCanvas: targetCanvas,\n            width: targetWidth\n        })\n            .then(\n                function success() {\n                    targetCanvas.qqImageRendered && targetCanvas.qqImageRendered();\n                    promise.success();\n                },\n                promise.failure\n            );\n\n        return promise;\n    }\n\n    /**\n     * Transform canvas coordination according to specified frame size and orientation\n     * Orientation value is from EXIF tag\n     */\n    function transformCoordinate(canvas, width, height, orientation) {\n        switch (orientation) {\n            case 5:\n            case 6:\n            case 7:\n            case 8:\n                canvas.width = height;\n                canvas.height = width;\n                break;\n            default:\n                canvas.width = width;\n                canvas.height = height;\n        }\n        var ctx = canvas.getContext(\"2d\");\n        switch (orientation) {\n            case 2:\n                // horizontal flip\n                ctx.translate(width, 0);\n                ctx.scale(-1, 1);\n                break;\n            case 3:\n                // 180 rotate left\n                ctx.translate(width, height);\n                ctx.rotate(Math.PI);\n                break;\n            case 4:\n                // vertical flip\n                ctx.translate(0, height);\n                ctx.scale(1, -1);\n                break;\n            case 5:\n                // vertical flip + 90 rotate right\n                ctx.rotate(0.5 * Math.PI);\n                ctx.scale(1, -1);\n                break;\n            case 6:\n                // 90 rotate right\n                ctx.rotate(0.5 * Math.PI);\n                ctx.translate(0, -height);\n                break;\n            case 7:\n                // horizontal flip + 90 rotate right\n                ctx.rotate(0.5 * Math.PI);\n                ctx.translate(width, -height);\n                ctx.scale(-1, 1);\n                break;\n            case 8:\n                // 90 rotate left\n                ctx.rotate(-0.5 * Math.PI);\n                ctx.translate(-width, 0);\n                break;\n            default:\n                break;\n        }\n    }\n\n    /**\n     * MegaPixImage class\n     */\n    function MegaPixImage(srcImage, errorCallback) {\n        var self = this;\n\n        if (window.Blob && srcImage instanceof Blob) {\n            (function() {\n                var img = new Image(),\n                    URL = window.URL && window.URL.createObjectURL ? window.URL :\n                        window.webkitURL && window.webkitURL.createObjectURL ? window.webkitURL : null;\n                if (!URL) { throw Error(\"No createObjectURL function found to create blob url\"); }\n                img.src = URL.createObjectURL(srcImage);\n                self.blob = srcImage;\n                srcImage = img;\n            }());\n        }\n        if (!srcImage.naturalWidth && !srcImage.naturalHeight) {\n            srcImage.onload = function() {\n                var listeners = self.imageLoadListeners;\n                if (listeners) {\n                    self.imageLoadListeners = null;\n                    // IE11 doesn't reliably report actual image dimensions immediately after onload for small files,\n                    // so let's push this to the end of the UI thread queue.\n                    setTimeout(function() {\n                        for (var i = 0, len = listeners.length; i < len; i++) {\n                            listeners[i]();\n                        }\n                    }, 0);\n                }\n            };\n            srcImage.onerror = errorCallback;\n            this.imageLoadListeners = [];\n        }\n        this.srcImage = srcImage;\n    }\n\n    /**\n     * Rendering megapix image into specified target element\n     */\n    MegaPixImage.prototype.render = function(target, options) {\n        options = options || {};\n\n        var self = this,\n            imgWidth = this.srcImage.naturalWidth,\n            imgHeight = this.srcImage.naturalHeight,\n            width = options.width,\n            height = options.height,\n            maxWidth = options.maxWidth,\n            maxHeight = options.maxHeight,\n            doSquash = !this.blob || this.blob.type === \"image/jpeg\",\n            tagName = target.tagName.toLowerCase(),\n            opt;\n\n        if (this.imageLoadListeners) {\n            this.imageLoadListeners.push(function() { self.render(target, options); });\n            return;\n        }\n\n        if (width && !height) {\n            height = (imgHeight * width / imgWidth) << 0;\n        } else if (height && !width) {\n            width = (imgWidth * height / imgHeight) << 0;\n        } else {\n            width = imgWidth;\n            height = imgHeight;\n        }\n        if (maxWidth && width > maxWidth) {\n            width = maxWidth;\n            height = (imgHeight * width / imgWidth) << 0;\n        }\n        if (maxHeight && height > maxHeight) {\n            height = maxHeight;\n            width = (imgWidth * height / imgHeight) << 0;\n        }\n\n        opt = { width: width, height: height },\n        qq.each(options, function(optionsKey, optionsValue) {\n            opt[optionsKey] = optionsValue;\n        });\n\n        if (tagName === \"img\") {\n            (function() {\n                var oldTargetSrc = target.src;\n                renderImageToDataURL(self.srcImage, self.blob, opt, doSquash)\n                    .then(function(dataUri) {\n                        target.src = dataUri;\n                        oldTargetSrc === target.src && target.onload();\n                    });\n            }());\n        } else if (tagName === \"canvas\") {\n            renderImageToCanvas(this.srcImage, this.blob, target, opt, doSquash);\n        }\n        if (typeof this.onrender === \"function\") {\n            this.onrender(target);\n        }\n    };\n\n    qq.MegaPixImage = MegaPixImage;\n})();\n",
    "/*globals qq */\n/**\n * Draws a thumbnail of a Blob/File/URL onto an <img> or <canvas>.\n *\n * @constructor\n */\nqq.ImageGenerator = function(log) {\n    \"use strict\";\n\n    function isImg(el) {\n        return el.tagName.toLowerCase() === \"img\";\n    }\n\n    function isCanvas(el) {\n        return el.tagName.toLowerCase() === \"canvas\";\n    }\n\n    function isImgCorsSupported() {\n        return new Image().crossOrigin !== undefined;\n    }\n\n    function isCanvasSupported() {\n        var canvas = document.createElement(\"canvas\");\n\n        return canvas.getContext && canvas.getContext(\"2d\");\n    }\n\n    // This is only meant to determine the MIME type of a renderable image file.\n    // It is used to ensure images drawn from a URL that have transparent backgrounds\n    // are rendered correctly, among other things.\n    function determineMimeOfFileName(nameWithPath) {\n        /*jshint -W015 */\n        var pathSegments = nameWithPath.split(\"/\"),\n            name = pathSegments[pathSegments.length - 1].split(\"?\")[0],\n            extension = qq.getExtension(name);\n\n        extension = extension && extension.toLowerCase();\n\n        switch (extension) {\n            case \"jpeg\":\n            case \"jpg\":\n                return \"image/jpeg\";\n            case \"png\":\n                return \"image/png\";\n            case \"bmp\":\n                return \"image/bmp\";\n            case \"gif\":\n                return \"image/gif\";\n            case \"tiff\":\n            case \"tif\":\n                return \"image/tiff\";\n        }\n    }\n\n    // This will likely not work correctly in IE8 and older.\n    // It's only used as part of a formula to determine\n    // if a canvas can be used to scale a server-hosted thumbnail.\n    // If canvas isn't supported by the UA (IE8 and older)\n    // this method should not even be called.\n    function isCrossOrigin(url) {\n        var targetAnchor = document.createElement(\"a\"),\n            targetProtocol, targetHostname, targetPort;\n\n        targetAnchor.href = url;\n\n        targetProtocol = targetAnchor.protocol;\n        targetPort = targetAnchor.port;\n        targetHostname = targetAnchor.hostname;\n\n        if (targetProtocol.toLowerCase() !== window.location.protocol.toLowerCase()) {\n            return true;\n        }\n\n        if (targetHostname.toLowerCase() !== window.location.hostname.toLowerCase()) {\n            return true;\n        }\n\n        // IE doesn't take ports into consideration when determining if two endpoints are same origin.\n        if (targetPort !== window.location.port && !qq.ie()) {\n            return true;\n        }\n\n        return false;\n    }\n\n    function registerImgLoadListeners(img, promise) {\n        img.onload = function() {\n            img.onload = null;\n            img.onerror = null;\n            promise.success(img);\n        };\n\n        img.onerror = function() {\n            img.onload = null;\n            img.onerror = null;\n            log(\"Problem drawing thumbnail!\", \"error\");\n            promise.failure(img, \"Problem drawing thumbnail!\");\n        };\n    }\n\n    function registerCanvasDrawImageListener(canvas, promise) {\n        // The image is drawn on the canvas by a third-party library,\n        // and we want to know when this is completed.  Since the library\n        // may invoke drawImage many times in a loop, we need to be called\n        // back when the image is fully rendered.  So, we are expecting the\n        // code that draws this image to follow a convention that involves a\n        // function attached to the canvas instance be invoked when it is done.\n        canvas.qqImageRendered = function() {\n            promise.success(canvas);\n        };\n    }\n\n    // Fulfills a `qq.Promise` when an image has been drawn onto the target,\n    // whether that is a <canvas> or an <img>.  The attempt is considered a\n    // failure if the target is not an <img> or a <canvas>, or if the drawing\n    // attempt was not successful.\n    function registerThumbnailRenderedListener(imgOrCanvas, promise) {\n        var registered = isImg(imgOrCanvas) || isCanvas(imgOrCanvas);\n\n        if (isImg(imgOrCanvas)) {\n            registerImgLoadListeners(imgOrCanvas, promise);\n        }\n        else if (isCanvas(imgOrCanvas)) {\n            registerCanvasDrawImageListener(imgOrCanvas, promise);\n        }\n        else {\n            promise.failure(imgOrCanvas);\n            log(qq.format(\"Element container of type {} is not supported!\", imgOrCanvas.tagName), \"error\");\n        }\n\n        return registered;\n    }\n\n    // Draw a preview iff the current UA can natively display it.\n    // Also rotate the image if necessary.\n    function draw(fileOrBlob, container, options) {\n        var drawPreview = new qq.Promise(),\n            identifier = new qq.Identify(fileOrBlob, log),\n            maxSize = options.maxSize,\n            // jshint eqnull:true\n            orient = options.orient == null ? true : options.orient,\n            megapixErrorHandler = function() {\n                container.onerror = null;\n                container.onload = null;\n                log(\"Could not render preview, file may be too large!\", \"error\");\n                drawPreview.failure(container, \"Browser cannot render image!\");\n            };\n\n        identifier.isPreviewable().then(\n            function(mime) {\n                // If options explicitly specify that Orientation is not desired,\n                // replace the orient task with a dummy promise that \"succeeds\" immediately.\n                var dummyExif = {\n                        parse: function() {\n                            return new qq.Promise().success();\n                        }\n                    },\n                    exif = orient ? new qq.Exif(fileOrBlob, log) : dummyExif,\n                    mpImg = new qq.MegaPixImage(fileOrBlob, megapixErrorHandler);\n\n                if (registerThumbnailRenderedListener(container, drawPreview)) {\n                    exif.parse().then(\n                        function(exif) {\n                            var orientation = exif && exif.Orientation;\n\n                            mpImg.render(container, {\n                                maxWidth: maxSize,\n                                maxHeight: maxSize,\n                                orientation: orientation,\n                                mime: mime,\n                                resize: options.customResizeFunction\n                            });\n                        },\n\n                        function(failureMsg) {\n                            log(qq.format(\"EXIF data could not be parsed ({}).  Assuming orientation = 1.\", failureMsg));\n\n                            mpImg.render(container, {\n                                maxWidth: maxSize,\n                                maxHeight: maxSize,\n                                mime: mime,\n                                resize: options.customResizeFunction\n                            });\n                        }\n                    );\n                }\n            },\n\n            function() {\n                log(\"Not previewable\");\n                drawPreview.failure(container, \"Not previewable\");\n            }\n        );\n\n        return drawPreview;\n    }\n\n    function drawOnCanvasOrImgFromUrl(url, canvasOrImg, draw, maxSize, customResizeFunction) {\n        var tempImg = new Image(),\n            tempImgRender = new qq.Promise();\n\n        registerThumbnailRenderedListener(tempImg, tempImgRender);\n\n        if (isCrossOrigin(url)) {\n            tempImg.crossOrigin = \"anonymous\";\n        }\n\n        tempImg.src = url;\n\n        tempImgRender.then(\n            function rendered() {\n                registerThumbnailRenderedListener(canvasOrImg, draw);\n\n                var mpImg = new qq.MegaPixImage(tempImg);\n                mpImg.render(canvasOrImg, {\n                    maxWidth: maxSize,\n                    maxHeight: maxSize,\n                    mime: determineMimeOfFileName(url),\n                    resize: customResizeFunction\n                });\n            },\n\n            draw.failure\n        );\n    }\n\n    function drawOnImgFromUrlWithCssScaling(url, img, draw, maxSize) {\n        registerThumbnailRenderedListener(img, draw);\n        // NOTE: The fact that maxWidth/height is set on the thumbnail for scaled images\n        // that must drop back to CSS is known and exploited by the templating module.\n        // In this module, we pre-render \"waiting\" thumbs for all files immediately after they\n        // are submitted, and we must be sure to pass any style associated with the \"waiting\" preview.\n        qq(img).css({\n            maxWidth: maxSize + \"px\",\n            maxHeight: maxSize + \"px\"\n        });\n\n        img.src = url;\n    }\n\n    // Draw a (server-hosted) thumbnail given a URL.\n    // This will optionally scale the thumbnail as well.\n    // It attempts to use <canvas> to scale, but will fall back\n    // to max-width and max-height style properties if the UA\n    // doesn't support canvas or if the images is cross-domain and\n    // the UA doesn't support the crossorigin attribute on img tags,\n    // which is required to scale a cross-origin image using <canvas> &\n    // then export it back to an <img>.\n    function drawFromUrl(url, container, options) {\n        var draw = new qq.Promise(),\n            scale = options.scale,\n            maxSize = scale ? options.maxSize : null;\n\n        // container is an img, scaling needed\n        if (scale && isImg(container)) {\n            // Iff canvas is available in this UA, try to use it for scaling.\n            // Otherwise, fall back to CSS scaling\n            if (isCanvasSupported()) {\n                // Attempt to use <canvas> for image scaling,\n                // but we must fall back to scaling via CSS/styles\n                // if this is a cross-origin image and the UA doesn't support <img> CORS.\n                if (isCrossOrigin(url) && !isImgCorsSupported()) {\n                    drawOnImgFromUrlWithCssScaling(url, container, draw, maxSize);\n                }\n                else {\n                    drawOnCanvasOrImgFromUrl(url, container, draw, maxSize);\n                }\n            }\n            else {\n                drawOnImgFromUrlWithCssScaling(url, container, draw, maxSize);\n            }\n        }\n        // container is a canvas, scaling optional\n        else if (isCanvas(container)) {\n            drawOnCanvasOrImgFromUrl(url, container, draw, maxSize);\n        }\n        // container is an img & no scaling: just set the src attr to the passed url\n        else if (registerThumbnailRenderedListener(container, draw)) {\n            container.src = url;\n        }\n\n        return draw;\n    }\n\n    qq.extend(this, {\n        /**\n         * Generate a thumbnail.  Depending on the arguments, this may either result in\n         * a client-side rendering of an image (if a `Blob` is supplied) or a server-generated\n         * image that may optionally be scaled client-side using <canvas> or CSS/styles (as a fallback).\n         *\n         * @param fileBlobOrUrl a `File`, `Blob`, or a URL pointing to the image\n         * @param container <img> or <canvas> to contain the preview\n         * @param options possible properties include `maxSize` (int), `orient` (bool - default true), resize` (bool - default true), and `customResizeFunction`.\n         * @returns qq.Promise fulfilled when the preview has been drawn, or the attempt has failed\n         */\n        generate: function(fileBlobOrUrl, container, options) {\n            if (qq.isString(fileBlobOrUrl)) {\n                log(\"Attempting to update thumbnail based on server response.\");\n                return drawFromUrl(fileBlobOrUrl, container, options || {});\n            }\n            else {\n                log(\"Attempting to draw client-side image preview.\");\n                return draw(fileBlobOrUrl, container, options || {});\n            }\n        }\n    });\n\n    /*<testing>*/\n    this._testing = {};\n    this._testing.isImg = isImg;\n    this._testing.isCanvas = isCanvas;\n    this._testing.isCrossOrigin = isCrossOrigin;\n    this._testing.determineMimeOfFileName = determineMimeOfFileName;\n    /*</testing>*/\n};\n",
    "/*globals qq */\n/**\n * EXIF image data parser.  Currently only parses the Orientation tag value,\n * but this may be expanded to other tags in the future.\n *\n * @param fileOrBlob Attempt to parse EXIF data in this `Blob`\n * @constructor\n */\nqq.Exif = function(fileOrBlob, log) {\n    \"use strict\";\n\n    // Orientation is the only tag parsed here at this time.\n    var TAG_IDS = [274],\n        TAG_INFO = {\n            274: {\n                name: \"Orientation\",\n                bytes: 2\n            }\n        };\n\n    // Convert a little endian (hex string) to big endian (decimal).\n    function parseLittleEndian(hex) {\n        var result = 0,\n            pow = 0;\n\n        while (hex.length > 0) {\n            result += parseInt(hex.substring(0, 2), 16) * Math.pow(2, pow);\n            hex = hex.substring(2, hex.length);\n            pow += 8;\n        }\n\n        return result;\n    }\n\n    // Find the byte offset, of Application Segment 1 (EXIF).\n    // External callers need not supply any arguments.\n    function seekToApp1(offset, promise) {\n        var theOffset = offset,\n            thePromise = promise;\n        if (theOffset === undefined) {\n            theOffset = 2;\n            thePromise = new qq.Promise();\n        }\n\n        qq.readBlobToHex(fileOrBlob, theOffset, 4).then(function(hex) {\n            var match = /^ffe([0-9])/.exec(hex),\n                segmentLength;\n\n            if (match) {\n                if (match[1] !== \"1\") {\n                    segmentLength = parseInt(hex.slice(4, 8), 16);\n                    seekToApp1(theOffset + segmentLength + 2, thePromise);\n                }\n                else {\n                    thePromise.success(theOffset);\n                }\n            }\n            else {\n                thePromise.failure(\"No EXIF header to be found!\");\n            }\n        });\n\n        return thePromise;\n    }\n\n    // Find the byte offset of Application Segment 1 (EXIF) for valid JPEGs only.\n    function getApp1Offset() {\n        var promise = new qq.Promise();\n\n        qq.readBlobToHex(fileOrBlob, 0, 6).then(function(hex) {\n            if (hex.indexOf(\"ffd8\") !== 0) {\n                promise.failure(\"Not a valid JPEG!\");\n            }\n            else {\n                seekToApp1().then(function(offset) {\n                    promise.success(offset);\n                },\n                function(error) {\n                    promise.failure(error);\n                });\n            }\n        });\n\n        return promise;\n    }\n\n    // Determine the byte ordering of the EXIF header.\n    function isLittleEndian(app1Start) {\n        var promise = new qq.Promise();\n\n        qq.readBlobToHex(fileOrBlob, app1Start + 10, 2).then(function(hex) {\n            promise.success(hex === \"4949\");\n        });\n\n        return promise;\n    }\n\n    // Determine the number of directory entries in the EXIF header.\n    function getDirEntryCount(app1Start, littleEndian) {\n        var promise = new qq.Promise();\n\n        qq.readBlobToHex(fileOrBlob, app1Start + 18, 2).then(function(hex) {\n            if (littleEndian) {\n                return promise.success(parseLittleEndian(hex));\n            }\n            else {\n                promise.success(parseInt(hex, 16));\n            }\n        });\n\n        return promise;\n    }\n\n    // Get the IFD portion of the EXIF header as a hex string.\n    function getIfd(app1Start, dirEntries) {\n        var offset = app1Start + 20,\n            bytes = dirEntries * 12;\n\n        return qq.readBlobToHex(fileOrBlob, offset, bytes);\n    }\n\n    // Obtain an array of all directory entries (as hex strings) in the EXIF header.\n    function getDirEntries(ifdHex) {\n        var entries = [],\n            offset = 0;\n\n        while (offset + 24 <= ifdHex.length) {\n            entries.push(ifdHex.slice(offset, offset + 24));\n            offset += 24;\n        }\n\n        return entries;\n    }\n\n    // Obtain values for all relevant tags and return them.\n    function getTagValues(littleEndian, dirEntries) {\n        var TAG_VAL_OFFSET = 16,\n            tagsToFind = qq.extend([], TAG_IDS),\n            vals = {};\n\n        qq.each(dirEntries, function(idx, entry) {\n            var idHex = entry.slice(0, 4),\n                id = littleEndian ? parseLittleEndian(idHex) : parseInt(idHex, 16),\n                tagsToFindIdx = tagsToFind.indexOf(id),\n                tagValHex, tagName, tagValLength;\n\n            if (tagsToFindIdx >= 0) {\n                tagName = TAG_INFO[id].name;\n                tagValLength = TAG_INFO[id].bytes;\n                tagValHex = entry.slice(TAG_VAL_OFFSET, TAG_VAL_OFFSET + (tagValLength * 2));\n                vals[tagName] = littleEndian ? parseLittleEndian(tagValHex) : parseInt(tagValHex, 16);\n\n                tagsToFind.splice(tagsToFindIdx, 1);\n            }\n\n            if (tagsToFind.length === 0) {\n                return false;\n            }\n        });\n\n        return vals;\n    }\n\n    qq.extend(this, {\n        /**\n         * Attempt to parse the EXIF header for the `Blob` associated with this instance.\n         *\n         * @returns {qq.Promise} To be fulfilled when the parsing is complete.\n         * If successful, the parsed EXIF header as an object will be included.\n         */\n        parse: function() {\n            var parser = new qq.Promise(),\n                onParseFailure = function(message) {\n                    log(qq.format(\"EXIF header parse failed: '{}' \", message));\n                    parser.failure(message);\n                };\n\n            getApp1Offset().then(function(app1Offset) {\n                log(qq.format(\"Moving forward with EXIF header parsing for '{}'\", fileOrBlob.name === undefined ? \"blob\" : fileOrBlob.name));\n\n                isLittleEndian(app1Offset).then(function(littleEndian) {\n\n                    log(qq.format(\"EXIF Byte order is {} endian\", littleEndian ? \"little\" : \"big\"));\n\n                    getDirEntryCount(app1Offset, littleEndian).then(function(dirEntryCount) {\n\n                        log(qq.format(\"Found {} APP1 directory entries\", dirEntryCount));\n\n                        getIfd(app1Offset, dirEntryCount).then(function(ifdHex) {\n                            var dirEntries = getDirEntries(ifdHex),\n                                tagValues = getTagValues(littleEndian, dirEntries);\n\n                            log(\"Successfully parsed some EXIF tags\");\n\n                            parser.success(tagValues);\n                        }, onParseFailure);\n                    }, onParseFailure);\n                }, onParseFailure);\n            }, onParseFailure);\n\n            return parser;\n        }\n    });\n\n    /*<testing>*/\n    this._testing = {};\n    this._testing.parseLittleEndian = parseLittleEndian;\n    /*</testing>*/\n};\n",
    "/*globals qq */\nqq.Identify = function(fileOrBlob, log) {\n    \"use strict\";\n\n    function isIdentifiable(magicBytes, questionableBytes) {\n        var identifiable = false,\n            magicBytesEntries = [].concat(magicBytes);\n\n        qq.each(magicBytesEntries, function(idx, magicBytesArrayEntry) {\n            if (questionableBytes.indexOf(magicBytesArrayEntry) === 0) {\n                identifiable = true;\n                return false;\n            }\n        });\n\n        return identifiable;\n    }\n\n    qq.extend(this, {\n        /**\n         * Determines if a Blob can be displayed natively in the current browser.  This is done by reading magic\n         * bytes in the beginning of the file, so this is an asynchronous operation.  Before we attempt to read the\n         * file, we will examine the blob's type attribute to save CPU cycles.\n         *\n         * @returns {qq.Promise} Promise that is fulfilled when identification is complete.\n         * If successful, the MIME string is passed to the success handler.\n         */\n        isPreviewable: function() {\n            var self = this,\n                identifier = new qq.Promise(),\n                previewable = false,\n                name = fileOrBlob.name === undefined ? \"blob\" : fileOrBlob.name;\n\n            log(qq.format(\"Attempting to determine if {} can be rendered in this browser\", name));\n\n            log(\"First pass: check type attribute of blob object.\");\n\n            if (this.isPreviewableSync()) {\n                log(\"Second pass: check for magic bytes in file header.\");\n\n                qq.readBlobToHex(fileOrBlob, 0, 4).then(function(hex) {\n                    qq.each(self.PREVIEWABLE_MIME_TYPES, function(mime, bytes) {\n                        if (isIdentifiable(bytes, hex)) {\n                            // Safari is the only supported browser that can deal with TIFFs natively,\n                            // so, if this is a TIFF and the UA isn't Safari, declare this file \"non-previewable\".\n                            if (mime !== \"image/tiff\" || qq.supportedFeatures.tiffPreviews) {\n                                previewable = true;\n                                identifier.success(mime);\n                            }\n\n                            return false;\n                        }\n                    });\n\n                    log(qq.format(\"'{}' is {} able to be rendered in this browser\", name, previewable ? \"\" : \"NOT\"));\n\n                    if (!previewable) {\n                        identifier.failure();\n                    }\n                },\n                function() {\n                    log(\"Error reading file w/ name '\" + name + \"'.  Not able to be rendered in this browser.\");\n                    identifier.failure();\n                });\n            }\n            else {\n                identifier.failure();\n            }\n\n            return identifier;\n        },\n\n        /**\n         * Determines if a Blob can be displayed natively in the current browser.  This is done by checking the\n         * blob's type attribute.  This is a synchronous operation, useful for situations where an asynchronous operation\n         * would be challenging to support.  Note that the blob's type property is not as accurate as reading the\n         * file's magic bytes.\n         *\n         * @returns {Boolean} true if the blob can be rendered in the current browser\n         */\n        isPreviewableSync: function() {\n            var fileMime = fileOrBlob.type,\n                // Assumption: This will only ever be executed in browsers that support `Object.keys`.\n                isRecognizedImage = qq.indexOf(Object.keys(this.PREVIEWABLE_MIME_TYPES), fileMime) >= 0,\n                previewable = false,\n                name = fileOrBlob.name === undefined ? \"blob\" : fileOrBlob.name;\n\n            if (isRecognizedImage) {\n                if (fileMime === \"image/tiff\") {\n                    previewable = qq.supportedFeatures.tiffPreviews;\n                }\n                else {\n                    previewable = true;\n                }\n            }\n\n            !previewable && log(name + \" is not previewable in this browser per the blob's type attr\");\n\n            return previewable;\n        }\n    });\n};\n\nqq.Identify.prototype.PREVIEWABLE_MIME_TYPES = {\n    \"image/jpeg\": \"ffd8ff\",\n    \"image/gif\": \"474946\",\n    \"image/png\": \"89504e\",\n    \"image/bmp\": \"424d\",\n    \"image/tiff\": [\"49492a00\", \"4d4d002a\"]\n};\n",
    "/*globals qq*/\n/**\n * Attempts to validate an image, wherever possible.\n *\n * @param blob File or Blob representing a user-selecting image.\n * @param log Uses this to post log messages to the console.\n * @constructor\n */\nqq.ImageValidation = function(blob, log) {\n    \"use strict\";\n\n    /**\n     * @param limits Object with possible image-related limits to enforce.\n     * @returns {boolean} true if at least one of the limits has a non-zero value\n     */\n    function hasNonZeroLimits(limits) {\n        var atLeastOne = false;\n\n        qq.each(limits, function(limit, value) {\n            if (value > 0) {\n                atLeastOne = true;\n                return false;\n            }\n        });\n\n        return atLeastOne;\n    }\n\n    /**\n     * @returns {qq.Promise} The promise is a failure if we can't obtain the width & height.\n     * Otherwise, `success` is called on the returned promise with an object containing\n     * `width` and `height` properties.\n     */\n    function getWidthHeight() {\n        var sizeDetermination = new qq.Promise();\n\n        new qq.Identify(blob, log).isPreviewable().then(function() {\n            var image = new Image(),\n                url = window.URL && window.URL.createObjectURL ? window.URL :\n                      window.webkitURL && window.webkitURL.createObjectURL ? window.webkitURL :\n                      null;\n\n            if (url) {\n                image.onerror = function() {\n                    log(\"Cannot determine dimensions for image.  May be too large.\", \"error\");\n                    sizeDetermination.failure();\n                };\n\n                image.onload = function() {\n                    sizeDetermination.success({\n                        width: this.width,\n                        height: this.height\n                    });\n                };\n\n                image.src = url.createObjectURL(blob);\n            }\n            else {\n                log(\"No createObjectURL function available to generate image URL!\", \"error\");\n                sizeDetermination.failure();\n            }\n        }, sizeDetermination.failure);\n\n        return sizeDetermination;\n    }\n\n    /**\n     *\n     * @param limits Object with possible image-related limits to enforce.\n     * @param dimensions Object containing `width` & `height` properties for the image to test.\n     * @returns {String || undefined} The name of the failing limit.  Undefined if no failing limits.\n     */\n    function getFailingLimit(limits, dimensions) {\n        var failingLimit;\n\n        qq.each(limits, function(limitName, limitValue) {\n            if (limitValue > 0) {\n                var limitMatcher = /(max|min)(Width|Height)/.exec(limitName),\n                    dimensionPropName = limitMatcher[2].charAt(0).toLowerCase() + limitMatcher[2].slice(1),\n                    actualValue = dimensions[dimensionPropName];\n\n                /*jshint -W015*/\n                switch (limitMatcher[1]) {\n                    case \"min\":\n                        if (actualValue < limitValue) {\n                            failingLimit = limitName;\n                            return false;\n                        }\n                        break;\n                    case \"max\":\n                        if (actualValue > limitValue) {\n                            failingLimit = limitName;\n                            return false;\n                        }\n                        break;\n                }\n            }\n        });\n\n        return failingLimit;\n    }\n\n    /**\n     * Validate the associated blob.\n     *\n     * @param limits\n     * @returns {qq.Promise} `success` is called on the promise is the image is valid or\n     * if the blob is not an image, or if the image is not verifiable.\n     * Otherwise, `failure` with the name of the failing limit.\n     */\n    this.validate = function(limits) {\n        var validationEffort = new qq.Promise();\n\n        log(\"Attempting to validate image.\");\n\n        if (hasNonZeroLimits(limits)) {\n            getWidthHeight().then(function(dimensions) {\n                var failingLimit = getFailingLimit(limits, dimensions);\n\n                if (failingLimit) {\n                    validationEffort.failure(failingLimit);\n                }\n                else {\n                    validationEffort.success();\n                }\n            }, validationEffort.success);\n        }\n        else {\n            validationEffort.success();\n        }\n\n        return validationEffort;\n    };\n};\n",
    "/* globals qq */\n/**\n * Module used to control populating the initial list of files.\n *\n * @constructor\n */\nqq.Session = function(spec) {\n    \"use strict\";\n\n    var options = {\n        endpoint: null,\n        params: {},\n        customHeaders: {},\n        cors: {},\n        addFileRecord: function(sessionData) {},\n        log: function(message, level) {}\n    };\n\n    qq.extend(options, spec, true);\n\n    function isJsonResponseValid(response) {\n        if (qq.isArray(response)) {\n            return true;\n        }\n\n        options.log(\"Session response is not an array.\", \"error\");\n    }\n\n    function handleFileItems(fileItems, success, xhrOrXdr, promise) {\n        var someItemsIgnored = false;\n\n        success = success && isJsonResponseValid(fileItems);\n\n        if (success) {\n            qq.each(fileItems, function(idx, fileItem) {\n                /* jshint eqnull:true */\n                if (fileItem.uuid == null) {\n                    someItemsIgnored = true;\n                    options.log(qq.format(\"Session response item {} did not include a valid UUID - ignoring.\", idx), \"error\");\n                }\n                else if (fileItem.name == null) {\n                    someItemsIgnored = true;\n                    options.log(qq.format(\"Session response item {} did not include a valid name - ignoring.\", idx), \"error\");\n                }\n                else {\n                    try {\n                        options.addFileRecord(fileItem);\n                        return true;\n                    }\n                    catch (err) {\n                        someItemsIgnored = true;\n                        options.log(err.message, \"error\");\n                    }\n                }\n\n                return false;\n            });\n        }\n\n        promise[success && !someItemsIgnored ? \"success\" : \"failure\"](fileItems, xhrOrXdr);\n    }\n\n    // Initiate a call to the server that will be used to populate the initial file list.\n    // Returns a `qq.Promise`.\n    this.refresh = function() {\n        /*jshint indent:false */\n        var refreshEffort = new qq.Promise(),\n            refreshCompleteCallback = function(response, success, xhrOrXdr) {\n                handleFileItems(response, success, xhrOrXdr, refreshEffort);\n            },\n            requesterOptions = qq.extend({}, options),\n            requester = new qq.SessionAjaxRequester(\n                qq.extend(requesterOptions, {onComplete: refreshCompleteCallback})\n            );\n\n        requester.queryServer();\n\n        return refreshEffort;\n    };\n};\n",
    "/*globals qq, XMLHttpRequest*/\n/**\n * Thin module used to send GET requests to the server, expecting information about session\n * data used to initialize an uploader instance.\n *\n * @param spec Various options used to influence the associated request.\n * @constructor\n */\nqq.SessionAjaxRequester = function(spec) {\n    \"use strict\";\n\n    var requester,\n        options = {\n            endpoint: null,\n            customHeaders: {},\n            params: {},\n            cors: {\n                expected: false,\n                sendCredentials: false\n            },\n            onComplete: function(response, success, xhrOrXdr) {},\n            log: function(str, level) {}\n        };\n\n    qq.extend(options, spec);\n\n    function onComplete(id, xhrOrXdr, isError) {\n        var response = null;\n\n        /* jshint eqnull:true */\n        if (xhrOrXdr.responseText != null) {\n            try {\n                response = qq.parseJson(xhrOrXdr.responseText);\n            }\n            catch (err) {\n                options.log(\"Problem parsing session response: \" + err.message, \"error\");\n                isError = true;\n            }\n        }\n\n        options.onComplete(response, !isError, xhrOrXdr);\n    }\n\n    requester = qq.extend(this, new qq.AjaxRequester({\n        acceptHeader: \"application/json\",\n        validMethods: [\"GET\"],\n        method: \"GET\",\n        endpointStore: {\n            get: function() {\n                return options.endpoint;\n            }\n        },\n        customHeaders: options.customHeaders,\n        log: options.log,\n        onComplete: onComplete,\n        cors: options.cors\n    }));\n\n    qq.extend(this, {\n        queryServer: function() {\n            var params = qq.extend({}, options.params);\n\n            options.log(\"Session query request.\");\n\n            requester.initTransport(\"sessionRefresh\")\n                .withParams(params)\n                .withCacheBuster()\n                .send();\n        }\n    });\n};\n",
    "/* globals qq, ExifRestorer */\n/**\n * Controls generation of scaled images based on a reference image encapsulated in a `File` or `Blob`.\n * Scaled images are generated and converted to blobs on-demand.\n * Multiple scaled images per reference image with varying sizes and other properties are supported.\n *\n * @param spec Information about the scaled images to generate.\n * @param log Logger instance\n * @constructor\n */\nqq.Scaler = function(spec, log) {\n    \"use strict\";\n\n    var self = this,\n        customResizeFunction = spec.customResizer,\n        includeOriginal = spec.sendOriginal,\n        orient = spec.orient,\n        defaultType = spec.defaultType,\n        defaultQuality = spec.defaultQuality / 100,\n        failedToScaleText = spec.failureText,\n        includeExif = spec.includeExif,\n        sizes = this._getSortedSizes(spec.sizes);\n\n    // Revealed API for instances of this module\n    qq.extend(this, {\n        // If no targeted sizes have been declared or if this browser doesn't support\n        // client-side image preview generation, there is no scaling to do.\n        enabled: qq.supportedFeatures.scaling && sizes.length > 0,\n\n        getFileRecords: function(originalFileUuid, originalFileName, originalBlobOrBlobData) {\n            var self = this,\n                records = [],\n                originalBlob = originalBlobOrBlobData.blob ? originalBlobOrBlobData.blob : originalBlobOrBlobData,\n                identifier = new qq.Identify(originalBlob, log);\n\n            // If the reference file cannot be rendered natively, we can't create scaled versions.\n            if (identifier.isPreviewableSync()) {\n                // Create records for each scaled version & add them to the records array, smallest first.\n                qq.each(sizes, function(idx, sizeRecord) {\n                    var outputType = self._determineOutputType({\n                        defaultType: defaultType,\n                        requestedType: sizeRecord.type,\n                        refType: originalBlob.type\n                    });\n\n                    records.push({\n                        uuid: qq.getUniqueId(),\n                        name: self._getName(originalFileName, {\n                            name: sizeRecord.name,\n                            type: outputType,\n                            refType: originalBlob.type\n                        }),\n                        blob: new qq.BlobProxy(originalBlob,\n                        qq.bind(self._generateScaledImage, self, {\n                            customResizeFunction: customResizeFunction,\n                            maxSize: sizeRecord.maxSize,\n                            orient: orient,\n                            type: outputType,\n                            quality: defaultQuality,\n                            failedText: failedToScaleText,\n                            includeExif: includeExif,\n                            log: log\n                        }))\n                    });\n                });\n\n                records.push({\n                    uuid: originalFileUuid,\n                    name: originalFileName,\n                    size: originalBlob.size,\n                    blob: includeOriginal ? originalBlob : null\n                });\n            }\n            else {\n                records.push({\n                    uuid: originalFileUuid,\n                    name: originalFileName,\n                    size: originalBlob.size,\n                    blob: originalBlob\n                });\n            }\n\n            return records;\n        },\n\n        handleNewFile: function(file, name, uuid, size, fileList, batchId, uuidParamName, api) {\n            var self = this,\n                buttonId = file.qqButtonId || (file.blob && file.blob.qqButtonId),\n                scaledIds = [],\n                originalId = null,\n                addFileToHandler = api.addFileToHandler,\n                uploadData = api.uploadData,\n                paramsStore = api.paramsStore,\n                proxyGroupId = qq.getUniqueId();\n\n            qq.each(self.getFileRecords(uuid, name, file), function(idx, record) {\n                var blobSize = record.size,\n                    id;\n\n                if (record.blob instanceof qq.BlobProxy) {\n                    blobSize = -1;\n                }\n\n                id = uploadData.addFile({\n                    uuid: record.uuid,\n                    name: record.name,\n                    size: blobSize,\n                    batchId: batchId,\n                    proxyGroupId: proxyGroupId\n                });\n\n                if (record.blob instanceof qq.BlobProxy) {\n                    scaledIds.push(id);\n                }\n                else {\n                    originalId = id;\n                }\n\n                if (record.blob) {\n                    addFileToHandler(id, record.blob);\n                    fileList.push({id: id, file: record.blob});\n                }\n                else {\n                    uploadData.setStatus(id, qq.status.REJECTED);\n                }\n            });\n\n            // If we are potentially uploading an original file and some scaled versions,\n            // ensure the scaled versions include reference's to the parent's UUID and size\n            // in their associated upload requests.\n            if (originalId !== null) {\n                qq.each(scaledIds, function(idx, scaledId) {\n                    var params = {\n                        qqparentuuid: uploadData.retrieve({id: originalId}).uuid,\n                        qqparentsize: uploadData.retrieve({id: originalId}).size\n                    };\n\n                    // Make sure the UUID for each scaled image is sent with the upload request,\n                    // to be consistent (since we may need to ensure it is sent for the original file as well).\n                    params[uuidParamName] = uploadData.retrieve({id: scaledId}).uuid;\n\n                    uploadData.setParentId(scaledId, originalId);\n                    paramsStore.addReadOnly(scaledId, params);\n                });\n\n                // If any scaled images are tied to this parent image, be SURE we send its UUID as an upload request\n                // parameter as well.\n                if (scaledIds.length) {\n                    (function() {\n                        var param = {};\n                        param[uuidParamName] = uploadData.retrieve({id: originalId}).uuid;\n                        paramsStore.addReadOnly(originalId, param);\n                    }());\n                }\n            }\n        }\n    });\n};\n\nqq.extend(qq.Scaler.prototype, {\n    scaleImage: function(id, specs, api) {\n        \"use strict\";\n\n        if (!qq.supportedFeatures.scaling) {\n            throw new qq.Error(\"Scaling is not supported in this browser!\");\n        }\n\n        var scalingEffort = new qq.Promise(),\n            log = api.log,\n            file = api.getFile(id),\n            uploadData = api.uploadData.retrieve({id: id}),\n            name = uploadData && uploadData.name,\n            uuid = uploadData && uploadData.uuid,\n            scalingOptions = {\n                customResizer: specs.customResizer,\n                sendOriginal: false,\n                orient: specs.orient,\n                defaultType: specs.type || null,\n                defaultQuality: specs.quality,\n                failedToScaleText: \"Unable to scale\",\n                sizes: [{name: \"\", maxSize: specs.maxSize}]\n            },\n            scaler = new qq.Scaler(scalingOptions, log);\n\n        if (!qq.Scaler || !qq.supportedFeatures.imagePreviews || !file) {\n            scalingEffort.failure();\n\n            log(\"Could not generate requested scaled image for \" + id + \".  \" +\n                \"Scaling is either not possible in this browser, or the file could not be located.\", \"error\");\n        }\n        else {\n            (qq.bind(function() {\n                // Assumption: There will never be more than one record\n                var record = scaler.getFileRecords(uuid, name, file)[0];\n\n                if (record && record.blob instanceof qq.BlobProxy) {\n                    record.blob.create().then(scalingEffort.success, scalingEffort.failure);\n                }\n                else {\n                    log(id + \" is not a scalable image!\", \"error\");\n                    scalingEffort.failure();\n                }\n            }, this)());\n        }\n\n        return scalingEffort;\n    },\n\n    // NOTE: We cannot reliably determine at this time if the UA supports a specific MIME type for the target format.\n    // image/jpeg and image/png are the only safe choices at this time.\n    _determineOutputType: function(spec) {\n        \"use strict\";\n\n        var requestedType = spec.requestedType,\n            defaultType = spec.defaultType,\n            referenceType = spec.refType;\n\n        // If a default type and requested type have not been specified, this should be a\n        // JPEG if the original type is a JPEG, otherwise, a PNG.\n        if (!defaultType && !requestedType) {\n            if (referenceType !== \"image/jpeg\") {\n                return \"image/png\";\n            }\n            return referenceType;\n        }\n\n        // A specified default type is used when a requested type is not specified.\n        if (!requestedType) {\n            return defaultType;\n        }\n\n        // If requested type is specified, use it, as long as this recognized type is supported by the current UA\n        if (qq.indexOf(Object.keys(qq.Identify.prototype.PREVIEWABLE_MIME_TYPES), requestedType) >= 0) {\n            if (requestedType === \"image/tiff\") {\n                return qq.supportedFeatures.tiffPreviews ? requestedType : defaultType;\n            }\n\n            return requestedType;\n        }\n\n        return defaultType;\n    },\n\n    // Get a file name for a generated scaled file record, based on the provided scaled image description\n    _getName: function(originalName, scaledVersionProperties) {\n        \"use strict\";\n\n        var startOfExt = originalName.lastIndexOf(\".\"),\n            versionType = scaledVersionProperties.type || \"image/png\",\n            referenceType = scaledVersionProperties.refType,\n            scaledName = \"\",\n            scaledExt = qq.getExtension(originalName),\n            nameAppendage = \"\";\n\n        if (scaledVersionProperties.name && scaledVersionProperties.name.trim().length) {\n            nameAppendage = \" (\" + scaledVersionProperties.name + \")\";\n        }\n\n        if (startOfExt >= 0) {\n            scaledName = originalName.substr(0, startOfExt);\n\n            if (referenceType !== versionType) {\n                scaledExt = versionType.split(\"/\")[1];\n            }\n\n            scaledName += nameAppendage + \".\" + scaledExt;\n        }\n        else {\n            scaledName = originalName + nameAppendage;\n        }\n\n        return scaledName;\n    },\n\n    // We want the smallest scaled file to be uploaded first\n    _getSortedSizes: function(sizes) {\n        \"use strict\";\n\n        sizes = qq.extend([], sizes);\n\n        return sizes.sort(function(a, b) {\n            if (a.maxSize > b.maxSize) {\n                return 1;\n            }\n            if (a.maxSize < b.maxSize) {\n                return -1;\n            }\n            return 0;\n        });\n    },\n\n    _generateScaledImage: function(spec, sourceFile) {\n        \"use strict\";\n\n        var self = this,\n            customResizeFunction = spec.customResizeFunction,\n            log = spec.log,\n            maxSize = spec.maxSize,\n            orient = spec.orient,\n            type = spec.type,\n            quality = spec.quality,\n            failedText = spec.failedText,\n            includeExif = spec.includeExif && sourceFile.type === \"image/jpeg\" && type === \"image/jpeg\",\n            scalingEffort = new qq.Promise(),\n            imageGenerator = new qq.ImageGenerator(log),\n            canvas = document.createElement(\"canvas\");\n\n        log(\"Attempting to generate scaled version for \" + sourceFile.name);\n\n        imageGenerator.generate(sourceFile, canvas, {maxSize: maxSize, orient: orient, customResizeFunction: customResizeFunction}).then(function() {\n            var scaledImageDataUri = canvas.toDataURL(type, quality),\n                signalSuccess = function() {\n                    log(\"Success generating scaled version for \" + sourceFile.name);\n                    var blob = qq.dataUriToBlob(scaledImageDataUri);\n                    scalingEffort.success(blob);\n                };\n\n            if (includeExif) {\n                self._insertExifHeader(sourceFile, scaledImageDataUri, log).then(function(scaledImageDataUriWithExif) {\n                    scaledImageDataUri = scaledImageDataUriWithExif;\n                    signalSuccess();\n                },\n                function() {\n                    log(\"Problem inserting EXIF header into scaled image.  Using scaled image w/out EXIF data.\", \"error\");\n                    signalSuccess();\n                });\n            }\n            else {\n                signalSuccess();\n            }\n        }, function() {\n            log(\"Failed attempt to generate scaled version for \" + sourceFile.name, \"error\");\n            scalingEffort.failure(failedText);\n        });\n\n        return scalingEffort;\n    },\n\n    // Attempt to insert the original image's EXIF header into a scaled version.\n    _insertExifHeader: function(originalImage, scaledImageDataUri, log) {\n        \"use strict\";\n\n        var reader = new FileReader(),\n            insertionEffort = new qq.Promise(),\n            originalImageDataUri = \"\";\n\n        reader.onload = function() {\n            originalImageDataUri = reader.result;\n            insertionEffort.success(qq.ExifRestorer.restore(originalImageDataUri, scaledImageDataUri));\n        };\n\n        reader.onerror = function() {\n            log(\"Problem reading \" + originalImage.name + \" during attempt to transfer EXIF data to scaled version.\", \"error\");\n            insertionEffort.failure();\n        };\n\n        reader.readAsDataURL(originalImage);\n\n        return insertionEffort;\n    },\n\n    _dataUriToBlob: function(dataUri) {\n        \"use strict\";\n\n        var byteString, mimeString, arrayBuffer, intArray;\n\n        // convert base64 to raw binary data held in a string\n        if (dataUri.split(\",\")[0].indexOf(\"base64\") >= 0) {\n            byteString = atob(dataUri.split(\",\")[1]);\n        }\n        else {\n            byteString = decodeURI(dataUri.split(\",\")[1]);\n        }\n\n        // extract the MIME\n        mimeString = dataUri.split(\",\")[0]\n            .split(\":\")[1]\n            .split(\";\")[0];\n\n        // write the bytes of the binary string to an ArrayBuffer\n        arrayBuffer = new ArrayBuffer(byteString.length);\n        intArray = new Uint8Array(arrayBuffer);\n        qq.each(byteString, function(idx, character) {\n            intArray[idx] = character.charCodeAt(0);\n        });\n\n        return this._createBlob(arrayBuffer, mimeString);\n    },\n\n    _createBlob: function(data, mime) {\n        \"use strict\";\n\n        var BlobBuilder = window.BlobBuilder ||\n                window.WebKitBlobBuilder ||\n                window.MozBlobBuilder ||\n                window.MSBlobBuilder,\n            blobBuilder = BlobBuilder && new BlobBuilder();\n\n        if (blobBuilder) {\n            blobBuilder.append(data);\n            return blobBuilder.getBlob(mime);\n        }\n        else {\n            return new Blob([data], {type: mime});\n        }\n    }\n});\n",
    "//Based on MinifyJpeg\n//http://elicon.blog57.fc2.com/blog-entry-206.html\n\nqq.ExifRestorer = (function()\n{\n   \n\tvar ExifRestorer = {};\n\t \n    ExifRestorer.KEY_STR = \"ABCDEFGHIJKLMNOP\" +\n                         \"QRSTUVWXYZabcdef\" +\n                         \"ghijklmnopqrstuv\" +\n                         \"wxyz0123456789+/\" +\n                         \"=\";\n\n    ExifRestorer.encode64 = function(input)\n    {\n        var output = \"\",\n            chr1, chr2, chr3 = \"\",\n            enc1, enc2, enc3, enc4 = \"\",\n            i = 0;\n\n        do {\n            chr1 = input[i++];\n            chr2 = input[i++];\n            chr3 = input[i++];\n\n            enc1 = chr1 >> 2;\n            enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);\n            enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);\n            enc4 = chr3 & 63;\n\n            if (isNaN(chr2)) {\n               enc3 = enc4 = 64;\n            } else if (isNaN(chr3)) {\n               enc4 = 64;\n            }\n\n            output = output +\n               this.KEY_STR.charAt(enc1) +\n               this.KEY_STR.charAt(enc2) +\n               this.KEY_STR.charAt(enc3) +\n               this.KEY_STR.charAt(enc4);\n            chr1 = chr2 = chr3 = \"\";\n            enc1 = enc2 = enc3 = enc4 = \"\";\n        } while (i < input.length);\n\n        return output;\n    };\n    \n    ExifRestorer.restore = function(origFileBase64, resizedFileBase64)\n    {\n        var expectedBase64Header = \"data:image/jpeg;base64,\";\n\n        if (!origFileBase64.match(expectedBase64Header))\n        {\n        \treturn resizedFileBase64;\n        }       \n        \n        var rawImage = this.decode64(origFileBase64.replace(expectedBase64Header, \"\"));\n        var segments = this.slice2Segments(rawImage);\n                \n        var image = this.exifManipulation(resizedFileBase64, segments);\n        \n        return expectedBase64Header + this.encode64(image);\n        \n    };\n\n\n    ExifRestorer.exifManipulation = function(resizedFileBase64, segments)\n    {\n            var exifArray = this.getExifArray(segments),\n                newImageArray = this.insertExif(resizedFileBase64, exifArray),\n                aBuffer = new Uint8Array(newImageArray);\n\n            return aBuffer;\n    };\n\n\n    ExifRestorer.getExifArray = function(segments)\n    {\n            var seg;\n            for (var x = 0; x < segments.length; x++)\n            {\n                seg = segments[x];\n                if (seg[0] == 255 & seg[1] == 225) //(ff e1)\n                {\n                    return seg;\n                }\n            }\n            return [];\n    };\n\n\n    ExifRestorer.insertExif = function(resizedFileBase64, exifArray)\n    {\n            var imageData = resizedFileBase64.replace(\"data:image/jpeg;base64,\", \"\"),\n                buf = this.decode64(imageData),\n                separatePoint = buf.indexOf(255,3),\n                mae = buf.slice(0, separatePoint),\n                ato = buf.slice(separatePoint),\n                array = mae;\n\n            array = array.concat(exifArray);\n            array = array.concat(ato);\n           return array;\n    };\n\n\n    \n    ExifRestorer.slice2Segments = function(rawImageArray)\n    {\n        var head = 0,\n            segments = [];\n\n        while (1)\n        {\n            if (rawImageArray[head] == 255 & rawImageArray[head + 1] == 218){break;}\n            if (rawImageArray[head] == 255 & rawImageArray[head + 1] == 216)\n            {\n                head += 2;\n            }\n            else\n            {\n                var length = rawImageArray[head + 2] * 256 + rawImageArray[head + 3],\n                    endPoint = head + length + 2,\n                    seg = rawImageArray.slice(head, endPoint);\n                segments.push(seg);\n                head = endPoint;\n            }\n            if (head > rawImageArray.length){break;}\n        }\n\n        return segments;\n    };\n\n\n    \n    ExifRestorer.decode64 = function(input) \n    {\n        var output = \"\",\n            chr1, chr2, chr3 = \"\",\n            enc1, enc2, enc3, enc4 = \"\",\n            i = 0,\n            buf = [];\n\n        // remove all characters that are not A-Z, a-z, 0-9, +, /, or =\n        var base64test = /[^A-Za-z0-9\\+\\/\\=]/g;\n        if (base64test.exec(input)) {\n            throw new Error(\"There were invalid base64 characters in the input text.  \" +\n                \"Valid base64 characters are A-Z, a-z, 0-9, '+', '/',and '='\");\n        }\n        input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, \"\");\n\n        do {\n            enc1 = this.KEY_STR.indexOf(input.charAt(i++));\n            enc2 = this.KEY_STR.indexOf(input.charAt(i++));\n            enc3 = this.KEY_STR.indexOf(input.charAt(i++));\n            enc4 = this.KEY_STR.indexOf(input.charAt(i++));\n\n            chr1 = (enc1 << 2) | (enc2 >> 4);\n            chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\n            chr3 = ((enc3 & 3) << 6) | enc4;\n\n            buf.push(chr1);\n\n            if (enc3 != 64) {\n               buf.push(chr2);\n            }\n            if (enc4 != 64) {\n               buf.push(chr3);\n            }\n\n            chr1 = chr2 = chr3 = \"\";\n            enc1 = enc2 = enc3 = enc4 = \"\";\n\n        } while (i < input.length);\n\n        return buf;\n    };\n\n    \n    return ExifRestorer;\n})();\n",
    "/* globals qq */\n/**\n * Keeps a running tally of total upload progress for a batch of files.\n *\n * @param callback Invoked when total progress changes, passing calculated total loaded & total size values.\n * @param getSize Function that returns the size of a file given its ID\n * @constructor\n */\nqq.TotalProgress = function(callback, getSize) {\n    \"use strict\";\n\n    var perFileProgress = {},\n        totalLoaded = 0,\n        totalSize = 0,\n\n        lastLoadedSent = -1,\n        lastTotalSent = -1,\n        callbackProxy = function(loaded, total) {\n            if (loaded !== lastLoadedSent || total !== lastTotalSent) {\n                callback(loaded, total);\n            }\n\n            lastLoadedSent = loaded;\n            lastTotalSent = total;\n        },\n\n        /**\n         * @param failed Array of file IDs that have failed\n         * @param retryable Array of file IDs that are retryable\n         * @returns true if none of the failed files are eligible for retry\n         */\n        noRetryableFiles = function(failed, retryable) {\n            var none = true;\n\n            qq.each(failed, function(idx, failedId) {\n                if (qq.indexOf(retryable, failedId) >= 0) {\n                    none = false;\n                    return false;\n                }\n            });\n\n            return none;\n        },\n\n        onCancel = function(id) {\n            updateTotalProgress(id, -1, -1);\n            delete perFileProgress[id];\n        },\n\n        onAllComplete = function(successful, failed, retryable) {\n            if (failed.length === 0 || noRetryableFiles(failed, retryable)) {\n                callbackProxy(totalSize, totalSize);\n                this.reset();\n            }\n        },\n\n        onNew = function(id) {\n            var size = getSize(id);\n\n            // We might not know the size yet, such as for blob proxies\n            if (size > 0) {\n                updateTotalProgress(id, 0, size);\n                perFileProgress[id] = {loaded: 0, total: size};\n            }\n        },\n\n        /**\n         * Invokes the callback with the current total progress of all files in the batch.  Called whenever it may\n         * be appropriate to re-calculate and disseminate this data.\n         *\n         * @param id ID of a file that has changed in some important way\n         * @param newLoaded New loaded value for this file.  -1 if this value should no longer be part of calculations\n         * @param newTotal New total size of the file.  -1 if this value should no longer be part of calculations\n         */\n        updateTotalProgress = function(id, newLoaded, newTotal) {\n            var oldLoaded = perFileProgress[id] ? perFileProgress[id].loaded : 0,\n                oldTotal = perFileProgress[id] ? perFileProgress[id].total : 0;\n\n            if (newLoaded === -1 && newTotal === -1) {\n                totalLoaded -= oldLoaded;\n                totalSize -= oldTotal;\n            }\n            else {\n                if (newLoaded) {\n                    totalLoaded += newLoaded - oldLoaded;\n                }\n                if (newTotal) {\n                    totalSize += newTotal - oldTotal;\n                }\n            }\n\n            callbackProxy(totalLoaded, totalSize);\n        };\n\n    qq.extend(this, {\n        // Called when a batch of files has completed uploading.\n        onAllComplete: onAllComplete,\n\n        // Called when the status of a file has changed.\n        onStatusChange: function(id, oldStatus, newStatus) {\n            if (newStatus === qq.status.CANCELED || newStatus === qq.status.REJECTED) {\n                onCancel(id);\n            }\n            else if (newStatus === qq.status.SUBMITTING) {\n                onNew(id);\n            }\n        },\n\n        // Called whenever the upload progress of an individual file has changed.\n        onIndividualProgress: function(id, loaded, total) {\n            updateTotalProgress(id, loaded, total);\n            perFileProgress[id] = {loaded: loaded, total: total};\n        },\n\n        // Called whenever the total size of a file has changed, such as when the size of a generated blob is known.\n        onNewSize: function(id) {\n            onNew(id);\n        },\n\n        reset: function() {\n            perFileProgress = {};\n            totalLoaded = 0;\n            totalSize = 0;\n        }\n    });\n};\n",
    "/*globals qq*/\nqq.PasteSupport = function(o) {\n    \"use strict\";\n\n    var options, detachPasteHandler;\n\n    options = {\n        targetElement: null,\n        callbacks: {\n            log: function(message, level) {},\n            pasteReceived: function(blob) {}\n        }\n    };\n\n    function isImage(item) {\n        return item.type &&\n            item.type.indexOf(\"image/\") === 0;\n    }\n\n    function registerPasteHandler() {\n        detachPasteHandler = qq(options.targetElement).attach(\"paste\", function(event) {\n            var clipboardData = event.clipboardData;\n\n            if (clipboardData) {\n                qq.each(clipboardData.items, function(idx, item) {\n                    if (isImage(item)) {\n                        var blob = item.getAsFile();\n                        options.callbacks.pasteReceived(blob);\n                    }\n                });\n            }\n        });\n    }\n\n    function unregisterPasteHandler() {\n        if (detachPasteHandler) {\n            detachPasteHandler();\n        }\n    }\n\n    qq.extend(options, o);\n    registerPasteHandler();\n\n    qq.extend(this, {\n        reset: function() {\n            unregisterPasteHandler();\n        }\n    });\n};\n",
    "/* globals qq */\n/**\n * Module that handles support for existing forms.\n *\n * @param options Options passed from the integrator-supplied options related to form support.\n * @param startUpload Callback to invoke when files \"stored\" should be uploaded.\n * @param log Proxy for the logger\n * @constructor\n */\nqq.FormSupport = function(options, startUpload, log) {\n    \"use strict\";\n    var self  = this,\n        interceptSubmit = options.interceptSubmit,\n        formEl = options.element,\n        autoUpload = options.autoUpload;\n\n    // Available on the public API associated with this module.\n    qq.extend(this, {\n        // To be used by the caller to determine if the endpoint will be determined by some processing\n        // that occurs in this module, such as if the form has an action attribute.\n        // Ignore if `attachToForm === false`.\n        newEndpoint: null,\n\n        // To be used by the caller to determine if auto uploading should be allowed.\n        // Ignore if `attachToForm === false`.\n        newAutoUpload: autoUpload,\n\n        // true if a form was detected and is being tracked by this module\n        attachedToForm: false,\n\n        // Returns an object with names and values for all valid form elements associated with the attached form.\n        getFormInputsAsObject: function() {\n            /* jshint eqnull:true */\n            if (formEl == null) {\n                return null;\n            }\n\n            return self._form2Obj(formEl);\n        }\n    });\n\n    // If the form contains an action attribute, this should be the new upload endpoint.\n    function determineNewEndpoint(formEl) {\n        if (formEl.getAttribute(\"action\")) {\n            self.newEndpoint = formEl.getAttribute(\"action\");\n        }\n    }\n\n    // Return true only if the form is valid, or if we cannot make this determination.\n    // If the form is invalid, ensure invalid field(s) are highlighted in the UI.\n    function validateForm(formEl, nativeSubmit) {\n        if (formEl.checkValidity && !formEl.checkValidity()) {\n            log(\"Form did not pass validation checks - will not upload.\", \"error\");\n            nativeSubmit();\n        }\n        else {\n            return true;\n        }\n    }\n\n    // Intercept form submit attempts, unless the integrator has told us not to do this.\n    function maybeUploadOnSubmit(formEl) {\n        var nativeSubmit = formEl.submit;\n\n        // Intercept and squelch submit events.\n        qq(formEl).attach(\"submit\", function(event) {\n            event = event || window.event;\n\n            if (event.preventDefault) {\n                event.preventDefault();\n            }\n            else {\n                event.returnValue = false;\n            }\n\n            validateForm(formEl, nativeSubmit) && startUpload();\n        });\n\n        // The form's `submit()` function may be called instead (i.e. via jQuery.submit()).\n        // Intercept that too.\n        formEl.submit = function() {\n            validateForm(formEl, nativeSubmit) && startUpload();\n        };\n    }\n\n    // If the element value passed from the uploader is a string, assume it is an element ID - select it.\n    // The rest of the code in this module depends on this being an HTMLElement.\n    function determineFormEl(formEl) {\n        if (formEl) {\n            if (qq.isString(formEl)) {\n                formEl = document.getElementById(formEl);\n            }\n\n            if (formEl) {\n                log(\"Attaching to form element.\");\n                determineNewEndpoint(formEl);\n                interceptSubmit && maybeUploadOnSubmit(formEl);\n            }\n        }\n\n        return formEl;\n    }\n\n    formEl = determineFormEl(formEl);\n    this.attachedToForm = !!formEl;\n};\n\nqq.extend(qq.FormSupport.prototype, {\n    // Converts all relevant form fields to key/value pairs.  This is meant to mimic the data a browser will\n    // construct from a given form when the form is submitted.\n    _form2Obj: function(form) {\n        \"use strict\";\n        var obj = {},\n            notIrrelevantType = function(type) {\n                var irrelevantTypes = [\n                    \"button\",\n                    \"image\",\n                    \"reset\",\n                    \"submit\"\n                ];\n\n                return qq.indexOf(irrelevantTypes, type.toLowerCase()) < 0;\n            },\n            radioOrCheckbox = function(type) {\n                return qq.indexOf([\"checkbox\", \"radio\"], type.toLowerCase()) >= 0;\n            },\n            ignoreValue = function(el) {\n                if (radioOrCheckbox(el.type) && !el.checked) {\n                    return true;\n                }\n\n                return el.disabled && el.type.toLowerCase() !== \"hidden\";\n            },\n            selectValue = function(select) {\n                var value = null;\n\n                qq.each(qq(select).children(), function(idx, child) {\n                    if (child.tagName.toLowerCase() === \"option\" && child.selected) {\n                        value = child.value;\n                        return false;\n                    }\n                });\n\n                return value;\n            };\n\n        qq.each(form.elements, function(idx, el) {\n            if ((qq.isInput(el, true) || el.tagName.toLowerCase() === \"textarea\") &&\n                notIrrelevantType(el.type) &&\n                !ignoreValue(el)) {\n\n                obj[el.name] = el.value;\n            }\n            else if (el.tagName.toLowerCase() === \"select\" && !ignoreValue(el)) {\n                var value = selectValue(el);\n\n                if (value !== null) {\n                    obj[el.name] = value;\n                }\n            }\n        });\n\n        return obj;\n    }\n});\n",
    "/*globals qq*/\n/**\n * Upload handler used that assumes the current user agent does not have any support for the\n * File API, and, therefore, makes use of iframes and forms to submit the files directly to\n * a generic server.\n *\n * @param options Options passed from the base handler\n * @param proxy Callbacks & methods used to query for or push out data/changes\n */\nqq.traditional = qq.traditional || {};\nqq.traditional.FormUploadHandler = function(options, proxy) {\n    \"use strict\";\n\n    var handler = this,\n        getName = proxy.getName,\n        getUuid = proxy.getUuid,\n        log = proxy.log;\n\n    /**\n     * Returns json object received by iframe from server.\n     */\n    function getIframeContentJson(id, iframe) {\n        /*jshint evil: true*/\n\n        var response, doc, innerHtml;\n\n        //IE may throw an \"access is denied\" error when attempting to access contentDocument on the iframe in some cases\n        try {\n            // iframe.contentWindow.document - for IE<7\n            doc = iframe.contentDocument || iframe.contentWindow.document;\n            innerHtml = doc.body.innerHTML;\n\n            log(\"converting iframe's innerHTML to JSON\");\n            log(\"innerHTML = \" + innerHtml);\n            //plain text response may be wrapped in <pre> tag\n            if (innerHtml && innerHtml.match(/^<pre/i)) {\n                innerHtml = doc.body.firstChild.firstChild.nodeValue;\n            }\n\n            response = handler._parseJsonResponse(innerHtml);\n        }\n        catch (error) {\n            log(\"Error when attempting to parse form upload response (\" + error.message + \")\", \"error\");\n            response = {success: false};\n        }\n\n        return response;\n    }\n\n    /**\n     * Creates form, that will be submitted to iframe\n     */\n    function createForm(id, iframe) {\n        var params = options.paramsStore.get(id),\n            method = options.method.toLowerCase() === \"get\" ? \"GET\" : \"POST\",\n            endpoint = options.endpointStore.get(id),\n            name = getName(id);\n\n        params[options.uuidName] = getUuid(id);\n        params[options.filenameParam] = name;\n\n        return handler._initFormForUpload({\n            method: method,\n            endpoint: endpoint,\n            params: params,\n            paramsInBody: options.paramsInBody,\n            targetName: iframe.name\n        });\n    }\n\n    this.uploadFile = function(id) {\n        var input = handler.getInput(id),\n            iframe = handler._createIframe(id),\n            promise = new qq.Promise(),\n            form;\n\n        form = createForm(id, iframe);\n        form.appendChild(input);\n\n        handler._attachLoadEvent(iframe, function(responseFromMessage) {\n            log(\"iframe loaded\");\n\n            var response = responseFromMessage ? responseFromMessage : getIframeContentJson(id, iframe);\n\n            handler._detachLoadEvent(id);\n\n            //we can't remove an iframe if the iframe doesn't belong to the same domain\n            if (!options.cors.expected) {\n                qq(iframe).remove();\n            }\n\n            if (response.success) {\n                promise.success(response);\n            }\n            else {\n                promise.failure(response);\n            }\n        });\n\n        log(\"Sending upload request for \" + id);\n        form.submit();\n        qq(form).remove();\n\n        return promise;\n    };\n\n    qq.extend(this, new qq.FormUploadHandler({\n        options: {\n            isCors: options.cors.expected,\n            inputName: options.inputName\n        },\n\n        proxy: {\n            onCancel: options.onCancel,\n            getName: getName,\n            getUuid: getUuid,\n            log: log\n        }\n    }));\n};\n",
    "/*globals qq*/\n/**\n * Upload handler used to upload to traditional endpoints.  It depends on File API support, and, therefore,\n * makes use of `XMLHttpRequest` level 2 to upload `File`s and `Blob`s to a generic server.\n *\n * @param spec Options passed from the base handler\n * @param proxy Callbacks & methods used to query for or push out data/changes\n */\nqq.traditional = qq.traditional || {};\nqq.traditional.XhrUploadHandler = function(spec, proxy) {\n    \"use strict\";\n\n    var handler = this,\n        getName = proxy.getName,\n        getSize = proxy.getSize,\n        getUuid = proxy.getUuid,\n        log = proxy.log,\n        multipart = spec.forceMultipart || spec.paramsInBody,\n\n        addChunkingSpecificParams = function(id, params, chunkData) {\n            var size = getSize(id),\n                name = getName(id);\n\n            params[spec.chunking.paramNames.partIndex] = chunkData.part;\n            params[spec.chunking.paramNames.partByteOffset] = chunkData.start;\n            params[spec.chunking.paramNames.chunkSize] = chunkData.size;\n            params[spec.chunking.paramNames.totalParts] = chunkData.count;\n            params[spec.totalFileSizeName] = size;\n\n            /**\n             * When a Blob is sent in a multipart request, the filename value in the content-disposition header is either \"blob\"\n             * or an empty string.  So, we will need to include the actual file name as a param in this case.\n             */\n            if (multipart) {\n                params[spec.filenameParam] = name;\n            }\n        },\n\n        allChunksDoneRequester = new qq.traditional.AllChunksDoneAjaxRequester({\n            cors: spec.cors,\n            endpoint: spec.chunking.success.endpoint,\n            log: log\n        }),\n\n        createReadyStateChangedHandler = function(id, xhr) {\n            var promise = new qq.Promise();\n\n            xhr.onreadystatechange = function() {\n                if (xhr.readyState === 4) {\n                    var result = onUploadOrChunkComplete(id, xhr);\n\n                    if (result.success) {\n                        promise.success(result.response, xhr);\n                    }\n                    else {\n                        promise.failure(result.response, xhr);\n                    }\n                }\n            };\n\n            return promise;\n        },\n\n        getChunksCompleteParams = function(id) {\n            var params = spec.paramsStore.get(id),\n                name = getName(id),\n                size = getSize(id);\n\n            params[spec.uuidName] = getUuid(id);\n            params[spec.filenameParam] = name;\n            params[spec.totalFileSizeName] = size;\n            params[spec.chunking.paramNames.totalParts] = handler._getTotalChunks(id);\n\n            return params;\n        },\n\n        isErrorUploadResponse = function(xhr, response) {\n            return qq.indexOf([200, 201, 202, 203, 204], xhr.status) < 0 ||\n                !response.success ||\n                response.reset;\n        },\n\n        onUploadOrChunkComplete = function(id, xhr) {\n            var response;\n\n            log(\"xhr - server response received for \" + id);\n            log(\"responseText = \" + xhr.responseText);\n\n            response = parseResponse(true, xhr);\n\n            return {\n                success: !isErrorUploadResponse(xhr, response),\n                response: response\n            };\n        },\n\n        // If this is an upload response, we require a JSON payload, otherwise, it is optional.\n        parseResponse = function(upload, xhr) {\n            var response = {};\n\n            try {\n                log(qq.format(\"Received response status {} with body: {}\", xhr.status, xhr.responseText));\n                response = qq.parseJson(xhr.responseText);\n            }\n            catch (error) {\n                upload && log(\"Error when attempting to parse xhr response text (\" + error.message + \")\", \"error\");\n            }\n\n            return response;\n        },\n\n        sendChunksCompleteRequest = function(id) {\n            var promise = new qq.Promise();\n\n            allChunksDoneRequester.complete(\n                    id,\n                    handler._createXhr(id),\n                    getChunksCompleteParams(id),\n                    spec.customHeaders.get(id)\n                )\n                .then(function(xhr) {\n                    promise.success(parseResponse(false, xhr), xhr);\n                }, function(xhr) {\n                    promise.failure(parseResponse(false, xhr), xhr);\n                });\n\n            return promise;\n        },\n\n        setParamsAndGetEntityToSend = function(params, xhr, fileOrBlob, id) {\n            var formData = new FormData(),\n                method = spec.method,\n                endpoint = spec.endpointStore.get(id),\n                name = getName(id),\n                size = getSize(id);\n\n            params[spec.uuidName] = getUuid(id);\n            params[spec.filenameParam] = name;\n\n            if (multipart) {\n                params[spec.totalFileSizeName] = size;\n            }\n\n            //build query string\n            if (!spec.paramsInBody) {\n                if (!multipart) {\n                    params[spec.inputName] = name;\n                }\n                endpoint = qq.obj2url(params, endpoint);\n            }\n\n            xhr.open(method, endpoint, true);\n\n            if (spec.cors.expected && spec.cors.sendCredentials) {\n                xhr.withCredentials = true;\n            }\n\n            if (multipart) {\n                if (spec.paramsInBody) {\n                    qq.obj2FormData(params, formData);\n                }\n\n                formData.append(spec.inputName, fileOrBlob);\n                return formData;\n            }\n\n            return fileOrBlob;\n        },\n\n        setUploadHeaders = function(id, xhr) {\n            var extraHeaders = spec.customHeaders.get(id),\n                fileOrBlob = handler.getFile(id);\n\n            xhr.setRequestHeader(\"Accept\", \"application/json\");\n            xhr.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\n            xhr.setRequestHeader(\"Cache-Control\", \"no-cache\");\n\n            if (!multipart) {\n                xhr.setRequestHeader(\"Content-Type\", \"application/octet-stream\");\n                //NOTE: return mime type in xhr works on chrome 16.0.9 firefox 11.0a2\n                xhr.setRequestHeader(\"X-Mime-Type\", fileOrBlob.type);\n            }\n\n            qq.each(extraHeaders, function(name, val) {\n                xhr.setRequestHeader(name, val);\n            });\n        };\n\n    qq.extend(this, {\n        uploadChunk: function(id, chunkIdx, resuming) {\n            var chunkData = handler._getChunkData(id, chunkIdx),\n                xhr = handler._createXhr(id, chunkIdx),\n                size = getSize(id),\n                promise, toSend, params;\n\n            promise = createReadyStateChangedHandler(id, xhr);\n            handler._registerProgressHandler(id, chunkIdx, chunkData.size);\n            params = spec.paramsStore.get(id);\n            addChunkingSpecificParams(id, params, chunkData);\n\n            if (resuming) {\n                params[spec.resume.paramNames.resuming] = true;\n            }\n\n            toSend = setParamsAndGetEntityToSend(params, xhr, chunkData.blob, id);\n            setUploadHeaders(id, xhr);\n            xhr.send(toSend);\n\n            return promise;\n        },\n\n        uploadFile: function(id) {\n            var fileOrBlob = handler.getFile(id),\n                promise, xhr, params, toSend;\n\n            xhr = handler._createXhr(id);\n            handler._registerProgressHandler(id);\n            promise = createReadyStateChangedHandler(id, xhr);\n            params = spec.paramsStore.get(id);\n            toSend = setParamsAndGetEntityToSend(params, xhr, fileOrBlob, id);\n            setUploadHeaders(id, xhr);\n            xhr.send(toSend);\n\n            return promise;\n        }\n    });\n\n    qq.extend(this, new qq.XhrUploadHandler({\n        options: qq.extend({namespace: \"traditional\"}, spec),\n        proxy: qq.extend({getEndpoint: spec.endpointStore.get}, proxy)\n    }));\n\n    qq.override(this, function(super_) {\n        return {\n            finalizeChunks: function(id) {\n                if (spec.chunking.success.endpoint) {\n                    return sendChunksCompleteRequest(id);\n                }\n                else {\n                    return super_.finalizeChunks(id, qq.bind(parseResponse, this, true));\n                }\n            }\n        };\n    });\n};\n",
    "/*globals qq*/\n/**\n * Ajax requester used to send a POST to a traditional endpoint once all chunks for a specific file have uploaded\n * successfully.\n *\n * @param o Options from the caller - will override the defaults.\n * @constructor\n */\nqq.traditional.AllChunksDoneAjaxRequester = function(o) {\n    \"use strict\";\n\n    var requester,\n        method = \"POST\",\n        options = {\n            cors: {\n                allowXdr: false,\n                expected: false,\n                sendCredentials: false\n            },\n            endpoint: null,\n            log: function(str, level) {}\n        },\n        promises = {},\n        endpointHandler = {\n            get: function(id) {\n                return options.endpoint;\n            }\n        };\n\n    qq.extend(options, o);\n\n    requester = qq.extend(this, new qq.AjaxRequester({\n        acceptHeader: \"application/json\",\n        validMethods: [method],\n        method: method,\n        endpointStore: endpointHandler,\n        allowXRequestedWithAndCacheControl: false,\n        cors: options.cors,\n        log: options.log,\n        onComplete: function(id, xhr, isError) {\n            var promise = promises[id];\n\n            delete promises[id];\n\n            if (isError) {\n                promise.failure(xhr);\n            }\n            else {\n                promise.success(xhr);\n            }\n        }\n    }));\n\n    qq.extend(this, {\n        complete: function(id, xhr, params, headers) {\n            var promise = new qq.Promise();\n\n            options.log(\"Submitting All Chunks Done request for \" + id);\n\n            promises[id] = promise;\n\n            requester.initTransport(id)\n                .withParams(params)\n                .withHeaders(headers)\n                .send(xhr);\n\n            return promise;\n        }\n    });\n};\n",
    "/*globals qq, document, CustomEvent*/\nqq.DragAndDrop = function(o) {\n    \"use strict\";\n\n    var options,\n        HIDE_ZONES_EVENT_NAME = \"qq-hidezones\",\n        HIDE_BEFORE_ENTER_ATTR = \"qq-hide-dropzone\",\n        uploadDropZones = [],\n        droppedFiles = [],\n        disposeSupport = new qq.DisposeSupport();\n\n    options = {\n        dropZoneElements: [],\n        allowMultipleItems: true,\n        classes: {\n            dropActive: null\n        },\n        callbacks: new qq.DragAndDrop.callbacks()\n    };\n\n    qq.extend(options, o, true);\n\n    function uploadDroppedFiles(files, uploadDropZone) {\n        // We need to convert the `FileList` to an actual `Array` to avoid iteration issues\n        var filesAsArray = Array.prototype.slice.call(files);\n\n        options.callbacks.dropLog(\"Grabbed \" + files.length + \" dropped files.\");\n        uploadDropZone.dropDisabled(false);\n        options.callbacks.processingDroppedFilesComplete(filesAsArray, uploadDropZone.getElement());\n    }\n\n    function traverseFileTree(entry) {\n        var parseEntryPromise = new qq.Promise();\n\n        if (entry.isFile) {\n            entry.file(function(file) {\n                var name = entry.name,\n                    fullPath = entry.fullPath,\n                    indexOfNameInFullPath = fullPath.indexOf(name);\n\n                // remove file name from full path string\n                fullPath = fullPath.substr(0, indexOfNameInFullPath);\n\n                // remove leading slash in full path string\n                if (fullPath.charAt(0) === \"/\") {\n                    fullPath = fullPath.substr(1);\n                }\n\n                file.qqPath = fullPath;\n                droppedFiles.push(file);\n                parseEntryPromise.success();\n            },\n            function(fileError) {\n                options.callbacks.dropLog(\"Problem parsing '\" + entry.fullPath + \"'.  FileError code \" + fileError.code + \".\", \"error\");\n                parseEntryPromise.failure();\n            });\n        }\n        else if (entry.isDirectory) {\n            getFilesInDirectory(entry).then(\n                function allEntriesRead(entries) {\n                    var entriesLeft = entries.length;\n\n                    qq.each(entries, function(idx, entry) {\n                        traverseFileTree(entry).done(function() {\n                            entriesLeft -= 1;\n\n                            if (entriesLeft === 0) {\n                                parseEntryPromise.success();\n                            }\n                        });\n                    });\n\n                    if (!entries.length) {\n                        parseEntryPromise.success();\n                    }\n                },\n\n                function readFailure(fileError) {\n                    options.callbacks.dropLog(\"Problem parsing '\" + entry.fullPath + \"'.  FileError code \" + fileError.code + \".\", \"error\");\n                    parseEntryPromise.failure();\n                }\n            );\n        }\n\n        return parseEntryPromise;\n    }\n\n    // Promissory.  Guaranteed to read all files in the root of the passed directory.\n    function getFilesInDirectory(entry, reader, accumEntries, existingPromise) {\n        var promise = existingPromise || new qq.Promise(),\n            dirReader = reader || entry.createReader();\n\n        dirReader.readEntries(\n            function readSuccess(entries) {\n                var newEntries = accumEntries ? accumEntries.concat(entries) : entries;\n\n                if (entries.length) {\n                    setTimeout(function() { // prevent stack overflow, however unlikely\n                        getFilesInDirectory(entry, dirReader, newEntries, promise);\n                    }, 0);\n                }\n                else {\n                    promise.success(newEntries);\n                }\n            },\n\n            promise.failure\n        );\n\n        return promise;\n    }\n\n    function handleDataTransfer(dataTransfer, uploadDropZone) {\n        var pendingFolderPromises = [],\n            handleDataTransferPromise = new qq.Promise();\n\n        options.callbacks.processingDroppedFiles();\n        uploadDropZone.dropDisabled(true);\n\n        if (dataTransfer.files.length > 1 && !options.allowMultipleItems) {\n            options.callbacks.processingDroppedFilesComplete([]);\n            options.callbacks.dropError(\"tooManyFilesError\", \"\");\n            uploadDropZone.dropDisabled(false);\n            handleDataTransferPromise.failure();\n        }\n        else {\n            droppedFiles = [];\n\n            if (qq.isFolderDropSupported(dataTransfer)) {\n                qq.each(dataTransfer.items, function(idx, item) {\n                    var entry = item.webkitGetAsEntry();\n\n                    if (entry) {\n                        //due to a bug in Chrome's File System API impl - #149735\n                        if (entry.isFile) {\n                            droppedFiles.push(item.getAsFile());\n                        }\n\n                        else {\n                            pendingFolderPromises.push(traverseFileTree(entry).done(function() {\n                                pendingFolderPromises.pop();\n                                if (pendingFolderPromises.length === 0) {\n                                    handleDataTransferPromise.success();\n                                }\n                            }));\n                        }\n                    }\n                });\n            }\n            else {\n                droppedFiles = dataTransfer.files;\n            }\n\n            if (pendingFolderPromises.length === 0) {\n                handleDataTransferPromise.success();\n            }\n        }\n\n        return handleDataTransferPromise;\n    }\n\n    function setupDropzone(dropArea) {\n        var dropZone = new qq.UploadDropZone({\n            HIDE_ZONES_EVENT_NAME: HIDE_ZONES_EVENT_NAME,\n            element: dropArea,\n            onEnter: function(e) {\n                qq(dropArea).addClass(options.classes.dropActive);\n                e.stopPropagation();\n            },\n            onLeaveNotDescendants: function(e) {\n                qq(dropArea).removeClass(options.classes.dropActive);\n            },\n            onDrop: function(e) {\n                handleDataTransfer(e.dataTransfer, dropZone).then(\n                    function() {\n                        uploadDroppedFiles(droppedFiles, dropZone);\n                    },\n                    function() {\n                        options.callbacks.dropLog(\"Drop event DataTransfer parsing failed.  No files will be uploaded.\", \"error\");\n                    }\n                );\n            }\n        });\n\n        disposeSupport.addDisposer(function() {\n            dropZone.dispose();\n        });\n\n        qq(dropArea).hasAttribute(HIDE_BEFORE_ENTER_ATTR) && qq(dropArea).hide();\n\n        uploadDropZones.push(dropZone);\n\n        return dropZone;\n    }\n\n    function isFileDrag(dragEvent) {\n        var fileDrag;\n\n        qq.each(dragEvent.dataTransfer.types, function(key, val) {\n            if (val === \"Files\") {\n                fileDrag = true;\n                return false;\n            }\n        });\n\n        return fileDrag;\n    }\n\n    // Attempt to determine when the file has left the document.  It is not always possible to detect this\n    // in all cases, but it is generally possible in all browsers, with a few exceptions.\n    //\n    // Exceptions:\n    // * IE10+ & Safari: We can't detect a file leaving the document if the Explorer window housing the file\n    //                   overlays the browser window.\n    // * IE10+: If the file is dragged out of the window too quickly, IE does not set the expected values of the\n    //          event's X & Y properties.\n    function leavingDocumentOut(e) {\n        if (qq.firefox()) {\n            return !e.relatedTarget;\n        }\n\n        if (qq.safari()) {\n            return e.x < 0 || e.y < 0;\n        }\n\n        return e.x === 0 && e.y === 0;\n    }\n\n    function setupDragDrop() {\n        var dropZones = options.dropZoneElements,\n\n            maybeHideDropZones = function() {\n                setTimeout(function() {\n                    qq.each(dropZones, function(idx, dropZone) {\n                        qq(dropZone).hasAttribute(HIDE_BEFORE_ENTER_ATTR) && qq(dropZone).hide();\n                        qq(dropZone).removeClass(options.classes.dropActive);\n                    });\n                }, 10);\n            };\n\n        qq.each(dropZones, function(idx, dropZone) {\n            var uploadDropZone = setupDropzone(dropZone);\n\n            // IE <= 9 does not support the File API used for drag+drop uploads\n            if (dropZones.length && qq.supportedFeatures.fileDrop) {\n                disposeSupport.attach(document, \"dragenter\", function(e) {\n                    if (!uploadDropZone.dropDisabled() && isFileDrag(e)) {\n                        qq.each(dropZones, function(idx, dropZone) {\n                            // We can't apply styles to non-HTMLElements, since they lack the `style` property.\n                            // Also, if the drop zone isn't initially hidden, let's not mess with `style.display`.\n                            if (dropZone instanceof HTMLElement &&\n                                qq(dropZone).hasAttribute(HIDE_BEFORE_ENTER_ATTR)) {\n\n                                qq(dropZone).css({display: \"block\"});\n                            }\n                        });\n                    }\n                });\n            }\n        });\n\n        disposeSupport.attach(document, \"dragleave\", function(e) {\n            if (leavingDocumentOut(e)) {\n                maybeHideDropZones();\n            }\n        });\n\n        // Just in case we were not able to detect when a dragged file has left the document,\n        // hide all relevant drop zones the next time the mouse enters the document.\n        // Note that mouse events such as this one are not fired during drag operations.\n        disposeSupport.attach(qq(document).children()[0], \"mouseenter\", function(e) {\n            maybeHideDropZones();\n        });\n\n        disposeSupport.attach(document, \"drop\", function(e) {\n            e.preventDefault();\n            maybeHideDropZones();\n        });\n\n        disposeSupport.attach(document, HIDE_ZONES_EVENT_NAME, maybeHideDropZones);\n    }\n\n    setupDragDrop();\n\n    qq.extend(this, {\n        setupExtraDropzone: function(element) {\n            options.dropZoneElements.push(element);\n            setupDropzone(element);\n        },\n\n        removeDropzone: function(element) {\n            var i,\n                dzs = options.dropZoneElements;\n\n            for (i in dzs) {\n                if (dzs[i] === element) {\n                    return dzs.splice(i, 1);\n                }\n            }\n        },\n\n        dispose: function() {\n            disposeSupport.dispose();\n            qq.each(uploadDropZones, function(idx, dropZone) {\n                dropZone.dispose();\n            });\n        }\n    });\n};\n\nqq.DragAndDrop.callbacks = function() {\n    \"use strict\";\n\n    return {\n        processingDroppedFiles: function() {},\n        processingDroppedFilesComplete: function(files, targetEl) {},\n        dropError: function(code, errorSpecifics) {\n            qq.log(\"Drag & drop error code '\" + code + \" with these specifics: '\" + errorSpecifics + \"'\", \"error\");\n        },\n        dropLog: function(message, level) {\n            qq.log(message, level);\n        }\n    };\n};\n\nqq.UploadDropZone = function(o) {\n    \"use strict\";\n\n    var disposeSupport = new qq.DisposeSupport(),\n        options, element, preventDrop, dropOutsideDisabled;\n\n    options = {\n        element: null,\n        onEnter: function(e) {},\n        onLeave: function(e) {},\n        // is not fired when leaving element by hovering descendants\n        onLeaveNotDescendants: function(e) {},\n        onDrop: function(e) {}\n    };\n\n    qq.extend(options, o);\n    element = options.element;\n\n    function dragoverShouldBeCanceled() {\n        return qq.safari() || (qq.firefox() && qq.windows());\n    }\n\n    function disableDropOutside(e) {\n        // run only once for all instances\n        if (!dropOutsideDisabled) {\n\n            // for these cases we need to catch onDrop to reset dropArea\n            if (dragoverShouldBeCanceled) {\n                disposeSupport.attach(document, \"dragover\", function(e) {\n                    e.preventDefault();\n                });\n            } else {\n                disposeSupport.attach(document, \"dragover\", function(e) {\n                    if (e.dataTransfer) {\n                        e.dataTransfer.dropEffect = \"none\";\n                        e.preventDefault();\n                    }\n                });\n            }\n\n            dropOutsideDisabled = true;\n        }\n    }\n\n    function isValidFileDrag(e) {\n        // e.dataTransfer currently causing IE errors\n        // IE9 does NOT support file API, so drag-and-drop is not possible\n        if (!qq.supportedFeatures.fileDrop) {\n            return false;\n        }\n\n        var effectTest, dt = e.dataTransfer,\n        // do not check dt.types.contains in webkit, because it crashes safari 4\n        isSafari = qq.safari();\n\n        // dt.effectAllowed is none in Safari 5\n        // dt.types.contains check is for firefox\n\n        // dt.effectAllowed crashes IE 11 & 10 when files have been dragged from\n        // the filesystem\n        effectTest = qq.ie() && qq.supportedFeatures.fileDrop ? true : dt.effectAllowed !== \"none\";\n        return dt && effectTest && (dt.files || (!isSafari && dt.types.contains && dt.types.contains(\"Files\")));\n    }\n\n    function isOrSetDropDisabled(isDisabled) {\n        if (isDisabled !== undefined) {\n            preventDrop = isDisabled;\n        }\n        return preventDrop;\n    }\n\n    function triggerHidezonesEvent() {\n        var hideZonesEvent;\n\n        function triggerUsingOldApi() {\n            hideZonesEvent = document.createEvent(\"Event\");\n            hideZonesEvent.initEvent(options.HIDE_ZONES_EVENT_NAME, true, true);\n        }\n\n        if (window.CustomEvent) {\n            try {\n                hideZonesEvent = new CustomEvent(options.HIDE_ZONES_EVENT_NAME);\n            }\n            catch (err) {\n                triggerUsingOldApi();\n            }\n        }\n        else {\n            triggerUsingOldApi();\n        }\n\n        document.dispatchEvent(hideZonesEvent);\n    }\n\n    function attachEvents() {\n        disposeSupport.attach(element, \"dragover\", function(e) {\n            if (!isValidFileDrag(e)) {\n                return;\n            }\n\n            // dt.effectAllowed crashes IE 11 & 10 when files have been dragged from\n            // the filesystem\n            var effect = qq.ie() && qq.supportedFeatures.fileDrop ? null : e.dataTransfer.effectAllowed;\n            if (effect === \"move\" || effect === \"linkMove\") {\n                e.dataTransfer.dropEffect = \"move\"; // for FF (only move allowed)\n            } else {\n                e.dataTransfer.dropEffect = \"copy\"; // for Chrome\n            }\n\n            e.stopPropagation();\n            e.preventDefault();\n        });\n\n        disposeSupport.attach(element, \"dragenter\", function(e) {\n            if (!isOrSetDropDisabled()) {\n                if (!isValidFileDrag(e)) {\n                    return;\n                }\n                options.onEnter(e);\n            }\n        });\n\n        disposeSupport.attach(element, \"dragleave\", function(e) {\n            if (!isValidFileDrag(e)) {\n                return;\n            }\n\n            options.onLeave(e);\n\n            var relatedTarget = document.elementFromPoint(e.clientX, e.clientY);\n            // do not fire when moving a mouse over a descendant\n            if (qq(this).contains(relatedTarget)) {\n                return;\n            }\n\n            options.onLeaveNotDescendants(e);\n        });\n\n        disposeSupport.attach(element, \"drop\", function(e) {\n            if (!isOrSetDropDisabled()) {\n                if (!isValidFileDrag(e)) {\n                    return;\n                }\n\n                e.preventDefault();\n                e.stopPropagation();\n                options.onDrop(e);\n\n                triggerHidezonesEvent();\n            }\n        });\n    }\n\n    disableDropOutside();\n    attachEvents();\n\n    qq.extend(this, {\n        dropDisabled: function(isDisabled) {\n            return isOrSetDropDisabled(isDisabled);\n        },\n\n        dispose: function() {\n            disposeSupport.dispose();\n        },\n\n        getElement: function() {\n            return element;\n        }\n    });\n};\n",
    "/*globals qq */\n/**\n * Defines the public API for FineUploader mode.\n */\n(function() {\n    \"use strict\";\n\n    qq.uiPublicApi = {\n        addInitialFiles: function(cannedFileList) {\n            this._parent.prototype.addInitialFiles.apply(this, arguments);\n            this._templating.addCacheToDom();\n        },\n\n        clearStoredFiles: function() {\n            this._parent.prototype.clearStoredFiles.apply(this, arguments);\n            this._templating.clearFiles();\n        },\n\n        addExtraDropzone: function(element) {\n            this._dnd && this._dnd.setupExtraDropzone(element);\n        },\n\n        removeExtraDropzone: function(element) {\n            if (this._dnd) {\n                return this._dnd.removeDropzone(element);\n            }\n        },\n\n        getItemByFileId: function(id) {\n            if (!this._templating.isHiddenForever(id)) {\n                return this._templating.getFileContainer(id);\n            }\n        },\n\n        reset: function() {\n            this._parent.prototype.reset.apply(this, arguments);\n            this._templating.reset();\n\n            if (!this._options.button && this._templating.getButton()) {\n                this._defaultButtonId = this._createUploadButton({\n                    element: this._templating.getButton(),\n                    title: this._options.text.fileInputTitle\n                }).getButtonId();\n            }\n\n            if (this._dnd) {\n                this._dnd.dispose();\n                this._dnd = this._setupDragAndDrop();\n            }\n\n            this._totalFilesInBatch = 0;\n            this._filesInBatchAddedToUi = 0;\n\n            this._setupClickAndEditEventHandlers();\n        },\n\n        setName: function(id, newName) {\n            var formattedFilename = this._options.formatFileName(newName);\n\n            this._parent.prototype.setName.apply(this, arguments);\n            this._templating.updateFilename(id, formattedFilename);\n        },\n\n        pauseUpload: function(id) {\n            var paused = this._parent.prototype.pauseUpload.apply(this, arguments);\n\n            paused && this._templating.uploadPaused(id);\n            return paused;\n        },\n\n        continueUpload: function(id) {\n            var continued = this._parent.prototype.continueUpload.apply(this, arguments);\n\n            continued && this._templating.uploadContinued(id);\n            return continued;\n        },\n\n        getId: function(fileContainerOrChildEl) {\n            return this._templating.getFileId(fileContainerOrChildEl);\n        },\n\n        getDropTarget: function(fileId) {\n            var file = this.getFile(fileId);\n\n            return file.qqDropTarget;\n        }\n    };\n\n    /**\n     * Defines the private (internal) API for FineUploader mode.\n     */\n    qq.uiPrivateApi = {\n        _getButton: function(buttonId) {\n            var button = this._parent.prototype._getButton.apply(this, arguments);\n\n            if (!button) {\n                if (buttonId === this._defaultButtonId) {\n                    button = this._templating.getButton();\n                }\n            }\n\n            return button;\n        },\n\n        _removeFileItem: function(fileId) {\n            this._templating.removeFile(fileId);\n        },\n\n        _setupClickAndEditEventHandlers: function() {\n            this._fileButtonsClickHandler = qq.FileButtonsClickHandler && this._bindFileButtonsClickEvent();\n\n            // A better approach would be to check specifically for focusin event support by querying the DOM API,\n            // but the DOMFocusIn event is not exposed as a property, so we have to resort to UA string sniffing.\n            this._focusinEventSupported = !qq.firefox();\n\n            if (this._isEditFilenameEnabled())\n            {\n                this._filenameClickHandler = this._bindFilenameClickEvent();\n                this._filenameInputFocusInHandler = this._bindFilenameInputFocusInEvent();\n                this._filenameInputFocusHandler = this._bindFilenameInputFocusEvent();\n            }\n        },\n\n        _setupDragAndDrop: function() {\n            var self = this,\n                dropZoneElements = this._options.dragAndDrop.extraDropzones,\n                templating = this._templating,\n                defaultDropZone = templating.getDropZone();\n\n            defaultDropZone && dropZoneElements.push(defaultDropZone);\n\n            return new qq.DragAndDrop({\n                dropZoneElements: dropZoneElements,\n                allowMultipleItems: this._options.multiple,\n                classes: {\n                    dropActive: this._options.classes.dropActive\n                },\n                callbacks: {\n                    processingDroppedFiles: function() {\n                        templating.showDropProcessing();\n                    },\n                    processingDroppedFilesComplete: function(files, targetEl) {\n                        templating.hideDropProcessing();\n\n                        qq.each(files, function(idx, file) {\n                            file.qqDropTarget = targetEl;\n                        });\n\n                        if (files.length) {\n                            self.addFiles(files, null, null);\n                        }\n                    },\n                    dropError: function(code, errorData) {\n                        self._itemError(code, errorData);\n                    },\n                    dropLog: function(message, level) {\n                        self.log(message, level);\n                    }\n                }\n            });\n        },\n\n        _bindFileButtonsClickEvent: function() {\n            var self = this;\n\n            return new qq.FileButtonsClickHandler({\n                templating: this._templating,\n\n                log: function(message, lvl) {\n                    self.log(message, lvl);\n                },\n\n                onDeleteFile: function(fileId) {\n                    self.deleteFile(fileId);\n                },\n\n                onCancel: function(fileId) {\n                    self.cancel(fileId);\n                },\n\n                onRetry: function(fileId) {\n                    self.retry(fileId);\n                },\n\n                onPause: function(fileId) {\n                    self.pauseUpload(fileId);\n                },\n\n                onContinue: function(fileId) {\n                    self.continueUpload(fileId);\n                },\n\n                onGetName: function(fileId) {\n                    return self.getName(fileId);\n                }\n            });\n        },\n\n        _isEditFilenameEnabled: function() {\n            /*jshint -W014 */\n            return this._templating.isEditFilenamePossible()\n                && !this._options.autoUpload\n                && qq.FilenameClickHandler\n                && qq.FilenameInputFocusHandler\n                && qq.FilenameInputFocusHandler;\n        },\n\n        _filenameEditHandler: function() {\n            var self = this,\n                templating = this._templating;\n\n            return {\n                templating: templating,\n                log: function(message, lvl) {\n                    self.log(message, lvl);\n                },\n                onGetUploadStatus: function(fileId) {\n                    return self.getUploads({id: fileId}).status;\n                },\n                onGetName: function(fileId) {\n                    return self.getName(fileId);\n                },\n                onSetName: function(id, newName) {\n                    self.setName(id, newName);\n                },\n                onEditingStatusChange: function(id, isEditing) {\n                    var qqInput = qq(templating.getEditInput(id)),\n                        qqFileContainer = qq(templating.getFileContainer(id));\n\n                    if (isEditing) {\n                        qqInput.addClass(\"qq-editing\");\n                        templating.hideFilename(id);\n                        templating.hideEditIcon(id);\n                    }\n                    else {\n                        qqInput.removeClass(\"qq-editing\");\n                        templating.showFilename(id);\n                        templating.showEditIcon(id);\n                    }\n\n                    // Force IE8 and older to repaint\n                    qqFileContainer.addClass(\"qq-temp\").removeClass(\"qq-temp\");\n                }\n            };\n        },\n\n        _onUploadStatusChange: function(id, oldStatus, newStatus) {\n            this._parent.prototype._onUploadStatusChange.apply(this, arguments);\n\n            if (this._isEditFilenameEnabled()) {\n                // Status for a file exists before it has been added to the DOM, so we must be careful here.\n                if (this._templating.getFileContainer(id) && newStatus !== qq.status.SUBMITTED) {\n                    this._templating.markFilenameEditable(id);\n                    this._templating.hideEditIcon(id);\n                }\n            }\n\n            if (oldStatus === qq.status.UPLOAD_RETRYING && newStatus === qq.status.UPLOADING) {\n                this._templating.hideRetry(id);\n                this._templating.setStatusText(id);\n                qq(this._templating.getFileContainer(id)).removeClass(this._classes.retrying);\n            }\n            else if (newStatus === qq.status.UPLOAD_FAILED) {\n                this._templating.hidePause(id);\n            }\n        },\n\n        _bindFilenameInputFocusInEvent: function() {\n            var spec = qq.extend({}, this._filenameEditHandler());\n\n            return new qq.FilenameInputFocusInHandler(spec);\n        },\n\n        _bindFilenameInputFocusEvent: function() {\n            var spec = qq.extend({}, this._filenameEditHandler());\n\n            return new qq.FilenameInputFocusHandler(spec);\n        },\n\n        _bindFilenameClickEvent: function() {\n            var spec = qq.extend({}, this._filenameEditHandler());\n\n            return new qq.FilenameClickHandler(spec);\n        },\n\n        _storeForLater: function(id) {\n            this._parent.prototype._storeForLater.apply(this, arguments);\n            this._templating.hideSpinner(id);\n        },\n\n        _onAllComplete: function(successful, failed) {\n            this._parent.prototype._onAllComplete.apply(this, arguments);\n            this._templating.resetTotalProgress();\n        },\n\n        _onSubmit: function(id, name) {\n            var file = this.getFile(id);\n\n            if (file && file.qqPath && this._options.dragAndDrop.reportDirectoryPaths) {\n                this._paramsStore.addReadOnly(id, {\n                    qqpath: file.qqPath\n                });\n            }\n\n            this._parent.prototype._onSubmit.apply(this, arguments);\n            this._addToList(id, name);\n        },\n\n        // The file item has been added to the DOM.\n        _onSubmitted: function(id) {\n            // If the edit filename feature is enabled, mark the filename element as \"editable\" and the associated edit icon\n            if (this._isEditFilenameEnabled()) {\n                this._templating.markFilenameEditable(id);\n                this._templating.showEditIcon(id);\n\n                // If the focusin event is not supported, we must add a focus handler to the newly create edit filename text input\n                if (!this._focusinEventSupported) {\n                    this._filenameInputFocusHandler.addHandler(this._templating.getEditInput(id));\n                }\n            }\n        },\n\n        // Update the progress bar & percentage as the file is uploaded\n        _onProgress: function(id, name, loaded, total) {\n            this._parent.prototype._onProgress.apply(this, arguments);\n\n            this._templating.updateProgress(id, loaded, total);\n\n            if (total === 0 || Math.round(loaded / total * 100) === 100) {\n                this._templating.hideCancel(id);\n                this._templating.hidePause(id);\n                this._templating.hideProgress(id);\n                this._templating.setStatusText(id, this._options.text.waitingForResponse);\n\n                // If ~last byte was sent, display total file size\n                this._displayFileSize(id);\n            }\n            else {\n                // If still uploading, display percentage - total size is actually the total request(s) size\n                this._displayFileSize(id, loaded, total);\n            }\n        },\n\n        _onTotalProgress: function(loaded, total) {\n            this._parent.prototype._onTotalProgress.apply(this, arguments);\n            this._templating.updateTotalProgress(loaded, total);\n        },\n\n        _onComplete: function(id, name, result, xhr) {\n            var parentRetVal = this._parent.prototype._onComplete.apply(this, arguments),\n                templating = this._templating,\n                fileContainer = templating.getFileContainer(id),\n                self = this;\n\n            function completeUpload(result) {\n                // If this file is not represented in the templating module, perhaps it was hidden intentionally.\n                // If so, don't perform any UI-related tasks related to this file.\n                if (!fileContainer) {\n                    return;\n                }\n\n                templating.setStatusText(id);\n\n                qq(fileContainer).removeClass(self._classes.retrying);\n                templating.hideProgress(id);\n\n                if (self.getUploads({id: id}).status !== qq.status.UPLOAD_FAILED) {\n                    templating.hideCancel(id);\n                }\n                templating.hideSpinner(id);\n\n                if (result.success) {\n                    self._markFileAsSuccessful(id);\n                }\n                else {\n                    qq(fileContainer).addClass(self._classes.fail);\n                    templating.showCancel(id);\n\n                    if (templating.isRetryPossible() && !self._preventRetries[id]) {\n                        qq(fileContainer).addClass(self._classes.retryable);\n                        templating.showRetry(id);\n                    }\n                    self._controlFailureTextDisplay(id, result);\n                }\n            }\n\n            // The parent may need to perform some async operation before we can accurately determine the status of the upload.\n            if (parentRetVal instanceof qq.Promise) {\n                parentRetVal.done(function(newResult) {\n                    completeUpload(newResult);\n                });\n\n            }\n            else {\n                completeUpload(result);\n            }\n\n            return parentRetVal;\n        },\n\n        _markFileAsSuccessful: function(id) {\n            var templating = this._templating;\n\n            if (this._isDeletePossible()) {\n                templating.showDeleteButton(id);\n            }\n\n            qq(templating.getFileContainer(id)).addClass(this._classes.success);\n\n            this._maybeUpdateThumbnail(id);\n        },\n\n        _onUploadPrep: function(id) {\n            this._parent.prototype._onUploadPrep.apply(this, arguments);\n            this._templating.showSpinner(id);\n        },\n\n        _onUpload: function(id, name) {\n            var parentRetVal = this._parent.prototype._onUpload.apply(this, arguments);\n\n            this._templating.showSpinner(id);\n\n            return parentRetVal;\n        },\n\n        _onUploadChunk: function(id, chunkData) {\n            this._parent.prototype._onUploadChunk.apply(this, arguments);\n\n            // Only display the pause button if we have finished uploading at least one chunk\n            // & this file can be resumed\n            if (chunkData.partIndex > 0 && this._handler.isResumable(id)) {\n                this._templating.allowPause(id);\n            }\n        },\n\n        _onCancel: function(id, name) {\n            this._parent.prototype._onCancel.apply(this, arguments);\n            this._removeFileItem(id);\n\n            if (this._getNotFinished() === 0) {\n                this._templating.resetTotalProgress();\n            }\n        },\n\n        _onBeforeAutoRetry: function(id) {\n            var retryNumForDisplay, maxAuto, retryNote;\n\n            this._parent.prototype._onBeforeAutoRetry.apply(this, arguments);\n\n            this._showCancelLink(id);\n\n            if (this._options.retry.showAutoRetryNote) {\n                retryNumForDisplay = this._autoRetries[id];\n                maxAuto = this._options.retry.maxAutoAttempts;\n\n                retryNote = this._options.retry.autoRetryNote.replace(/\\{retryNum\\}/g, retryNumForDisplay);\n                retryNote = retryNote.replace(/\\{maxAuto\\}/g, maxAuto);\n\n                this._templating.setStatusText(id, retryNote);\n                qq(this._templating.getFileContainer(id)).addClass(this._classes.retrying);\n            }\n        },\n\n        //return false if we should not attempt the requested retry\n        _onBeforeManualRetry: function(id) {\n            if (this._parent.prototype._onBeforeManualRetry.apply(this, arguments)) {\n                this._templating.resetProgress(id);\n                qq(this._templating.getFileContainer(id)).removeClass(this._classes.fail);\n                this._templating.setStatusText(id);\n                this._templating.showSpinner(id);\n                this._showCancelLink(id);\n                return true;\n            }\n            else {\n                qq(this._templating.getFileContainer(id)).addClass(this._classes.retryable);\n                this._templating.showRetry(id);\n                return false;\n            }\n        },\n\n        _onSubmitDelete: function(id) {\n            var onSuccessCallback = qq.bind(this._onSubmitDeleteSuccess, this);\n\n            this._parent.prototype._onSubmitDelete.call(this, id, onSuccessCallback);\n        },\n\n        _onSubmitDeleteSuccess: function(id, uuid, additionalMandatedParams) {\n            if (this._options.deleteFile.forceConfirm) {\n                this._showDeleteConfirm.apply(this, arguments);\n            }\n            else {\n                this._sendDeleteRequest.apply(this, arguments);\n            }\n        },\n\n        _onDeleteComplete: function(id, xhr, isError) {\n            this._parent.prototype._onDeleteComplete.apply(this, arguments);\n\n            this._templating.hideSpinner(id);\n\n            if (isError) {\n                this._templating.setStatusText(id, this._options.deleteFile.deletingFailedText);\n                this._templating.showDeleteButton(id);\n            }\n            else {\n                this._removeFileItem(id);\n            }\n        },\n\n        _sendDeleteRequest: function(id, uuid, additionalMandatedParams) {\n            this._templating.hideDeleteButton(id);\n            this._templating.showSpinner(id);\n            this._templating.setStatusText(id, this._options.deleteFile.deletingStatusText);\n            this._deleteHandler.sendDelete.apply(this, arguments);\n        },\n\n        _showDeleteConfirm: function(id, uuid, mandatedParams) {\n            /*jshint -W004 */\n            var fileName = this.getName(id),\n                confirmMessage = this._options.deleteFile.confirmMessage.replace(/\\{filename\\}/g, fileName),\n                uuid = this.getUuid(id),\n                deleteRequestArgs = arguments,\n                self = this,\n                retVal;\n\n            retVal = this._options.showConfirm(confirmMessage);\n\n            if (qq.isGenericPromise(retVal)) {\n                retVal.then(function() {\n                    self._sendDeleteRequest.apply(self, deleteRequestArgs);\n                });\n            }\n            else if (retVal !== false) {\n                self._sendDeleteRequest.apply(self, deleteRequestArgs);\n            }\n        },\n\n        _addToList: function(id, name, canned) {\n            var prependData,\n                prependIndex = 0,\n                dontDisplay = this._handler.isProxied(id) && this._options.scaling.hideScaled,\n                record;\n\n            if (this._options.display.prependFiles) {\n                if (this._totalFilesInBatch > 1 && this._filesInBatchAddedToUi > 0) {\n                    prependIndex = this._filesInBatchAddedToUi - 1;\n                }\n\n                prependData = {\n                    index: prependIndex\n                };\n            }\n\n            if (!canned) {\n                if (this._options.disableCancelForFormUploads && !qq.supportedFeatures.ajaxUploading) {\n                    this._templating.disableCancel();\n                }\n\n                // Cancel all existing (previous) files and clear the list if this file is not part of\n                // a scaled file group that has already been accepted, or if this file is not part of\n                // a scaled file group at all.\n                if (!this._options.multiple) {\n                    record = this.getUploads({id: id});\n\n                    this._handledProxyGroup = this._handledProxyGroup || record.proxyGroupId;\n\n                    if (record.proxyGroupId !== this._handledProxyGroup || !record.proxyGroupId) {\n                        this._handler.cancelAll();\n                        this._clearList();\n                        this._handledProxyGroup = null;\n                    }\n                }\n            }\n\n            if (canned) {\n                this._templating.addFileToCache(id, this._options.formatFileName(name), prependData, dontDisplay);\n                this._templating.updateThumbnail(id, this._thumbnailUrls[id], true, this._options.thumbnails.customResizer);\n            }\n            else {\n                this._templating.addFile(id, this._options.formatFileName(name), prependData, dontDisplay);\n                this._templating.generatePreview(id, this.getFile(id), this._options.thumbnails.customResizer);\n            }\n\n            this._filesInBatchAddedToUi += 1;\n\n            if (canned ||\n                (this._options.display.fileSizeOnSubmit && qq.supportedFeatures.ajaxUploading)) {\n\n                this._displayFileSize(id);\n            }\n        },\n\n        _clearList: function() {\n            this._templating.clearFiles();\n            this.clearStoredFiles();\n        },\n\n        _displayFileSize: function(id, loadedSize, totalSize) {\n            var size = this.getSize(id),\n                sizeForDisplay = this._formatSize(size);\n\n            if (size >= 0) {\n                if (loadedSize !== undefined && totalSize !== undefined) {\n                    sizeForDisplay = this._formatProgress(loadedSize, totalSize);\n                }\n\n                this._templating.updateSize(id, sizeForDisplay);\n            }\n        },\n\n        _formatProgress: function(uploadedSize, totalSize) {\n            var message = this._options.text.formatProgress;\n            function r(name, replacement) { message = message.replace(name, replacement); }\n\n            r(\"{percent}\", Math.round(uploadedSize / totalSize * 100));\n            r(\"{total_size}\", this._formatSize(totalSize));\n            return message;\n        },\n\n        _controlFailureTextDisplay: function(id, response) {\n            var mode, responseProperty, failureReason;\n\n            mode = this._options.failedUploadTextDisplay.mode;\n            responseProperty = this._options.failedUploadTextDisplay.responseProperty;\n\n            if (mode === \"custom\") {\n                failureReason = response[responseProperty];\n                if (!failureReason) {\n                    failureReason = this._options.text.failUpload;\n                }\n\n                this._templating.setStatusText(id, failureReason);\n\n                if (this._options.failedUploadTextDisplay.enableTooltip) {\n                    this._showTooltip(id, failureReason);\n                }\n            }\n            else if (mode === \"default\") {\n                this._templating.setStatusText(id, this._options.text.failUpload);\n            }\n            else if (mode !== \"none\") {\n                this.log(\"failedUploadTextDisplay.mode value of '\" + mode + \"' is not valid\", \"warn\");\n            }\n        },\n\n        _showTooltip: function(id, text) {\n            this._templating.getFileContainer(id).title = text;\n        },\n\n        _showCancelLink: function(id) {\n            if (!this._options.disableCancelForFormUploads || qq.supportedFeatures.ajaxUploading) {\n                this._templating.showCancel(id);\n            }\n        },\n\n        _itemError: function(code, name, item) {\n            var message = this._parent.prototype._itemError.apply(this, arguments);\n            this._options.showMessage(message);\n        },\n\n        _batchError: function(message) {\n            this._parent.prototype._batchError.apply(this, arguments);\n            this._options.showMessage(message);\n        },\n\n        _setupPastePrompt: function() {\n            var self = this;\n\n            this._options.callbacks.onPasteReceived = function() {\n                var message = self._options.paste.namePromptMessage,\n                    defaultVal = self._options.paste.defaultName;\n\n                return self._options.showPrompt(message, defaultVal);\n            };\n        },\n\n        _fileOrBlobRejected: function(id, name) {\n            this._totalFilesInBatch -= 1;\n            this._parent.prototype._fileOrBlobRejected.apply(this, arguments);\n        },\n\n        _prepareItemsForUpload: function(items, params, endpoint) {\n            this._totalFilesInBatch = items.length;\n            this._filesInBatchAddedToUi = 0;\n            this._parent.prototype._prepareItemsForUpload.apply(this, arguments);\n        },\n\n        _maybeUpdateThumbnail: function(fileId) {\n            var thumbnailUrl = this._thumbnailUrls[fileId],\n                fileStatus = this.getUploads({id: fileId}).status;\n\n            if (fileStatus !== qq.status.DELETED &&\n                (thumbnailUrl ||\n                this._options.thumbnails.placeholders.waitUntilResponse ||\n                !qq.supportedFeatures.imagePreviews)) {\n\n                // This will replace the \"waiting\" placeholder with a \"preview not available\" placeholder\n                // if called with a null thumbnailUrl.\n                this._templating.updateThumbnail(fileId, thumbnailUrl, this._options.thumbnails.customResizer);\n            }\n        },\n\n        _addCannedFile: function(sessionData) {\n            var id = this._parent.prototype._addCannedFile.apply(this, arguments);\n\n            this._addToList(id, this.getName(id), true);\n            this._templating.hideSpinner(id);\n            this._templating.hideCancel(id);\n            this._markFileAsSuccessful(id);\n\n            return id;\n        },\n\n        _setSize: function(id, newSize) {\n            this._parent.prototype._setSize.apply(this, arguments);\n\n            this._templating.updateSize(id, this._formatSize(newSize));\n        },\n\n        _sessionRequestComplete: function() {\n            this._templating.addCacheToDom();\n            this._parent.prototype._sessionRequestComplete.apply(this, arguments);\n        }\n    };\n}());\n",
    "/*globals qq */\n/**\n * This defines FineUploader mode, which is a default UI w/ drag & drop uploading.\n */\nqq.FineUploader = function(o, namespace) {\n    \"use strict\";\n\n    var self = this;\n\n    // By default this should inherit instance data from FineUploaderBasic, but this can be overridden\n    // if the (internal) caller defines a different parent.  The parent is also used by\n    // the private and public API functions that need to delegate to a parent function.\n    this._parent = namespace ? qq[namespace].FineUploaderBasic : qq.FineUploaderBasic;\n    this._parent.apply(this, arguments);\n\n    // Options provided by FineUploader mode\n    qq.extend(this._options, {\n        element: null,\n\n        button: null,\n\n        listElement: null,\n\n        dragAndDrop: {\n            extraDropzones: [],\n            reportDirectoryPaths: false\n        },\n\n        text: {\n            formatProgress: \"{percent}% of {total_size}\",\n            failUpload: \"Upload failed\",\n            waitingForResponse: \"Processing...\",\n            paused: \"Paused\"\n        },\n\n        template: \"qq-template\",\n\n        classes: {\n            retrying: \"qq-upload-retrying\",\n            retryable: \"qq-upload-retryable\",\n            success: \"qq-upload-success\",\n            fail: \"qq-upload-fail\",\n            editable: \"qq-editable\",\n            hide: \"qq-hide\",\n            dropActive: \"qq-upload-drop-area-active\"\n        },\n\n        failedUploadTextDisplay: {\n            mode: \"default\", //default, custom, or none\n            responseProperty: \"error\",\n            enableTooltip: true\n        },\n\n        messages: {\n            tooManyFilesError: \"You may only drop one file\",\n            unsupportedBrowser: \"Unrecoverable error - this browser does not permit file uploading of any kind.\"\n        },\n\n        retry: {\n            showAutoRetryNote: true,\n            autoRetryNote: \"Retrying {retryNum}/{maxAuto}...\"\n        },\n\n        deleteFile: {\n            forceConfirm: false,\n            confirmMessage: \"Are you sure you want to delete {filename}?\",\n            deletingStatusText: \"Deleting...\",\n            deletingFailedText: \"Delete failed\"\n\n        },\n\n        display: {\n            fileSizeOnSubmit: false,\n            prependFiles: false\n        },\n\n        paste: {\n            promptForName: false,\n            namePromptMessage: \"Please name this image\"\n        },\n\n        thumbnails: {\n            customResizer: null,\n            maxCount: 0,\n            placeholders: {\n                waitUntilResponse: false,\n                notAvailablePath: null,\n                waitingPath: null\n            },\n            timeBetweenThumbs: 750\n        },\n\n        scaling: {\n            hideScaled: false\n        },\n\n        showMessage: function(message) {\n            if (self._templating.hasDialog(\"alert\")) {\n                return self._templating.showDialog(\"alert\", message);\n            }\n            else {\n                setTimeout(function() {\n                    window.alert(message);\n                }, 0);\n            }\n        },\n\n        showConfirm: function(message) {\n            if (self._templating.hasDialog(\"confirm\")) {\n                return self._templating.showDialog(\"confirm\", message);\n            }\n            else {\n                return window.confirm(message);\n            }\n        },\n\n        showPrompt: function(message, defaultValue) {\n            if (self._templating.hasDialog(\"prompt\")) {\n                return self._templating.showDialog(\"prompt\", message, defaultValue);\n            }\n            else {\n                return window.prompt(message, defaultValue);\n            }\n        }\n    }, true);\n\n    // Replace any default options with user defined ones\n    qq.extend(this._options, o, true);\n\n    this._templating = new qq.Templating({\n        log: qq.bind(this.log, this),\n        templateIdOrEl: this._options.template,\n        containerEl: this._options.element,\n        fileContainerEl: this._options.listElement,\n        button: this._options.button,\n        imageGenerator: this._imageGenerator,\n        classes: {\n            hide: this._options.classes.hide,\n            editable: this._options.classes.editable\n        },\n        limits: {\n            maxThumbs: this._options.thumbnails.maxCount,\n            timeBetweenThumbs: this._options.thumbnails.timeBetweenThumbs\n        },\n        placeholders: {\n            waitUntilUpdate: this._options.thumbnails.placeholders.waitUntilResponse,\n            thumbnailNotAvailable: this._options.thumbnails.placeholders.notAvailablePath,\n            waitingForThumbnail: this._options.thumbnails.placeholders.waitingPath\n        },\n        text: this._options.text\n    });\n\n    if (this._options.workarounds.ios8SafariUploads && qq.ios800() && qq.iosSafari()) {\n        this._templating.renderFailure(this._options.messages.unsupportedBrowserIos8Safari);\n    }\n    else if (!qq.supportedFeatures.uploading || (this._options.cors.expected && !qq.supportedFeatures.uploadCors)) {\n        this._templating.renderFailure(this._options.messages.unsupportedBrowser);\n    }\n    else {\n        this._wrapCallbacks();\n\n        this._templating.render();\n\n        this._classes = this._options.classes;\n\n        if (!this._options.button && this._templating.getButton()) {\n            this._defaultButtonId = this._createUploadButton({\n                element: this._templating.getButton(),\n                title: this._options.text.fileInputTitle\n            }).getButtonId();\n        }\n\n        this._setupClickAndEditEventHandlers();\n\n        if (qq.DragAndDrop && qq.supportedFeatures.fileDrop) {\n            this._dnd = this._setupDragAndDrop();\n        }\n\n        if (this._options.paste.targetElement && this._options.paste.promptForName) {\n            if (qq.PasteSupport) {\n                this._setupPastePrompt();\n            }\n            else {\n                this.log(\"Paste support module not found.\", \"error\");\n            }\n        }\n\n        this._totalFilesInBatch = 0;\n        this._filesInBatchAddedToUi = 0;\n    }\n};\n\n// Inherit the base public & private API methods\nqq.extend(qq.FineUploader.prototype, qq.basePublicApi);\nqq.extend(qq.FineUploader.prototype, qq.basePrivateApi);\n\n// Add the FineUploader/default UI public & private UI methods, which may override some base methods.\nqq.extend(qq.FineUploader.prototype, qq.uiPublicApi);\nqq.extend(qq.FineUploader.prototype, qq.uiPrivateApi);\n",
    "/* globals qq */\n/* jshint -W065 */\n/**\n * Module responsible for rendering all Fine Uploader UI templates.  This module also asserts at least\n * a limited amount of control over the template elements after they are added to the DOM.\n * Wherever possible, this module asserts total control over template elements present in the DOM.\n *\n * @param spec Specification object used to control various templating behaviors\n * @constructor\n */\nqq.Templating = function(spec) {\n    \"use strict\";\n\n    var FILE_ID_ATTR = \"qq-file-id\",\n        FILE_CLASS_PREFIX = \"qq-file-id-\",\n        THUMBNAIL_MAX_SIZE_ATTR = \"qq-max-size\",\n        THUMBNAIL_SERVER_SCALE_ATTR = \"qq-server-scale\",\n        // This variable is duplicated in the DnD module since it can function as a standalone as well\n        HIDE_DROPZONE_ATTR = \"qq-hide-dropzone\",\n        DROPZPONE_TEXT_ATTR = \"qq-drop-area-text\",\n        IN_PROGRESS_CLASS = \"qq-in-progress\",\n        HIDDEN_FOREVER_CLASS = \"qq-hidden-forever\",\n        fileBatch = {\n            content: document.createDocumentFragment(),\n            map: {}\n        },\n        isCancelDisabled = false,\n        generatedThumbnails = 0,\n        thumbnailQueueMonitorRunning = false,\n        thumbGenerationQueue = [],\n        thumbnailMaxSize = -1,\n        options = {\n            log: null,\n            limits: {\n                maxThumbs: 0,\n                timeBetweenThumbs: 750\n            },\n            templateIdOrEl: \"qq-template\",\n            containerEl: null,\n            fileContainerEl: null,\n            button: null,\n            imageGenerator: null,\n            classes: {\n                hide: \"qq-hide\",\n                editable: \"qq-editable\"\n            },\n            placeholders: {\n                waitUntilUpdate: false,\n                thumbnailNotAvailable: null,\n                waitingForThumbnail: null\n            },\n            text: {\n                paused: \"Paused\"\n            }\n        },\n        selectorClasses = {\n            button: \"qq-upload-button-selector\",\n            alertDialog: \"qq-alert-dialog-selector\",\n            dialogCancelButton: \"qq-cancel-button-selector\",\n            confirmDialog: \"qq-confirm-dialog-selector\",\n            dialogMessage: \"qq-dialog-message-selector\",\n            dialogOkButton: \"qq-ok-button-selector\",\n            promptDialog: \"qq-prompt-dialog-selector\",\n            uploader: \"qq-uploader-selector\",\n            drop: \"qq-upload-drop-area-selector\",\n            list: \"qq-upload-list-selector\",\n            progressBarContainer: \"qq-progress-bar-container-selector\",\n            progressBar: \"qq-progress-bar-selector\",\n            totalProgressBarContainer: \"qq-total-progress-bar-container-selector\",\n            totalProgressBar: \"qq-total-progress-bar-selector\",\n            file: \"qq-upload-file-selector\",\n            spinner: \"qq-upload-spinner-selector\",\n            size: \"qq-upload-size-selector\",\n            cancel: \"qq-upload-cancel-selector\",\n            pause: \"qq-upload-pause-selector\",\n            continueButton: \"qq-upload-continue-selector\",\n            deleteButton: \"qq-upload-delete-selector\",\n            retry: \"qq-upload-retry-selector\",\n            statusText: \"qq-upload-status-text-selector\",\n            editFilenameInput: \"qq-edit-filename-selector\",\n            editNameIcon: \"qq-edit-filename-icon-selector\",\n            dropText: \"qq-upload-drop-area-text-selector\",\n            dropProcessing: \"qq-drop-processing-selector\",\n            dropProcessingSpinner: \"qq-drop-processing-spinner-selector\",\n            thumbnail: \"qq-thumbnail-selector\"\n        },\n        previewGeneration = {},\n        cachedThumbnailNotAvailableImg = new qq.Promise(),\n        cachedWaitingForThumbnailImg = new qq.Promise(),\n        log,\n        isEditElementsExist,\n        isRetryElementExist,\n        templateHtml,\n        container,\n        fileList,\n        showThumbnails,\n        serverScale,\n\n        // During initialization of the templating module we should cache any\n        // placeholder images so we can quickly swap them into the file list on demand.\n        // Any placeholder images that cannot be loaded/found are simply ignored.\n        cacheThumbnailPlaceholders = function() {\n            var notAvailableUrl =  options.placeholders.thumbnailNotAvailable,\n                waitingUrl = options.placeholders.waitingForThumbnail,\n                spec = {\n                    maxSize: thumbnailMaxSize,\n                    scale: serverScale\n                };\n\n            if (showThumbnails) {\n                if (notAvailableUrl) {\n                    options.imageGenerator.generate(notAvailableUrl, new Image(), spec).then(\n                        function(updatedImg) {\n                            cachedThumbnailNotAvailableImg.success(updatedImg);\n                        },\n                        function() {\n                            cachedThumbnailNotAvailableImg.failure();\n                            log(\"Problem loading 'not available' placeholder image at \" + notAvailableUrl, \"error\");\n                        }\n                    );\n                }\n                else {\n                    cachedThumbnailNotAvailableImg.failure();\n                }\n\n                if (waitingUrl) {\n                    options.imageGenerator.generate(waitingUrl, new Image(), spec).then(\n                        function(updatedImg) {\n                            cachedWaitingForThumbnailImg.success(updatedImg);\n                        },\n                        function() {\n                            cachedWaitingForThumbnailImg.failure();\n                            log(\"Problem loading 'waiting for thumbnail' placeholder image at \" + waitingUrl, \"error\");\n                        }\n                    );\n                }\n                else {\n                    cachedWaitingForThumbnailImg.failure();\n                }\n            }\n        },\n\n        // Displays a \"waiting for thumbnail\" type placeholder image\n        // iff we were able to load it during initialization of the templating module.\n        displayWaitingImg = function(thumbnail) {\n            var waitingImgPlacement = new qq.Promise();\n\n            cachedWaitingForThumbnailImg.then(function(img) {\n                maybeScalePlaceholderViaCss(img, thumbnail);\n                /* jshint eqnull:true */\n                if (!thumbnail.src) {\n                    thumbnail.src = img.src;\n                    thumbnail.onload = function() {\n                        thumbnail.onload = null;\n                        show(thumbnail);\n                        waitingImgPlacement.success();\n                    };\n                }\n                else {\n                    waitingImgPlacement.success();\n                }\n            }, function() {\n                // In some browsers (such as IE9 and older) an img w/out a src attribute\n                // are displayed as \"broken\" images, so we should just hide the img tag\n                // if we aren't going to display the \"waiting\" placeholder.\n                hide(thumbnail);\n                waitingImgPlacement.success();\n            });\n\n            return waitingImgPlacement;\n        },\n\n        generateNewPreview = function(id, blob, spec) {\n            var thumbnail = getThumbnail(id);\n\n            log(\"Generating new thumbnail for \" + id);\n            blob.qqThumbnailId = id;\n\n            return options.imageGenerator.generate(blob, thumbnail, spec).then(\n                function() {\n                    generatedThumbnails++;\n                    show(thumbnail);\n                    previewGeneration[id].success();\n                },\n                function() {\n                    previewGeneration[id].failure();\n\n                    // Display the \"not available\" placeholder img only if we are\n                    // not expecting a thumbnail at a later point, such as in a server response.\n                    if (!options.placeholders.waitUntilUpdate) {\n                        maybeSetDisplayNotAvailableImg(id, thumbnail);\n                    }\n                });\n        },\n\n        generateNextQueuedPreview = function() {\n            if (thumbGenerationQueue.length) {\n                thumbnailQueueMonitorRunning = true;\n\n                var queuedThumbRequest = thumbGenerationQueue.shift();\n\n                if (queuedThumbRequest.update) {\n                    processUpdateQueuedPreviewRequest(queuedThumbRequest);\n                }\n                else {\n                    processNewQueuedPreviewRequest(queuedThumbRequest);\n                }\n            }\n            else {\n                thumbnailQueueMonitorRunning = false;\n            }\n        },\n\n        getCancel = function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.cancel);\n        },\n\n        getContinue = function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.continueButton);\n        },\n\n        getDialog = function(type) {\n            return getTemplateEl(container, selectorClasses[type + \"Dialog\"]);\n        },\n\n        getDelete = function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.deleteButton);\n        },\n\n        getDropProcessing = function() {\n            return getTemplateEl(container, selectorClasses.dropProcessing);\n        },\n\n        getEditIcon = function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.editNameIcon);\n        },\n\n        getFile = function(id) {\n            return fileBatch.map[id] || qq(fileList).getFirstByClass(FILE_CLASS_PREFIX + id);\n        },\n\n        getFilename = function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.file);\n        },\n\n        getPause = function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.pause);\n        },\n\n        getProgress = function(id) {\n            /* jshint eqnull:true */\n            // Total progress bar\n            if (id == null) {\n                return getTemplateEl(container, selectorClasses.totalProgressBarContainer) ||\n                    getTemplateEl(container, selectorClasses.totalProgressBar);\n            }\n\n            // Per-file progress bar\n            return getTemplateEl(getFile(id), selectorClasses.progressBarContainer) ||\n                getTemplateEl(getFile(id), selectorClasses.progressBar);\n        },\n\n        getRetry = function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.retry);\n        },\n\n        getSize = function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.size);\n        },\n\n        getSpinner = function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.spinner);\n        },\n\n        getTemplateEl = function(context, cssClass) {\n            return context && qq(context).getFirstByClass(cssClass);\n        },\n\n        getThumbnail = function(id) {\n            return showThumbnails && getTemplateEl(getFile(id), selectorClasses.thumbnail);\n        },\n\n        hide = function(el) {\n            el && qq(el).addClass(options.classes.hide);\n        },\n\n        // Ensures a placeholder image does not exceed any max size specified\n        // via `style` attribute properties iff <canvas> was not used to scale\n        // the placeholder AND the target <img> doesn't already have these `style` attribute properties set.\n        maybeScalePlaceholderViaCss = function(placeholder, thumbnail) {\n            var maxWidth = placeholder.style.maxWidth,\n                maxHeight = placeholder.style.maxHeight;\n\n            if (maxHeight && maxWidth && !thumbnail.style.maxWidth && !thumbnail.style.maxHeight) {\n                qq(thumbnail).css({\n                    maxWidth: maxWidth,\n                    maxHeight: maxHeight\n                });\n            }\n        },\n\n        // Displays a \"thumbnail not available\" type placeholder image\n        // iff we were able to load this placeholder during initialization\n        // of the templating module or after preview generation has failed.\n        maybeSetDisplayNotAvailableImg = function(id, thumbnail) {\n            var previewing = previewGeneration[id] || new qq.Promise().failure(),\n                notAvailableImgPlacement = new qq.Promise();\n\n            cachedThumbnailNotAvailableImg.then(function(img) {\n                previewing.then(\n                    function() {\n                        notAvailableImgPlacement.success();\n                    },\n                    function() {\n                        maybeScalePlaceholderViaCss(img, thumbnail);\n\n                        thumbnail.onload = function() {\n                            thumbnail.onload = null;\n                            notAvailableImgPlacement.success();\n                        };\n\n                        thumbnail.src = img.src;\n                        show(thumbnail);\n                    }\n                );\n            });\n\n            return notAvailableImgPlacement;\n        },\n\n        /**\n         * Grabs the HTML from the script tag holding the template markup.  This function will also adjust\n         * some internally-tracked state variables based on the contents of the template.\n         * The template is filtered so that irrelevant elements (such as the drop zone if DnD is not supported)\n         * are omitted from the DOM.  Useful errors will be thrown if the template cannot be parsed.\n         *\n         * @returns {{template: *, fileTemplate: *}} HTML for the top-level file items templates\n         */\n        parseAndGetTemplate = function() {\n            var scriptEl,\n                scriptHtml,\n                fileListNode,\n                tempTemplateEl,\n                fileListHtml,\n                defaultButton,\n                dropArea,\n                thumbnail,\n                dropProcessing,\n                dropTextEl,\n                uploaderEl;\n\n            log(\"Parsing template\");\n\n            /*jshint -W116*/\n            if (options.templateIdOrEl == null) {\n                throw new Error(\"You MUST specify either a template element or ID!\");\n            }\n\n            // Grab the contents of the script tag holding the template.\n            if (qq.isString(options.templateIdOrEl)) {\n                scriptEl = document.getElementById(options.templateIdOrEl);\n\n                if (scriptEl === null) {\n                    throw new Error(qq.format(\"Cannot find template script at ID '{}'!\", options.templateIdOrEl));\n                }\n\n                scriptHtml = scriptEl.innerHTML;\n            }\n            else {\n                if (options.templateIdOrEl.innerHTML === undefined) {\n                    throw new Error(\"You have specified an invalid value for the template option!  \" +\n                        \"It must be an ID or an Element.\");\n                }\n\n                scriptHtml = options.templateIdOrEl.innerHTML;\n            }\n\n            scriptHtml = qq.trimStr(scriptHtml);\n            tempTemplateEl = document.createElement(\"div\");\n            tempTemplateEl.appendChild(qq.toElement(scriptHtml));\n            uploaderEl = qq(tempTemplateEl).getFirstByClass(selectorClasses.uploader);\n\n            // Don't include the default template button in the DOM\n            // if an alternate button container has been specified.\n            if (options.button) {\n                defaultButton = qq(tempTemplateEl).getFirstByClass(selectorClasses.button);\n                if (defaultButton) {\n                    qq(defaultButton).remove();\n                }\n            }\n\n            // Omit the drop processing element from the DOM if DnD is not supported by the UA,\n            // or the drag and drop module is not found.\n            // NOTE: We are consciously not removing the drop zone if the UA doesn't support DnD\n            // to support layouts where the drop zone is also a container for visible elements,\n            // such as the file list.\n            if (!qq.DragAndDrop || !qq.supportedFeatures.fileDrop) {\n                dropProcessing = qq(tempTemplateEl).getFirstByClass(selectorClasses.dropProcessing);\n                if (dropProcessing) {\n                    qq(dropProcessing).remove();\n                }\n            }\n\n            dropArea = qq(tempTemplateEl).getFirstByClass(selectorClasses.drop);\n\n            // If DnD is not available then remove\n            // it from the DOM as well.\n            if (dropArea && !qq.DragAndDrop) {\n                log(\"DnD module unavailable.\", \"info\");\n                qq(dropArea).remove();\n            }\n\n            if (!qq.supportedFeatures.fileDrop) {\n                // don't display any \"drop files to upload\" background text\n                uploaderEl.removeAttribute(DROPZPONE_TEXT_ATTR);\n\n                if (dropArea && qq(dropArea).hasAttribute(HIDE_DROPZONE_ATTR)) {\n                    // If there is a drop area defined in the template, and the current UA doesn't support DnD,\n                    // and the drop area is marked as \"hide before enter\", ensure it is hidden as the DnD module\n                    // will not do this (since we will not be loading the DnD module)\n                    qq(dropArea).css({\n                        display: \"none\"\n                    });\n                }\n            }\n            else if (qq(uploaderEl).hasAttribute(DROPZPONE_TEXT_ATTR) && dropArea) {\n                dropTextEl = qq(dropArea).getFirstByClass(selectorClasses.dropText);\n                dropTextEl && qq(dropTextEl).remove();\n            }\n\n            // Ensure the `showThumbnails` flag is only set if the thumbnail element\n            // is present in the template AND the current UA is capable of generating client-side previews.\n            thumbnail = qq(tempTemplateEl).getFirstByClass(selectorClasses.thumbnail);\n            if (!showThumbnails) {\n                thumbnail && qq(thumbnail).remove();\n            }\n            else if (thumbnail) {\n                thumbnailMaxSize = parseInt(thumbnail.getAttribute(THUMBNAIL_MAX_SIZE_ATTR));\n                // Only enforce max size if the attr value is non-zero\n                thumbnailMaxSize = thumbnailMaxSize > 0 ? thumbnailMaxSize : null;\n\n                serverScale = qq(thumbnail).hasAttribute(THUMBNAIL_SERVER_SCALE_ATTR);\n            }\n            showThumbnails = showThumbnails && thumbnail;\n\n            isEditElementsExist = qq(tempTemplateEl).getByClass(selectorClasses.editFilenameInput).length > 0;\n            isRetryElementExist = qq(tempTemplateEl).getByClass(selectorClasses.retry).length > 0;\n\n            fileListNode = qq(tempTemplateEl).getFirstByClass(selectorClasses.list);\n            /*jshint -W116*/\n            if (fileListNode == null) {\n                throw new Error(\"Could not find the file list container in the template!\");\n            }\n\n            fileListHtml = fileListNode.innerHTML;\n            fileListNode.innerHTML = \"\";\n\n            // We must call `createElement` in IE8 in order to target and hide any <dialog> via CSS\n            if (tempTemplateEl.getElementsByTagName(\"DIALOG\").length) {\n                document.createElement(\"dialog\");\n            }\n\n            log(\"Template parsing complete\");\n\n            return {\n                template: qq.trimStr(tempTemplateEl.innerHTML),\n                fileTemplate: qq.trimStr(fileListHtml)\n            };\n        },\n\n        prependFile = function(el, index, fileList) {\n            var parentEl = fileList,\n                beforeEl = parentEl.firstChild;\n\n            if (index > 0) {\n                beforeEl = qq(parentEl).children()[index].nextSibling;\n\n            }\n\n            parentEl.insertBefore(el, beforeEl);\n        },\n\n        processNewQueuedPreviewRequest = function(queuedThumbRequest) {\n            var id = queuedThumbRequest.id,\n                optFileOrBlob = queuedThumbRequest.optFileOrBlob,\n                relatedThumbnailId = optFileOrBlob && optFileOrBlob.qqThumbnailId,\n                thumbnail = getThumbnail(id),\n                spec = {\n                    customResizeFunction: queuedThumbRequest.customResizeFunction,\n                    maxSize: thumbnailMaxSize,\n                    orient: true,\n                    scale: true\n                };\n\n            if (qq.supportedFeatures.imagePreviews) {\n                if (thumbnail) {\n                    if (options.limits.maxThumbs && options.limits.maxThumbs <= generatedThumbnails) {\n                        maybeSetDisplayNotAvailableImg(id, thumbnail);\n                        generateNextQueuedPreview();\n                    }\n                    else {\n                        displayWaitingImg(thumbnail).done(function() {\n                            previewGeneration[id] = new qq.Promise();\n\n                            previewGeneration[id].done(function() {\n                                setTimeout(generateNextQueuedPreview, options.limits.timeBetweenThumbs);\n                            });\n\n                            /* jshint eqnull: true */\n                            // If we've already generated an <img> for this file, use the one that exists,\n                            // don't waste resources generating a new one.\n                            if (relatedThumbnailId != null) {\n                                useCachedPreview(id, relatedThumbnailId);\n                            }\n                            else {\n                                generateNewPreview(id, optFileOrBlob, spec);\n                            }\n                        });\n                    }\n                }\n                // File element in template may have been removed, so move on to next item in queue\n                else {\n                    generateNextQueuedPreview();\n                }\n            }\n            else if (thumbnail) {\n                displayWaitingImg(thumbnail);\n                generateNextQueuedPreview();\n            }\n        },\n\n        processUpdateQueuedPreviewRequest = function(queuedThumbRequest) {\n            var id = queuedThumbRequest.id,\n                thumbnailUrl = queuedThumbRequest.thumbnailUrl,\n                showWaitingImg = queuedThumbRequest.showWaitingImg,\n                thumbnail = getThumbnail(id),\n                spec = {\n                    customResizeFunction: queuedThumbRequest.customResizeFunction,\n                    scale: serverScale,\n                    maxSize: thumbnailMaxSize\n                };\n\n            if (thumbnail) {\n                if (thumbnailUrl) {\n                    if (options.limits.maxThumbs && options.limits.maxThumbs <= generatedThumbnails) {\n                        maybeSetDisplayNotAvailableImg(id, thumbnail);\n                        generateNextQueuedPreview();\n                    }\n                    else {\n                        if (showWaitingImg) {\n                            displayWaitingImg(thumbnail);\n                        }\n\n                        return options.imageGenerator.generate(thumbnailUrl, thumbnail, spec).then(\n                            function() {\n                                show(thumbnail);\n                                generatedThumbnails++;\n                                setTimeout(generateNextQueuedPreview, options.limits.timeBetweenThumbs);\n                            },\n\n                            function() {\n                                maybeSetDisplayNotAvailableImg(id, thumbnail);\n                                setTimeout(generateNextQueuedPreview, options.limits.timeBetweenThumbs);\n                            }\n                        );\n                    }\n                }\n                else {\n                    maybeSetDisplayNotAvailableImg(id, thumbnail);\n                    generateNextQueuedPreview();\n                }\n            }\n        },\n\n        setProgressBarWidth = function(id, percent) {\n            var bar = getProgress(id),\n                /* jshint eqnull:true */\n                progressBarSelector = id == null ? selectorClasses.totalProgressBar : selectorClasses.progressBar;\n\n            if (bar && !qq(bar).hasClass(progressBarSelector)) {\n                bar = qq(bar).getFirstByClass(progressBarSelector);\n            }\n\n            if (bar) {\n                qq(bar).css({width: percent + \"%\"});\n                bar.setAttribute(\"aria-valuenow\", percent);\n            }\n        },\n\n        show = function(el) {\n            el && qq(el).removeClass(options.classes.hide);\n        },\n\n        useCachedPreview = function(targetThumbnailId, cachedThumbnailId) {\n            var targetThumbnail = getThumbnail(targetThumbnailId),\n                cachedThumbnail = getThumbnail(cachedThumbnailId);\n\n            log(qq.format(\"ID {} is the same file as ID {}.  Will use generated thumbnail from ID {} instead.\", targetThumbnailId, cachedThumbnailId, cachedThumbnailId));\n\n            // Generation of the related thumbnail may still be in progress, so, wait until it is done.\n            previewGeneration[cachedThumbnailId].then(function() {\n                generatedThumbnails++;\n                previewGeneration[targetThumbnailId].success();\n                log(qq.format(\"Now using previously generated thumbnail created for ID {} on ID {}.\", cachedThumbnailId, targetThumbnailId));\n                targetThumbnail.src = cachedThumbnail.src;\n                show(targetThumbnail);\n            },\n            function() {\n                previewGeneration[targetThumbnailId].failure();\n                if (!options.placeholders.waitUntilUpdate) {\n                    maybeSetDisplayNotAvailableImg(targetThumbnailId, targetThumbnail);\n                }\n            });\n        };\n\n    qq.extend(options, spec);\n    log = options.log;\n\n    // No need to worry about conserving CPU or memory on older browsers,\n    // since there is no ability to preview, and thumbnail display is primitive and quick.\n    if (!qq.supportedFeatures.imagePreviews) {\n        options.limits.timeBetweenThumbs = 0;\n        options.limits.maxThumbs = 0;\n    }\n\n    container = options.containerEl;\n    showThumbnails = options.imageGenerator !== undefined;\n    templateHtml = parseAndGetTemplate();\n\n    cacheThumbnailPlaceholders();\n\n    qq.extend(this, {\n        render: function() {\n            log(\"Rendering template in DOM.\");\n\n            generatedThumbnails = 0;\n\n            container.innerHTML = templateHtml.template;\n            hide(getDropProcessing());\n            this.hideTotalProgress();\n            fileList = options.fileContainerEl || getTemplateEl(container, selectorClasses.list);\n\n            log(\"Template rendering complete\");\n        },\n\n        renderFailure: function(message) {\n            var cantRenderEl = qq.toElement(message);\n            container.innerHTML = \"\";\n            container.appendChild(cantRenderEl);\n        },\n\n        reset: function() {\n            this.render();\n        },\n\n        clearFiles: function() {\n            fileList.innerHTML = \"\";\n        },\n\n        disableCancel: function() {\n            isCancelDisabled = true;\n        },\n\n        addFile: function(id, name, prependInfo, hideForever, batch) {\n            var fileEl = qq.toElement(templateHtml.fileTemplate),\n                fileNameEl = getTemplateEl(fileEl, selectorClasses.file),\n                uploaderEl = getTemplateEl(container, selectorClasses.uploader),\n                fileContainer = batch ? fileBatch.content : fileList,\n                thumb;\n\n            if (batch) {\n                fileBatch.map[id] = fileEl;\n            }\n\n            qq(fileEl).addClass(FILE_CLASS_PREFIX + id);\n            uploaderEl.removeAttribute(DROPZPONE_TEXT_ATTR);\n\n            if (fileNameEl) {\n                qq(fileNameEl).setText(name);\n                fileNameEl.setAttribute(\"title\", name);\n            }\n\n            fileEl.setAttribute(FILE_ID_ATTR, id);\n\n            if (prependInfo) {\n                prependFile(fileEl, prependInfo.index, fileContainer);\n            }\n            else {\n                fileContainer.appendChild(fileEl);\n            }\n\n            if (hideForever) {\n                fileEl.style.display = \"none\";\n                qq(fileEl).addClass(HIDDEN_FOREVER_CLASS);\n            }\n            else {\n                hide(getProgress(id));\n                hide(getSize(id));\n                hide(getDelete(id));\n                hide(getRetry(id));\n                hide(getPause(id));\n                hide(getContinue(id));\n\n                if (isCancelDisabled) {\n                    this.hideCancel(id);\n                }\n\n                thumb = getThumbnail(id);\n                if (thumb && !thumb.src) {\n                    cachedWaitingForThumbnailImg.then(function(waitingImg) {\n                        thumb.src = waitingImg.src;\n                        if (waitingImg.style.maxHeight && waitingImg.style.maxWidth) {\n                            qq(thumb).css({\n                                maxHeight: waitingImg.style.maxHeight,\n                                maxWidth: waitingImg.style.maxWidth\n                            });\n                        }\n\n                        show(thumb);\n                    });\n                }\n            }\n        },\n\n        addFileToCache: function(id, name, prependInfo, hideForever) {\n            this.addFile(id, name, prependInfo, hideForever, true);\n        },\n\n        addCacheToDom: function() {\n            fileList.appendChild(fileBatch.content);\n            fileBatch.content = document.createDocumentFragment();\n            fileBatch.map = {};\n        },\n\n        removeFile: function(id) {\n            qq(getFile(id)).remove();\n        },\n\n        getFileId: function(el) {\n            var currentNode = el;\n\n            if (currentNode) {\n                /*jshint -W116*/\n                while (currentNode.getAttribute(FILE_ID_ATTR) == null) {\n                    currentNode = currentNode.parentNode;\n                }\n\n                return parseInt(currentNode.getAttribute(FILE_ID_ATTR));\n            }\n        },\n\n        getFileList: function() {\n            return fileList;\n        },\n\n        markFilenameEditable: function(id) {\n            var filename = getFilename(id);\n\n            filename && qq(filename).addClass(options.classes.editable);\n        },\n\n        updateFilename: function(id, name) {\n            var filenameEl = getFilename(id);\n\n            if (filenameEl) {\n                qq(filenameEl).setText(name);\n                filenameEl.setAttribute(\"title\", name);\n            }\n        },\n\n        hideFilename: function(id) {\n            hide(getFilename(id));\n        },\n\n        showFilename: function(id) {\n            show(getFilename(id));\n        },\n\n        isFileName: function(el) {\n            return qq(el).hasClass(selectorClasses.file);\n        },\n\n        getButton: function() {\n            return options.button || getTemplateEl(container, selectorClasses.button);\n        },\n\n        hideDropProcessing: function() {\n            hide(getDropProcessing());\n        },\n\n        showDropProcessing: function() {\n            show(getDropProcessing());\n        },\n\n        getDropZone: function() {\n            return getTemplateEl(container, selectorClasses.drop);\n        },\n\n        isEditFilenamePossible: function() {\n            return isEditElementsExist;\n        },\n\n        hideRetry: function(id) {\n            hide(getRetry(id));\n        },\n\n        isRetryPossible: function() {\n            return isRetryElementExist;\n        },\n\n        showRetry: function(id) {\n            show(getRetry(id));\n        },\n\n        getFileContainer: function(id) {\n            return getFile(id);\n        },\n\n        showEditIcon: function(id) {\n            var icon = getEditIcon(id);\n\n            icon && qq(icon).addClass(options.classes.editable);\n        },\n\n        isHiddenForever: function(id) {\n            return qq(getFile(id)).hasClass(HIDDEN_FOREVER_CLASS);\n        },\n\n        hideEditIcon: function(id) {\n            var icon = getEditIcon(id);\n\n            icon && qq(icon).removeClass(options.classes.editable);\n        },\n\n        isEditIcon: function(el) {\n            return qq(el).hasClass(selectorClasses.editNameIcon, true);\n        },\n\n        getEditInput: function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.editFilenameInput);\n        },\n\n        isEditInput: function(el) {\n            return qq(el).hasClass(selectorClasses.editFilenameInput, true);\n        },\n\n        updateProgress: function(id, loaded, total) {\n            var bar = getProgress(id),\n                percent;\n\n            if (bar && total > 0) {\n                percent = Math.round(loaded / total * 100);\n\n                if (percent === 100) {\n                    hide(bar);\n                }\n                else {\n                    show(bar);\n                }\n\n                setProgressBarWidth(id, percent);\n            }\n        },\n\n        updateTotalProgress: function(loaded, total) {\n            this.updateProgress(null, loaded, total);\n        },\n\n        hideProgress: function(id) {\n            var bar = getProgress(id);\n\n            bar && hide(bar);\n        },\n\n        hideTotalProgress: function() {\n            this.hideProgress();\n        },\n\n        resetProgress: function(id) {\n            setProgressBarWidth(id, 0);\n            this.hideTotalProgress(id);\n        },\n\n        resetTotalProgress: function() {\n            this.resetProgress();\n        },\n\n        showCancel: function(id) {\n            if (!isCancelDisabled) {\n                var cancel = getCancel(id);\n\n                cancel && qq(cancel).removeClass(options.classes.hide);\n            }\n        },\n\n        hideCancel: function(id) {\n            hide(getCancel(id));\n        },\n\n        isCancel: function(el)  {\n            return qq(el).hasClass(selectorClasses.cancel, true);\n        },\n\n        allowPause: function(id) {\n            show(getPause(id));\n            hide(getContinue(id));\n        },\n\n        uploadPaused: function(id) {\n            this.setStatusText(id, options.text.paused);\n            this.allowContinueButton(id);\n            hide(getSpinner(id));\n        },\n\n        hidePause: function(id) {\n            hide(getPause(id));\n        },\n\n        isPause: function(el) {\n            return qq(el).hasClass(selectorClasses.pause, true);\n        },\n\n        isContinueButton: function(el) {\n            return qq(el).hasClass(selectorClasses.continueButton, true);\n        },\n\n        allowContinueButton: function(id) {\n            show(getContinue(id));\n            hide(getPause(id));\n        },\n\n        uploadContinued: function(id) {\n            this.setStatusText(id, \"\");\n            this.allowPause(id);\n            show(getSpinner(id));\n        },\n\n        showDeleteButton: function(id) {\n            show(getDelete(id));\n        },\n\n        hideDeleteButton: function(id) {\n            hide(getDelete(id));\n        },\n\n        isDeleteButton: function(el) {\n            return qq(el).hasClass(selectorClasses.deleteButton, true);\n        },\n\n        isRetry: function(el) {\n            return qq(el).hasClass(selectorClasses.retry, true);\n        },\n\n        updateSize: function(id, text) {\n            var size = getSize(id);\n\n            if (size) {\n                show(size);\n                qq(size).setText(text);\n            }\n        },\n\n        setStatusText: function(id, text) {\n            var textEl = getTemplateEl(getFile(id), selectorClasses.statusText);\n\n            if (textEl) {\n                /*jshint -W116*/\n                if (text == null) {\n                    qq(textEl).clearText();\n                }\n                else {\n                    qq(textEl).setText(text);\n                }\n            }\n        },\n\n        hideSpinner: function(id) {\n            qq(getFile(id)).removeClass(IN_PROGRESS_CLASS);\n            hide(getSpinner(id));\n        },\n\n        showSpinner: function(id) {\n            qq(getFile(id)).addClass(IN_PROGRESS_CLASS);\n            show(getSpinner(id));\n        },\n\n        generatePreview: function(id, optFileOrBlob, customResizeFunction) {\n            if (!this.isHiddenForever(id)) {\n                thumbGenerationQueue.push({id: id, customResizeFunction: customResizeFunction, optFileOrBlob: optFileOrBlob});\n                !thumbnailQueueMonitorRunning && generateNextQueuedPreview();\n            }\n        },\n\n        updateThumbnail: function(id, thumbnailUrl, showWaitingImg, customResizeFunction) {\n            if (!this.isHiddenForever(id)) {\n                thumbGenerationQueue.push({customResizeFunction: customResizeFunction, update: true, id: id, thumbnailUrl: thumbnailUrl, showWaitingImg: showWaitingImg});\n                !thumbnailQueueMonitorRunning && generateNextQueuedPreview();\n            }\n        },\n\n        hasDialog: function(type) {\n            return qq.supportedFeatures.dialogElement && !!getDialog(type);\n        },\n\n        showDialog: function(type, message, defaultValue) {\n            var dialog = getDialog(type),\n                messageEl = getTemplateEl(dialog, selectorClasses.dialogMessage),\n                inputEl = dialog.getElementsByTagName(\"INPUT\")[0],\n                cancelBtn = getTemplateEl(dialog, selectorClasses.dialogCancelButton),\n                okBtn = getTemplateEl(dialog, selectorClasses.dialogOkButton),\n                promise = new qq.Promise(),\n\n                closeHandler = function() {\n                    cancelBtn.removeEventListener(\"click\", cancelClickHandler);\n                    okBtn && okBtn.removeEventListener(\"click\", okClickHandler);\n                    promise.failure();\n                },\n\n                cancelClickHandler = function() {\n                    cancelBtn.removeEventListener(\"click\", cancelClickHandler);\n                    dialog.close();\n                },\n\n                okClickHandler = function() {\n                    dialog.removeEventListener(\"close\", closeHandler);\n                    okBtn.removeEventListener(\"click\", okClickHandler);\n                    dialog.close();\n\n                    promise.success(inputEl && inputEl.value);\n                };\n\n            dialog.addEventListener(\"close\", closeHandler);\n            cancelBtn.addEventListener(\"click\", cancelClickHandler);\n            okBtn && okBtn.addEventListener(\"click\", okClickHandler);\n\n            if (inputEl) {\n                inputEl.value = defaultValue;\n            }\n            messageEl.textContent = message;\n\n            dialog.showModal();\n\n            return promise;\n        }\n    });\n};\n",
    "/*globals qq */\n// Base handler for UI (FineUploader mode) events.\n// Some more specific handlers inherit from this one.\nqq.UiEventHandler = function(s, protectedApi) {\n    \"use strict\";\n\n    var disposer = new qq.DisposeSupport(),\n        spec = {\n            eventType: \"click\",\n            attachTo: null,\n            onHandled: function(target, event) {}\n        };\n\n    // This makes up the \"public\" API methods that will be accessible\n    // to instances constructing a base or child handler\n    qq.extend(this, {\n        addHandler: function(element) {\n            addHandler(element);\n        },\n\n        dispose: function() {\n            disposer.dispose();\n        }\n    });\n\n    function addHandler(element) {\n        disposer.attach(element, spec.eventType, function(event) {\n            // Only in IE: the `event` is a property of the `window`.\n            event = event || window.event;\n\n            // On older browsers, we must check the `srcElement` instead of the `target`.\n            var target = event.target || event.srcElement;\n\n            spec.onHandled(target, event);\n        });\n    }\n\n    // These make up the \"protected\" API methods that children of this base handler will utilize.\n    qq.extend(protectedApi, {\n        getFileIdFromItem: function(item) {\n            return item.qqFileId;\n        },\n\n        getDisposeSupport: function() {\n            return disposer;\n        }\n    });\n\n    qq.extend(spec, s);\n\n    if (spec.attachTo) {\n        addHandler(spec.attachTo);\n    }\n};\n",
    "/* global qq */\nqq.FileButtonsClickHandler = function(s) {\n    \"use strict\";\n\n    var inheritedInternalApi = {},\n        spec = {\n            templating: null,\n            log: function(message, lvl) {},\n            onDeleteFile: function(fileId) {},\n            onCancel: function(fileId) {},\n            onRetry: function(fileId) {},\n            onPause: function(fileId) {},\n            onContinue: function(fileId) {},\n            onGetName: function(fileId) {}\n        },\n        buttonHandlers = {\n            cancel: function(id) { spec.onCancel(id); },\n            retry:  function(id) { spec.onRetry(id); },\n            deleteButton: function(id) { spec.onDeleteFile(id); },\n            pause: function(id) { spec.onPause(id); },\n            continueButton: function(id) { spec.onContinue(id); }\n        };\n\n    function examineEvent(target, event) {\n        qq.each(buttonHandlers, function(buttonType, handler) {\n            var firstLetterCapButtonType = buttonType.charAt(0).toUpperCase() + buttonType.slice(1),\n                fileId;\n\n            if (spec.templating[\"is\" + firstLetterCapButtonType](target)) {\n                fileId = spec.templating.getFileId(target);\n                qq.preventDefault(event);\n                spec.log(qq.format(\"Detected valid file button click event on file '{}', ID: {}.\", spec.onGetName(fileId), fileId));\n                handler(fileId);\n                return false;\n            }\n        });\n    }\n\n    qq.extend(spec, s);\n\n    spec.eventType = \"click\";\n    spec.onHandled = examineEvent;\n    spec.attachTo = spec.templating.getFileList();\n\n    qq.extend(this, new qq.UiEventHandler(spec, inheritedInternalApi));\n};\n",
    "/*globals qq */\n// Child of FilenameEditHandler.  Used to detect click events on filename display elements.\nqq.FilenameClickHandler = function(s) {\n    \"use strict\";\n\n    var inheritedInternalApi = {},\n        spec = {\n            templating: null,\n            log: function(message, lvl) {},\n            classes: {\n                file: \"qq-upload-file\",\n                editNameIcon: \"qq-edit-filename-icon\"\n            },\n            onGetUploadStatus: function(fileId) {},\n            onGetName: function(fileId) {}\n        };\n\n    qq.extend(spec, s);\n\n    // This will be called by the parent handler when a `click` event is received on the list element.\n    function examineEvent(target, event) {\n        if (spec.templating.isFileName(target) || spec.templating.isEditIcon(target)) {\n            var fileId = spec.templating.getFileId(target),\n                status = spec.onGetUploadStatus(fileId);\n\n            // We only allow users to change filenames of files that have been submitted but not yet uploaded.\n            if (status === qq.status.SUBMITTED) {\n                spec.log(qq.format(\"Detected valid filename click event on file '{}', ID: {}.\", spec.onGetName(fileId), fileId));\n                qq.preventDefault(event);\n\n                inheritedInternalApi.handleFilenameEdit(fileId, target, true);\n            }\n        }\n    }\n\n    spec.eventType = \"click\";\n    spec.onHandled = examineEvent;\n\n    qq.extend(this, new qq.FilenameEditHandler(spec, inheritedInternalApi));\n};\n",
    "/*globals qq */\n// Child of FilenameEditHandler.  Used to detect focusin events on file edit input elements.\nqq.FilenameInputFocusInHandler = function(s, inheritedInternalApi) {\n    \"use strict\";\n\n    var spec = {\n            templating: null,\n            onGetUploadStatus: function(fileId) {},\n            log: function(message, lvl) {}\n        };\n\n    if (!inheritedInternalApi) {\n        inheritedInternalApi = {};\n    }\n\n    // This will be called by the parent handler when a `focusin` event is received on the list element.\n    function handleInputFocus(target, event) {\n        if (spec.templating.isEditInput(target)) {\n            var fileId = spec.templating.getFileId(target),\n                status = spec.onGetUploadStatus(fileId);\n\n            if (status === qq.status.SUBMITTED) {\n                spec.log(qq.format(\"Detected valid filename input focus event on file '{}', ID: {}.\", spec.onGetName(fileId), fileId));\n                inheritedInternalApi.handleFilenameEdit(fileId, target);\n            }\n        }\n    }\n\n    spec.eventType = \"focusin\";\n    spec.onHandled = handleInputFocus;\n\n    qq.extend(spec, s);\n    qq.extend(this, new qq.FilenameEditHandler(spec, inheritedInternalApi));\n};\n",
    "/*globals qq */\n/**\n * Child of FilenameInputFocusInHandler.  Used to detect focus events on file edit input elements.  This child module is only\n * needed for UAs that do not support the focusin event.  Currently, only Firefox lacks this event.\n *\n * @param spec Overrides for default specifications\n */\nqq.FilenameInputFocusHandler = function(spec) {\n    \"use strict\";\n\n    spec.eventType = \"focus\";\n    spec.attachTo = null;\n\n    qq.extend(this, new qq.FilenameInputFocusInHandler(spec, {}));\n};\n",
    "/*globals qq */\n// Handles edit-related events on a file item (FineUploader mode).  This is meant to be a parent handler.\n// Children will delegate to this handler when specific edit-related actions are detected.\nqq.FilenameEditHandler = function(s, inheritedInternalApi) {\n    \"use strict\";\n\n    var spec = {\n            templating: null,\n            log: function(message, lvl) {},\n            onGetUploadStatus: function(fileId) {},\n            onGetName: function(fileId) {},\n            onSetName: function(fileId, newName) {},\n            onEditingStatusChange: function(fileId, isEditing) {}\n        };\n\n    function getFilenameSansExtension(fileId) {\n        var filenameSansExt = spec.onGetName(fileId),\n            extIdx = filenameSansExt.lastIndexOf(\".\");\n\n        if (extIdx > 0) {\n            filenameSansExt = filenameSansExt.substr(0, extIdx);\n        }\n\n        return filenameSansExt;\n    }\n\n    function getOriginalExtension(fileId) {\n        var origName = spec.onGetName(fileId);\n        return qq.getExtension(origName);\n    }\n\n    // Callback iff the name has been changed\n    function handleNameUpdate(newFilenameInputEl, fileId) {\n        var newName = newFilenameInputEl.value,\n            origExtension;\n\n        if (newName !== undefined && qq.trimStr(newName).length > 0) {\n            origExtension = getOriginalExtension(fileId);\n\n            if (origExtension !== undefined) {\n                newName = newName + \".\" + origExtension;\n            }\n\n            spec.onSetName(fileId, newName);\n        }\n\n        spec.onEditingStatusChange(fileId, false);\n    }\n\n    // The name has been updated if the filename edit input loses focus.\n    function registerInputBlurHandler(inputEl, fileId) {\n        inheritedInternalApi.getDisposeSupport().attach(inputEl, \"blur\", function() {\n            handleNameUpdate(inputEl, fileId);\n        });\n    }\n\n    // The name has been updated if the user presses enter.\n    function registerInputEnterKeyHandler(inputEl, fileId) {\n        inheritedInternalApi.getDisposeSupport().attach(inputEl, \"keyup\", function(event) {\n\n            var code = event.keyCode || event.which;\n\n            if (code === 13) {\n                handleNameUpdate(inputEl, fileId);\n            }\n        });\n    }\n\n    qq.extend(spec, s);\n\n    spec.attachTo = spec.templating.getFileList();\n\n    qq.extend(this, new qq.UiEventHandler(spec, inheritedInternalApi));\n\n    qq.extend(inheritedInternalApi, {\n        handleFilenameEdit: function(id, target, focusInput) {\n            var newFilenameInputEl = spec.templating.getEditInput(id);\n\n            spec.onEditingStatusChange(id, true);\n\n            newFilenameInputEl.value = getFilenameSansExtension(id);\n\n            if (focusInput) {\n                newFilenameInputEl.focus();\n            }\n\n            registerInputBlurHandler(newFilenameInputEl, id);\n            registerInputEnterKeyHandler(newFilenameInputEl, id);\n        }\n    });\n};\n"
  ]
}